{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/QuestionsForm/Form/index.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  splitFormSpacing: {\n    marginTop: \"16px\",\n    marginBottom: \"8px\"\n  }\n}));\n\nconst QuestionForm = props => {\n  const classes = useStyles();\n  return React.createElement(Dialog, {\n    onClose: props.handleClose,\n    open: props.open,\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", props.mode, \" QUESTION\"), React.createElement(IconButton, {\n    className: classes.closeButton,\n    onClick: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: props.data.questiontitle,\n    label: \"Question\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"questiontitle\",\n    onChange: props.onChangeHandler,\n    required: true,\n    error: props.errors.questiontitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" \", React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Options\"), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: props.addParam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"ADD\"))), props.options.map((option, index) => {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      key: \"option_\" + index,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      key: \"option_\" + index,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"option\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      style: {\n        width: \"100%\"\n      },\n      name: \"option\",\n      onChange: e => props.handleChangeOption(e, index),\n      required: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      color: \"secondary\",\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, props.errors.options && props.errors.options[index] && props.errors.options[index])), React.createElement(Grid, {\n      item: true,\n      key: \"option_\" + index,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: e => props.removeOption(e, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))));\n  })), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Difficulty level Of Question\"), React.createElement(Select, {\n    value: props.data.difficultyLevel,\n    name: \"difficultyLevel\",\n    onChange: props.onChangeHandler,\n    error: props.errors.type,\n    input: React.createElement(OutlinedInput, {\n      name: \"difficultyLevel\",\n      labelWidth: 120,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    key: \"easy\",\n    value: \"easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Easy\"), React.createElement(MenuItem, {\n    key: \"medium\",\n    value: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Medium\"), React.createElement(MenuItem, {\n    key: \"hard\",\n    value: \"hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Hard\")))), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Skills Being Tested In Question\"), React.createElement(Select, {\n    value: props.data.diffil,\n    name: \"difficultyLevel\",\n    onChange: props.onChangeHandler,\n    error: props.errors.type,\n    input: React.createElement(OutlinedInput, {\n      name: \"difficultyLevel\",\n      labelWidth: 120,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    key: \"easy\",\n    value: \"easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Easy\"), React.createElement(MenuItem, {\n    key: \"medium\",\n    value: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Medium\"), React.createElement(MenuItem, {\n    key: \"hard\",\n    value: \"hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Hard\")))), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Skills Being Tested:\"), props.skills.map((skill, index) => {\n    return React.createElement(Grid, {\n      container: true,\n      key: \"skill_\" + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, skill)));\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, props.mode, \" Question\")));\n};\n\nexport default QuestionForm;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/QuestionsForm/Form/index.jsx"],"names":["React","Grid","Typography","TextField","Button","DialogActions","DialogContent","Dialog","DialogTitle","FormControl","Select","OutlinedInput","InputLabel","MenuItem","IconButton","CloseIcon","makeStyles","Checkbox","useStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","splitFormSpacing","marginTop","marginBottom","QuestionForm","props","classes","handleClose","open","mode","data","questiontitle","onChangeHandler","errors","addParam","options","map","option","index","width","e","handleChangeOption","removeOption","difficultyLevel","type","diffil","skills","skill","onSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles(theme => ({\n\tcloseButton: {\n\t\tposition: \"absolute\",\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500]\n\t},\n\tsplitFormSpacing: {\n\t\tmarginTop: \"16px\",\n\t\tmarginBottom: \"8px\"\n\t}\n}));\n\nconst QuestionForm = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\tonClose={props.handleClose}\n\t\t\topen={props.open}\n\t\t\tfullWidth\n\t\t\tmaxWidth=\"md\"\n\t\t\tdisableBackdropClick={true}>\n\t\t\t<DialogTitle>\n\t\t\t\t<Typography variant=\"h3\"> {props.mode} QUESTION</Typography>\n\n\t\t\t\t<IconButton className={classes.closeButton} onClick={props.handleClose}>\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</IconButton>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={props.data.questiontitle}\n\t\t\t\t\t\tlabel=\"Question\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"questiontitle\"\n\t\t\t\t\t\tonChange={props.onChangeHandler}\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\terror={props.errors.questiontitle}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<Grid container spacing={5}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\tOptions\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={props.addParam}>\n\t\t\t\t\t\t\t\tADD\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{props.options.map((option, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid item key={\"option_\" + index} xs={4}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"primary checkbox\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item key={\"option_\" + index} xs={4}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tlabel=\"option\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\tname=\"option\"\n\t\t\t\t\t\t\t\t\t\tonChange={e => props.handleChangeOption(e, index)}\n\t\t\t\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography color=\"secondary\" variant=\"caption\">\n\t\t\t\t\t\t\t\t\t\t{props.errors.options &&\n\t\t\t\t\t\t\t\t\t\t\tprops.errors.options[index] &&\n\t\t\t\t\t\t\t\t\t\t\tprops.errors.options[index]}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item key={\"option_\" + index} xs={4}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"primary checkbox\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t\t\t\t<IconButton onClick={e => props.removeOption(e, index)}>\n\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t\t\t\t<InputLabel>Difficulty level Of Question</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={props.data.difficultyLevel}\n\t\t\t\t\t\t\tname=\"difficultyLevel\"\n\t\t\t\t\t\t\tonChange={props.onChangeHandler}\n\t\t\t\t\t\t\terror={props.errors.type}\n\t\t\t\t\t\t\tinput={<OutlinedInput name=\"difficultyLevel\" labelWidth={120} />}>\n\t\t\t\t\t\t\t<MenuItem key=\"easy\" value=\"easy\">\n\t\t\t\t\t\t\t\tEasy\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"medium\" value=\"medium\">\n\t\t\t\t\t\t\t\tMedium\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"hard\" value=\"hard\">\n\t\t\t\t\t\t\t\tHard\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t\t\t\t<InputLabel>Skills Being Tested In Question</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={props.data.diffil}\n\t\t\t\t\t\t\tname=\"difficultyLevel\"\n\t\t\t\t\t\t\tonChange={props.onChangeHandler}\n\t\t\t\t\t\t\terror={props.errors.type}\n\t\t\t\t\t\t\tinput={<OutlinedInput name=\"difficultyLevel\" labelWidth={120} />}>\n\t\t\t\t\t\t\t<MenuItem key=\"easy\" value=\"easy\">\n\t\t\t\t\t\t\t\tEasy\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"medium\" value=\"medium\">\n\t\t\t\t\t\t\t\tMedium\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"hard\" value=\"hard\">\n\t\t\t\t\t\t\t\tHard\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<Typography>Skills Being Tested:</Typography>\n\t\t\t\t\t{props.skills.map((skill, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid container key={\"skill_\" + index}>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"primary checkbox\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{skill}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={props.onSubmit}>\n\t\t\t\t\t{props.mode} Question\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nexport default QuestionForm;\n"]},"metadata":{},"sourceType":"module"}