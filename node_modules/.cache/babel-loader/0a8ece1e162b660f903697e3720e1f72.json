{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\nimport { sendScheduledata, disableQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { loadStudentGroups, loadLectures } from \"api/quizzes\";\nimport { StudentGroup, Lecture } from \"serializers/quiz\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport swal from \"sweetalert\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass schedulequiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadreceipents = () => {\n      loadStudentGroups(this.props.token).then(data => {\n        let studentgroups = data.groups.map(group => {\n          return new StudentGroup(group);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...studentgroups]\n          };\n        });\n      }).catch();\n      loadLectures(this.props.token).then(data => {\n        let lectures = data.lectures.map(lecture => {\n          return new Lecture(lecture);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...lectures]\n          };\n        });\n      }).catch();\n    };\n\n    this.startdateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            startdate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            startdate: \"\"\n          })\n        };\n      });\n    };\n\n    this.enddateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            enddate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            enddate: \"\"\n          })\n        };\n      });\n    };\n\n    this.timelimitHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            timelimit: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            timelimit: \"\"\n          })\n        };\n      });\n    };\n\n    this.onSelectChangeHandler = e => {\n      let receipents = [...e.target.value];\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            receipents: receipents\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            receipents: null\n          })\n        };\n      });\n    };\n\n    this.schedulequizHandler = () => {\n      // validation of user input\n      let errors = validate(this.state.data, {\n        startdate: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            earliest: moment.utc(),\n            message: \"Cannot be before Today's date\"\n          }\n        },\n        enddate: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            earliest: this.state.data.startdate,\n            message: \"Cannot be before Start date\"\n          }\n        },\n        timelimit: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        receipents: {\n          presence: {\n            allowEmpty: false,\n            message: \"are required\"\n          }\n        }\n      });\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        this.sendScheduledata();\n      }\n    };\n\n    this.sendScheduledata = () => {\n      let sendTO = this.state.data.receipents.map(receipent => {\n        let obj = JSON.parse(receipent);\n        return {\n          type: obj.type,\n          id: obj.id\n        };\n      });\n      let data = {\n        schedule: this.state.data.startdate,\n        expiry: this.state.data.enddate,\n        timeToComplete: this.state.data.timelimit,\n        sendTo: JSON.stringify(sendTO)\n      };\n      sendScheduledata(this.props.token, data, this.props.match.params.quizId).then(data => {\n        this.props.updateSchedulingStatus(this.props.match.params.quizId, 1);\n        swal({\n          title: \"Success\",\n          text: \"Quiz\" + \" has been scheduled successfully\",\n          button: \"Ok\"\n        });\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: error.response.data.message,\n          button: \"Ok\"\n        });\n      });\n    };\n\n    this.disable = () => {\n      disableQuiz(this.props.token, this.props.match.params.quizId).then(data => {\n        this.props.updateSchedulingStatus(this.props.match.params.quizId, 2);\n        swal({\n          title: \"Success\",\n          text: \"Quiz\" + \" has been disabled\",\n          button: \"Ok\"\n        });\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: error.response.data.message,\n          button: \"Ok\"\n        });\n      });\n    };\n\n    this.state = {\n      data: {\n        startdate: \"\",\n        enddate: \"\",\n        timelimit: \"\",\n        receipents: []\n      },\n      receipents: [],\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadreceipents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.props.numberOfQuestions >= 5 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.props.quiztitle), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"9px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Scheduling Status:\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.props.schedulingStatus), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), this.props.schedulingStatus === \"Scheduled\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Start Date:\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.props.startdate), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"End Date:\"), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      display: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.props.enddate)) : null), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: this.props.classes.splitFormSpacing,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Start Date:\"), React.createElement(TextField, {\n      type: \"datetime-local\",\n      onChange: this.startdateHandler,\n      value: this.state.data.startdate,\n      variant: \"outlined\",\n      fullWidth: true,\n      name: \"Start Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.state.errors.startdate && this.state.errors.startdate[0])), React.createElement(Grid, {\n      className: this.props.classes.splitFormSpacing,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"End Date:\"), React.createElement(TextField, {\n      type: \"datetime-local\",\n      onChange: this.enddateHandler,\n      value: this.state.data.enddate,\n      variant: \"outlined\",\n      fullWidth: true,\n      name: \"End Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, this.state.errors.enddate && this.state.errors.enddate[0]))), React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: this.props.classes.splitFormSpacing,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Time limit (in seconds)\",\n      type: \"number\",\n      onChange: this.timelimitHandler,\n      value: this.state.data.timelimit,\n      variant: \"outlined\",\n      fullWidth: true,\n      name: \"Timelimit in seconds \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, this.state.errors.timelimit && this.state.errors.timelimit[0])), React.createElement(Grid, {\n      className: this.props.classes.splitFormSpacing,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Participants of Quiz\"), React.createElement(Select, {\n      multiple: true,\n      value: this.state.data.receipents,\n      variant: \"outlined\",\n      fullWidth: true,\n      name: \"receipents\",\n      error: this.state.errors.receipents,\n      onChange: this.onSelectChangeHandler,\n      input: React.createElement(OutlinedInput, {\n        name: \"Participants of Quiz\",\n        labelWidth: 120,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }),\n      renderValue: selected => selected.length + \" Participants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, this.state.receipents.map(receipent => {\n      return React.createElement(MenuItem, {\n        key: receipent.id,\n        value: JSON.stringify(receipent),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, receipent.name);\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, this.state.errors.receipents && this.state.errors.receipents[0]))), React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.schedulequizHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Schedule Quiz\")), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.disable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Disable Quiz\")))) : React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Atleast 5 questions should be there in quiz to schedule it.\"));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  let title = \"\";\n  state.quiz.quizlistTabledata.map(quiz => {\n    if (quiz.id == props.match.params.quizId) {\n      title = quiz.title;\n    }\n  });\n  let numberOfQuestions = 0;\n  state.quiz.quizlistTabledata.map(quiz => {\n    if (quiz.id == props.match.params.quizId) {\n      numberOfQuestions = quiz.numberOfQuestions;\n    }\n  });\n  let schedulingStatus = \"\";\n  state.quiz.quizlistTabledata.map(quiz => {\n    if (quiz.id == props.match.params.quizId) {\n      switch (quiz.schedulingStatus) {\n        case 0:\n          schedulingStatus = \"Not Scheduled\";\n          break;\n\n        case 1:\n          schedulingStatus = \"Scheduled\";\n          break;\n\n        case 2:\n          schedulingStatus = \"Disabled\";\n          break;\n\n        case 3:\n          schedulingStatus = \"Expired\";\n          break;\n\n        default:\n          schedulingStatus = \"Default case\";\n      }\n    }\n  });\n  return {\n    token: state.auth.token,\n    quiztitle: title,\n    schedulingStatus: schedulingStatus,\n    numberOfQuestions: numberOfQuestions,\n    startdate: startdate,\n    enddate: enddate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSchedulingStatus: (quizId, updatedStatus) => dispatch({\n      type: \"UPDATE SCHEDULE STATUS\",\n      quizId: quizId,\n      updatedStatus: updatedStatus\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(schedulequiz));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx"],"names":["React","Component","Grid","Typography","TextField","Button","Select","moment","styles","withStyles","validate","sendScheduledata","disableQuiz","connect","loadStudentGroups","loadLectures","StudentGroup","Lecture","OutlinedInput","FormControl","InputLabel","MenuItem","swal","extend","validators","datetime","parse","value","options","utc","format","dateOnly","schedulequiz","constructor","props","loadreceipents","token","then","data","studentgroups","groups","map","group","setState","prevState","receipents","catch","lectures","lecture","startdateHandler","e","target","startdate","errors","enddateHandler","enddate","timelimitHandler","timelimit","onSelectChangeHandler","schedulequizHandler","state","presence","allowEmpty","message","earliest","sendTO","receipent","obj","JSON","type","id","schedule","expiry","timeToComplete","sendTo","stringify","match","params","quizId","updateSchedulingStatus","title","text","button","error","response","disable","componentDidMount","render","classes","root","numberOfQuestions","textAlign","quiztitle","marginTop","schedulingStatus","splitFormSpacing","selected","length","name","mapStateToProps","quiz","quizlistTabledata","auth","mapDispatchToProps","dispatch","updatedStatus"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,aAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,aAAhD;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,kBAAtC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACAZ,QAAQ,CAACa,MAAT,CAAgBb,QAAQ,CAACc,UAAT,CAAoBC,QAApC,EAA8C;AAC7C;AACA;AACAC,EAAAA,KAAK,EAAE,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC/B,WAAO,CAACrB,MAAM,CAACsB,GAAP,CAAWF,KAAX,CAAR;AACA,GAL4C;AAM7C;AACAG,EAAAA,MAAM,EAAE,UAASH,KAAT,EAAgBC,OAAhB,EAAyB;AAChC,QAAIE,MAAM,GAAGF,OAAO,CAACG,QAAR,GAAmB,YAAnB,GAAkC,qBAA/C;AACA,WAAOxB,MAAM,CAACsB,GAAP,CAAWF,KAAX,EAAkBG,MAAlB,CAAyBA,MAAzB,CAAP;AACA;AAV4C,CAA9C;;AAaA,MAAME,YAAN,SAA2B/B,SAA3B,CAAqC;AACpCgC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAkBnBC,cAlBmB,GAkBF,MAAM;AACtBrB,MAAAA,iBAAiB,CAAC,KAAKoB,KAAL,CAAWE,KAAZ,CAAjB,CACEC,IADF,CACOC,IAAI,IAAI;AACb,YAAIC,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IAAI;AAC5C,iBAAO,IAAI1B,YAAJ,CAAiB0B,KAAjB,CAAP;AACA,SAFmB,CAApB;AAIA,aAAKC,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNC,YAAAA,UAAU,EAAE,CAAC,GAAGD,SAAS,CAACC,UAAd,EAA0B,GAAGN,aAA7B;AADN,WAAP;AAGA,SAJD;AAKA,OAXF,EAYEO,KAZF;AAcA/B,MAAAA,YAAY,CAAC,KAAKmB,KAAL,CAAWE,KAAZ,CAAZ,CACEC,IADF,CACOC,IAAI,IAAI;AACb,YAAIS,QAAQ,GAAGT,IAAI,CAACS,QAAL,CAAcN,GAAd,CAAkBO,OAAO,IAAI;AAC3C,iBAAO,IAAI/B,OAAJ,CAAY+B,OAAZ,CAAP;AACA,SAFc,CAAf;AAIA,aAAKL,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNC,YAAAA,UAAU,EAAE,CAAC,GAAGD,SAAS,CAACC,UAAd,EAA0B,GAAGE,QAA7B;AADN,WAAP;AAGA,SAJD;AAKA,OAXF,EAYED,KAZF;AAaA,KA9CkB;;AAAA,SAgDnBG,gBAhDmB,GAgDAC,CAAC,IAAI;AACvB,UAAIvB,KAAK,GAAGuB,CAAC,CAACC,MAAF,CAASxB,KAArB;AACA,WAAKgB,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNN,UAAAA,IAAI,oBAAOM,SAAS,CAACN,IAAjB;AAAuBc,YAAAA,SAAS,EAAEzB;AAAlC,YADE;AAEN0B,UAAAA,MAAM,oBAAOT,SAAS,CAACS,MAAjB;AAAyBD,YAAAA,SAAS,EAAE;AAApC;AAFA,SAAP;AAIA,OALD;AAMA,KAxDkB;;AAAA,SA0DnBE,cA1DmB,GA0DFJ,CAAC,IAAI;AACrB,UAAIvB,KAAK,GAAGuB,CAAC,CAACC,MAAF,CAASxB,KAArB;AACA,WAAKgB,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNN,UAAAA,IAAI,oBAAOM,SAAS,CAACN,IAAjB;AAAuBiB,YAAAA,OAAO,EAAE5B;AAAhC,YADE;AAEN0B,UAAAA,MAAM,oBAAOT,SAAS,CAACS,MAAjB;AAAyBE,YAAAA,OAAO,EAAE;AAAlC;AAFA,SAAP;AAIA,OALD;AAMA,KAlEkB;;AAAA,SAoEnBC,gBApEmB,GAoEAN,CAAC,IAAI;AACvB,UAAIvB,KAAK,GAAGuB,CAAC,CAACC,MAAF,CAASxB,KAArB;AACA,WAAKgB,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNN,UAAAA,IAAI,oBAAOM,SAAS,CAACN,IAAjB;AAAuBmB,YAAAA,SAAS,EAAE9B;AAAlC,YADE;AAEN0B,UAAAA,MAAM,oBAAOT,SAAS,CAACS,MAAjB;AAAyBI,YAAAA,SAAS,EAAE;AAApC;AAFA,SAAP;AAIA,OALD;AAMA,KA5EkB;;AAAA,SA8EnBC,qBA9EmB,GA8EKR,CAAC,IAAI;AAC5B,UAAIL,UAAU,GAAG,CAAC,GAAGK,CAAC,CAACC,MAAF,CAASxB,KAAb,CAAjB;AAEA,WAAKgB,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNN,UAAAA,IAAI,oBACAM,SAAS,CAACN,IADV;AAEHO,YAAAA,UAAU,EAAEA;AAFT,YADE;AAKNQ,UAAAA,MAAM,oBACFT,SAAS,CAACS,MADR;AAELR,YAAAA,UAAU,EAAE;AAFP;AALA,SAAP;AAUA,OAXD;AAYA,KA7FkB;;AAAA,SA+FnBc,mBA/FmB,GA+FG,MAAM;AAC3B;AACA,UAAIN,MAAM,GAAG3C,QAAQ,CAAC,KAAKkD,KAAL,CAAWtB,IAAZ,EAAkB;AACtCc,QAAAA,SAAS,EAAE;AACVS,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B,WADA;AAEVtC,UAAAA,QAAQ,EAAE;AACTuC,YAAAA,QAAQ,EAAEzD,MAAM,CAACsB,GAAP,EADD;AAETkC,YAAAA,OAAO,EAAE;AAFA;AAFA,SAD2B;AAQtCR,QAAAA,OAAO,EAAE;AACRM,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B,WADF;AAERtC,UAAAA,QAAQ,EAAE;AACTuC,YAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWtB,IAAX,CAAgBc,SADjB;AAETW,YAAAA,OAAO,EAAE;AAFA;AAFF,SAR6B;AAetCN,QAAAA,SAAS,EAAE;AACVI,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADA,SAf2B;AAkBtClB,QAAAA,UAAU,EAAE;AACXgB,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADC;AAlB0B,OAAlB,CAArB;;AAuBA,UAAIV,MAAJ,EAAY;AACX,aAAKV,QAAL,CAAc;AACbU,UAAAA;AADa,SAAd;AAGA,OAJD,MAIO;AACN,aAAK1C,gBAAL;AACA;AACD,KA/HkB;;AAAA,SAiInBA,gBAjImB,GAiIA,MAAM;AACxB,UAAIsD,MAAM,GAAG,KAAKL,KAAL,CAAWtB,IAAX,CAAgBO,UAAhB,CAA2BJ,GAA3B,CAA+ByB,SAAS,IAAI;AACxD,YAAIC,GAAG,GAAGC,IAAI,CAAC1C,KAAL,CAAWwC,SAAX,CAAV;AAEA,eAAO;AACNG,UAAAA,IAAI,EAAEF,GAAG,CAACE,IADJ;AAENC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAFF,SAAP;AAIA,OAPY,CAAb;AASA,UAAIhC,IAAI,GAAG;AACViC,QAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWtB,IAAX,CAAgBc,SADhB;AAEVoB,QAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWtB,IAAX,CAAgBiB,OAFd;AAGVkB,QAAAA,cAAc,EAAE,KAAKb,KAAL,CAAWtB,IAAX,CAAgBmB,SAHtB;AAIViB,QAAAA,MAAM,EAAEN,IAAI,CAACO,SAAL,CAAeV,MAAf;AAJE,OAAX;AAOAtD,MAAAA,gBAAgB,CAAC,KAAKuB,KAAL,CAAWE,KAAZ,EAAmBE,IAAnB,EAAyB,KAAKJ,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,MAAjD,CAAhB,CACEzC,IADF,CACOC,IAAI,IAAI;AACb,aAAKJ,KAAL,CAAW6C,sBAAX,CAAkC,KAAK7C,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,MAA1D,EAAkE,CAAlE;AACAxD,QAAAA,IAAI,CAAC;AACJ0D,UAAAA,KAAK,EAAE,SADH;AAEJC,UAAAA,IAAI,EAAE,SAAS,kCAFX;AAIJC,UAAAA,MAAM,EAAE;AAJJ,SAAD,CAAJ;AAMA,OATF,EAUEpC,KAVF,CAUQqC,KAAK,IAAI;AACf7D,QAAAA,IAAI,CAAC;AACJ0D,UAAAA,KAAK,EAAE,OADH;AAEJC,UAAAA,IAAI,EAAEE,KAAK,CAACC,QAAN,CAAe9C,IAAf,CAAoByB,OAFtB;AAIJmB,UAAAA,MAAM,EAAE;AAJJ,SAAD,CAAJ;AAMA,OAjBF;AAkBA,KApKkB;;AAAA,SAqKnBG,OArKmB,GAqKT,MAAM;AACfzE,MAAAA,WAAW,CAAC,KAAKsB,KAAL,CAAWE,KAAZ,EAAmB,KAAKF,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,MAA3C,CAAX,CACEzC,IADF,CACOC,IAAI,IAAI;AACb,aAAKJ,KAAL,CAAW6C,sBAAX,CAAkC,KAAK7C,KAAL,CAAW0C,KAAX,CAAiBC,MAAjB,CAAwBC,MAA1D,EAAkE,CAAlE;AACAxD,QAAAA,IAAI,CAAC;AACJ0D,UAAAA,KAAK,EAAE,SADH;AAEJC,UAAAA,IAAI,EAAE,SAAS,oBAFX;AAIJC,UAAAA,MAAM,EAAE;AAJJ,SAAD,CAAJ;AAMA,OATF,EAUEpC,KAVF,CAUQqC,KAAK,IAAI;AACf7D,QAAAA,IAAI,CAAC;AACJ0D,UAAAA,KAAK,EAAE,OADH;AAEJC,UAAAA,IAAI,EAAEE,KAAK,CAACC,QAAN,CAAe9C,IAAf,CAAoByB,OAFtB;AAIJmB,UAAAA,MAAM,EAAE;AAJJ,SAAD,CAAJ;AAMA,OAjBF;AAkBA,KAxLkB;;AAElB,SAAKtB,KAAL,GAAa;AACZtB,MAAAA,IAAI,EAAE;AACLc,QAAAA,SAAS,EAAE,EADN;AAELG,QAAAA,OAAO,EAAE,EAFJ;AAGLE,QAAAA,SAAS,EAAE,EAHN;AAILZ,QAAAA,UAAU,EAAE;AAJP,OADM;AAOZA,MAAAA,UAAU,EAAE,EAPA;AAQZQ,MAAAA,MAAM,EAAE;AARI,KAAb;AAUA;;AAEDiC,EAAAA,iBAAiB,GAAG;AACnB,SAAKnD,cAAL;AACA;;AAyKDoD,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAE,KAAKrD,KAAL,CAAWsD,OAAX,CAAmBC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKvD,KAAL,CAAWwD,iBAAX,IAAgC,CAAhC,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAA4C,MAAA,OAAO,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKzD,KAAL,CAAW0D,SADb,CADD,EAIC;AAAK,MAAA,KAAK,EAAE;AAAED,QAAAA,SAAS,EAAE,QAAb;AAAuBE,QAAAA,SAAS,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,OAAO,EAAC,QAFT;AAGC,MAAA,KAAK,EAAC,eAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,EAOC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK3D,KAAL,CAAW4D,gBADb,CAPD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,EAWE,KAAK5D,KAAL,CAAW4D,gBAAX,KAAgC,WAAhC,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,OAAO,EAAC,QAFT;AAGC,MAAA,KAAK,EAAC,eAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAOC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK5D,KAAL,CAAWkB,SADb,CAPD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,EAWC,oBAAC,UAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,OAAO,EAAC,QAFT;AAGC,MAAA,KAAK,EAAC,eAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXD,EAiBC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKlB,KAAL,CAAWqB,OADb,CAjBD,CADA,GAsBG,IAjCL,CAJD,EAuCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCD,EAwCC,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWsD,OAAX,CAAmBO,gBAApC;AAAsD,MAAA,IAAI,MAA1D;AAA2D,MAAA,EAAE,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAIC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,gBADN;AAEC,MAAA,QAAQ,EAAE,KAAK9C,gBAFhB;AAGC,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWtB,IAAX,CAAgBc,SAHxB;AAIC,MAAA,OAAO,EAAC,UAJT;AAKC,MAAA,SAAS,MALV;AAMC,MAAA,IAAI,EAAC,YANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAcC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKQ,KAAL,CAAWP,MAAX,CAAkBD,SAAlB,IACA,KAAKQ,KAAL,CAAWP,MAAX,CAAkBD,SAAlB,CAA4B,CAA5B,CAFF,CAdD,CADD,EAoBC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWsD,OAAX,CAAmBO,gBAApC;AAAsD,MAAA,IAAI,MAA1D;AAA2D,MAAA,EAAE,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAIC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,gBADN;AAEC,MAAA,QAAQ,EAAE,KAAKzC,cAFhB;AAGC,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWtB,IAAX,CAAgBiB,OAHxB;AAIC,MAAA,OAAO,EAAC,UAJT;AAKC,MAAA,SAAS,MALV;AAMC,MAAA,IAAI,EAAC,UANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAcC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKK,KAAL,CAAWP,MAAX,CAAkBE,OAAlB,IAA6B,KAAKK,KAAL,CAAWP,MAAX,CAAkBE,OAAlB,CAA0B,CAA1B,CAD/B,CAdD,CApBD,CAxCD,EA+EC,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWsD,OAAX,CAAmBO,gBAApC;AAAsD,MAAA,IAAI,MAA1D;AAA2D,MAAA,EAAE,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AACC,MAAA,KAAK,EAAC,yBADP;AAEC,MAAA,IAAI,EAAC,QAFN;AAGC,MAAA,QAAQ,EAAE,KAAKvC,gBAHhB;AAIC,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWtB,IAAX,CAAgBmB,SAJxB;AAKC,MAAA,OAAO,EAAC,UALT;AAMC,MAAA,SAAS,MANV;AAOC,MAAA,IAAI,EAAC,uBAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,EAYC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKG,KAAL,CAAWP,MAAX,CAAkBI,SAAlB,IACA,KAAKG,KAAL,CAAWP,MAAX,CAAkBI,SAAlB,CAA4B,CAA5B,CAFF,CAZD,CADD,EAkBC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWsD,OAAX,CAAmBO,gBAApC;AAAsD,MAAA,IAAI,MAA1D;AAA2D,MAAA,EAAE,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAgC,MAAA,SAAS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,EAEC,oBAAC,MAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWtB,IAAX,CAAgBO,UAFxB;AAGC,MAAA,OAAO,EAAC,UAHT;AAIC,MAAA,SAAS,MAJV;AAKC,MAAA,IAAI,EAAC,YALN;AAMC,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWP,MAAX,CAAkBR,UAN1B;AAOC,MAAA,QAAQ,EAAE,KAAKa,qBAPhB;AAQC,MAAA,KAAK,EACJ,oBAAC,aAAD;AACC,QAAA,IAAI,EAAC,sBADN;AAEC,QAAA,UAAU,EAAE,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF;AAcC,MAAA,WAAW,EAAEsC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,eAd5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,KAAKrC,KAAL,CAAWf,UAAX,CAAsBJ,GAAtB,CAA0ByB,SAAS,IAAI;AACvC,aACC,oBAAC,QAAD;AACC,QAAA,GAAG,EAAEA,SAAS,CAACI,EADhB;AAEC,QAAA,KAAK,EAAEF,IAAI,CAACO,SAAL,CAAeT,SAAf,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGEA,SAAS,CAACgC,IAHZ,CADD;AAOA,KARA,CAfF,CAFD,CADD,EA6BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BD,EA8BC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKtC,KAAL,CAAWP,MAAX,CAAkBR,UAAlB,IACA,KAAKe,KAAL,CAAWP,MAAX,CAAkBR,UAAlB,CAA6B,CAA7B,CAFF,CA9BD,CAlBD,CA/ED,EAsIC,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,KAAK,EAAC,SAFP;AAGC,MAAA,OAAO,EAAE,KAAKc,mBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,CADD,EAUC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,KAAK,EAAC,SAFP;AAGC,MAAA,OAAO,EAAE,KAAK0B,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CAVD,CAtID,CADA,GA4JA,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEA7JF,CADD;AAoKA;;AA/VmC;;AAkWrC,MAAMc,eAAe,GAAG,CAACvC,KAAD,EAAQ1B,KAAR,KAAkB;AACzC,MAAI8C,KAAK,GAAG,EAAZ;AACApB,EAAAA,KAAK,CAACwC,IAAN,CAAWC,iBAAX,CAA6B5D,GAA7B,CAAiC2D,IAAI,IAAI;AACxC,QAAIA,IAAI,CAAC9B,EAAL,IAAWpC,KAAK,CAAC0C,KAAN,CAAYC,MAAZ,CAAmBC,MAAlC,EAA0C;AACzCE,MAAAA,KAAK,GAAGoB,IAAI,CAACpB,KAAb;AACA;AACD,GAJD;AAMA,MAAIU,iBAAiB,GAAG,CAAxB;AACA9B,EAAAA,KAAK,CAACwC,IAAN,CAAWC,iBAAX,CAA6B5D,GAA7B,CAAiC2D,IAAI,IAAI;AACxC,QAAIA,IAAI,CAAC9B,EAAL,IAAWpC,KAAK,CAAC0C,KAAN,CAAYC,MAAZ,CAAmBC,MAAlC,EAA0C;AACzCY,MAAAA,iBAAiB,GAAGU,IAAI,CAACV,iBAAzB;AACA;AACD,GAJD;AAMA,MAAII,gBAAgB,GAAG,EAAvB;AACAlC,EAAAA,KAAK,CAACwC,IAAN,CAAWC,iBAAX,CAA6B5D,GAA7B,CAAiC2D,IAAI,IAAI;AACxC,QAAIA,IAAI,CAAC9B,EAAL,IAAWpC,KAAK,CAAC0C,KAAN,CAAYC,MAAZ,CAAmBC,MAAlC,EAA0C;AACzC,cAAQsB,IAAI,CAACN,gBAAb;AACC,aAAK,CAAL;AACCA,UAAAA,gBAAgB,GAAG,eAAnB;AACA;;AACD,aAAK,CAAL;AACCA,UAAAA,gBAAgB,GAAG,WAAnB;AACA;;AAED,aAAK,CAAL;AACCA,UAAAA,gBAAgB,GAAG,UAAnB;AACA;;AAED,aAAK,CAAL;AACCA,UAAAA,gBAAgB,GAAG,SAAnB;AACA;;AACD;AACCA,UAAAA,gBAAgB,GAAG,cAAnB;AAhBF;AAkBA;AACD,GArBD;AAuBA,SAAO;AACN1D,IAAAA,KAAK,EAAEwB,KAAK,CAAC0C,IAAN,CAAWlE,KADZ;AAENwD,IAAAA,SAAS,EAAEZ,KAFL;AAGNc,IAAAA,gBAAgB,EAAEA,gBAHZ;AAINJ,IAAAA,iBAAiB,EAAEA,iBAJb;AAKNtC,IAAAA,SAAS,EAAEA,SALL;AAMNG,IAAAA,OAAO,EAAEA;AANH,GAAP;AAQA,CA/CD;;AAiDA,MAAMgD,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNzB,IAAAA,sBAAsB,EAAE,CAACD,MAAD,EAAS2B,aAAT,KACvBD,QAAQ,CAAC;AACRnC,MAAAA,IAAI,EAAE,wBADE;AAERS,MAAAA,MAAM,EAAEA,MAFA;AAGR2B,MAAAA,aAAa,EAAEA;AAHP,KAAD;AAFH,GAAP;AAQA,CATD;;AAWA,eAAe5F,OAAO,CACrBsF,eADqB,EAErBI,kBAFqB,CAAP,CAGb9F,UAAU,CAACD,MAAD,CAAV,CAAmBwB,YAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\nimport { sendScheduledata, disableQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { loadStudentGroups, loadLectures } from \"api/quizzes\";\nimport { StudentGroup, Lecture } from \"serializers/quiz\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport swal from \"sweetalert\";\nvalidate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nclass schedulequiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tstartdate: \"\",\n\t\t\t\tenddate: \"\",\n\t\t\t\ttimelimit: \"\",\n\t\t\t\treceipents: []\n\t\t\t},\n\t\t\treceipents: [],\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadreceipents();\n\t}\n\n\tloadreceipents = () => {\n\t\tloadStudentGroups(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet studentgroups = data.groups.map(group => {\n\t\t\t\t\treturn new StudentGroup(group);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...studentgroups]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\n\t\tloadLectures(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet lectures = data.lectures.map(lecture => {\n\t\t\t\t\treturn new Lecture(lecture);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...lectures]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\t};\n\n\tstartdateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, startdate: value },\n\t\t\t\terrors: { ...prevState.errors, startdate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tenddateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, enddate: value },\n\t\t\t\terrors: { ...prevState.errors, enddate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\ttimelimitHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, timelimit: value },\n\t\t\t\terrors: { ...prevState.errors, timelimit: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tonSelectChangeHandler = e => {\n\t\tlet receipents = [...e.target.value];\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\treceipents: receipents\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\treceipents: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tschedulequizHandler = () => {\n\t\t// validation of user input\n\t\tlet errors = validate(this.state.data, {\n\t\t\tstartdate: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tearliest: moment.utc(),\n\t\t\t\t\tmessage: \"Cannot be before Today's date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tenddate: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tearliest: this.state.data.startdate,\n\t\t\t\t\tmessage: \"Cannot be before Start date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\ttimelimit: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t},\n\t\t\treceipents: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"are required\" }\n\t\t\t}\n\t\t});\n\n\t\tif (errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors\n\t\t\t});\n\t\t} else {\n\t\t\tthis.sendScheduledata();\n\t\t}\n\t};\n\n\tsendScheduledata = () => {\n\t\tlet sendTO = this.state.data.receipents.map(receipent => {\n\t\t\tlet obj = JSON.parse(receipent);\n\n\t\t\treturn {\n\t\t\t\ttype: obj.type,\n\t\t\t\tid: obj.id\n\t\t\t};\n\t\t});\n\n\t\tlet data = {\n\t\t\tschedule: this.state.data.startdate,\n\t\t\texpiry: this.state.data.enddate,\n\t\t\ttimeToComplete: this.state.data.timelimit,\n\t\t\tsendTo: JSON.stringify(sendTO)\n\t\t};\n\n\t\tsendScheduledata(this.props.token, data, this.props.match.params.quizId)\n\t\t\t.then(data => {\n\t\t\t\tthis.props.updateSchedulingStatus(this.props.match.params.quizId, 1);\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext: \"Quiz\" + \" has been scheduled successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t});\n\t};\n\tdisable = () => {\n\t\tdisableQuiz(this.props.token, this.props.match.params.quizId)\n\t\t\t.then(data => {\n\t\t\t\tthis.props.updateSchedulingStatus(this.props.match.params.quizId, 2);\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext: \"Quiz\" + \" has been disabled\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.classes.root}>\n\t\t\t\t{this.props.numberOfQuestions >= 5 ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography style={{ textAlign: \"center\" }} variant=\"h3\">\n\t\t\t\t\t\t\t{this.props.quiztitle}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div style={{ textAlign: \"center\", marginTop: \"9px\" }}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\tcolor=\"textSecondary\">\n\t\t\t\t\t\t\t\tScheduling Status:\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" display=\"inline\">\n\t\t\t\t\t\t\t\t{this.props.schedulingStatus}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{this.props.schedulingStatus === \"Scheduled\" ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\tStart Date:\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" display=\"inline\">\n\t\t\t\t\t\t\t\t\t\t{this.props.startdate}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\tEnd Date:\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" display=\"inline\">\n\t\t\t\t\t\t\t\t\t\t{this.props.enddate}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t<Grid className={this.props.classes.splitFormSpacing} item xs={6}>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\tStart Date:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\tonChange={this.startdateHandler}\n\t\t\t\t\t\t\t\t\tvalue={this.state.data.startdate}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"Start Date\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\t{this.state.errors.startdate &&\n\t\t\t\t\t\t\t\t\t\tthis.state.errors.startdate[0]}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid className={this.props.classes.splitFormSpacing} item xs={6}>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\tEnd Date:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\tonChange={this.enddateHandler}\n\t\t\t\t\t\t\t\t\tvalue={this.state.data.enddate}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"End Date\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\t{this.state.errors.enddate && this.state.errors.enddate[0]}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t<Grid className={this.props.classes.splitFormSpacing} item xs={6}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel=\"Time limit (in seconds)\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tonChange={this.timelimitHandler}\n\t\t\t\t\t\t\t\t\tvalue={this.state.data.timelimit}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"Timelimit in seconds \"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\t{this.state.errors.timelimit &&\n\t\t\t\t\t\t\t\t\t\tthis.state.errors.timelimit[0]}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid className={this.props.classes.splitFormSpacing} item xs={6}>\n\t\t\t\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t\t\t\t\t\t\t<InputLabel>Participants of Quiz</InputLabel>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.data.receipents}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tname=\"receipents\"\n\t\t\t\t\t\t\t\t\t\terror={this.state.errors.receipents}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onSelectChangeHandler}\n\t\t\t\t\t\t\t\t\t\tinput={\n\t\t\t\t\t\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"Participants of Quiz\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabelWidth={120}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\trenderValue={selected => selected.length + \" Participants\"}>\n\t\t\t\t\t\t\t\t\t\t{this.state.receipents.map(receipent => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={receipent.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={JSON.stringify(receipent)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{receipent.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\t{this.state.errors.receipents &&\n\t\t\t\t\t\t\t\t\t\tthis.state.errors.receipents[0]}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={this.schedulequizHandler}>\n\t\t\t\t\t\t\t\t\tSchedule Quiz\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={this.disable}>\n\t\t\t\t\t\t\t\t\tDisable Quiz\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<Typography align=\"center\" variant=\"h3\">\n\t\t\t\t\t\tAtleast 5 questions should be there in quiz to schedule it.\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, props) => {\n\tlet title = \"\";\n\tstate.quiz.quizlistTabledata.map(quiz => {\n\t\tif (quiz.id == props.match.params.quizId) {\n\t\t\ttitle = quiz.title;\n\t\t}\n\t});\n\n\tlet numberOfQuestions = 0;\n\tstate.quiz.quizlistTabledata.map(quiz => {\n\t\tif (quiz.id == props.match.params.quizId) {\n\t\t\tnumberOfQuestions = quiz.numberOfQuestions;\n\t\t}\n\t});\n\n\tlet schedulingStatus = \"\";\n\tstate.quiz.quizlistTabledata.map(quiz => {\n\t\tif (quiz.id == props.match.params.quizId) {\n\t\t\tswitch (quiz.schedulingStatus) {\n\t\t\t\tcase 0:\n\t\t\t\t\tschedulingStatus = \"Not Scheduled\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tschedulingStatus = \"Scheduled\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tschedulingStatus = \"Disabled\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tschedulingStatus = \"Expired\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tschedulingStatus = \"Default case\";\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tquiztitle: title,\n\t\tschedulingStatus: schedulingStatus,\n\t\tnumberOfQuestions: numberOfQuestions,\n\t\tstartdate: startdate,\n\t\tenddate: enddate\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tupdateSchedulingStatus: (quizId, updatedStatus) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"UPDATE SCHEDULE STATUS\",\n\t\t\t\tquizId: quizId,\n\t\t\t\tupdatedStatus: updatedStatus\n\t\t\t})\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withStyles(styles)(schedulequiz));\n"]},"metadata":{},"sourceType":"module"}