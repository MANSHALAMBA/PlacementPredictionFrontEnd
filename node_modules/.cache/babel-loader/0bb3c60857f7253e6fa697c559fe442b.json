{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { default as extend } from \"lodash/assignIn\";\nimport { solver } from \"../views/QuizList/utils/sudoku\";\nconst initialState = {\n  projectlistTabledata: []\n};\n\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case \"PUSH PROJECTLIST DATA\":\n      return {\n        projectlistTabledata: action.data\n      };\n      break;\n\n    case \"UPDATE REVIEW\":\n      let projectlistTabledata = [...state.projectlistTabledata];\n      projectlistTabledata = projectlistTabledata.map(project => {\n        if (project.id === action.projectId) {\n          let updatedProject = _objectSpread({}, project);\n\n          updatedProject.milestones = updatedProject.milestones.map(milestone => {\n            if (milestone.id === action.milestoneId) {\n              let updatedmilestone = _objectSpread({}, milestone);\n\n              updatedmilestone.submissions = updatedmilestone.submissions.map(submission => {\n                if (submission.id === action.submissionId) {\n                  let updatedSubmission = _objectSpread({}, submission);\n\n                  updatedSubmission.status = action.updatedReview.status;\n                  updatedSubmission.remark = action.updatedReview.remark;\n                  return updatedSubmission;\n                } else {\n                  return submission;\n                }\n              });\n              return updatedmilestone;\n            } else {\n              return milestone;\n            }\n          });\n          return updatedProject;\n        } else {\n          return project;\n        }\n      });\n      return {\n        projectlistTabledata: projectlistTabledata\n      };\n      break;\n\n    case \"PUSH PROJECT TO PROJECT LIST\":\n      let ProjectlistTabledata = [...state.projectlistTabledata];\n      ProjectlistTabledata.push(action.project);\n      return {\n        projectlistTabledata: ProjectlistTabledata\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/store/reducers/sudoku.js"],"names":["cloneDeep","default","extend","solver","initialState","projectlistTabledata","reducer","state","action","type","data","map","project","id","projectId","updatedProject","milestones","milestone","milestoneId","updatedmilestone","submissions","submission","submissionId","updatedSubmission","status","updatedReview","remark","ProjectlistTabledata","push"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,iBAAlC;AACA,SAASC,MAAT,QAAuB,gCAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,oBAAoB,EAAE;AADH,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAM,GAAG,EAAhC,KAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAO;AACLJ,QAAAA,oBAAoB,EAAEG,MAAM,CAACE;AADxB,OAAP;AAGA;;AACF,SAAK,eAAL;AACE,UAAIL,oBAAoB,GAAG,CAAC,GAAGE,KAAK,CAACF,oBAAV,CAA3B;AACAA,MAAAA,oBAAoB,GAAGA,oBAAoB,CAACM,GAArB,CAAyBC,OAAO,IAAI;AACzD,YAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,SAA1B,EAAqC;AACnC,cAAIC,cAAc,qBAAQH,OAAR,CAAlB;;AAEAG,UAAAA,cAAc,CAACC,UAAf,GAA4BD,cAAc,CAACC,UAAf,CAA0BL,GAA1B,CAC1BM,SAAS,IAAI;AACX,gBAAIA,SAAS,CAACJ,EAAV,KAAiBL,MAAM,CAACU,WAA5B,EAAyC;AACvC,kBAAIC,gBAAgB,qBAAQF,SAAR,CAApB;;AACAE,cAAAA,gBAAgB,CAACC,WAAjB,GAA+BD,gBAAgB,CAACC,WAAjB,CAA6BT,GAA7B,CAC7BU,UAAU,IAAI;AACZ,oBAAIA,UAAU,CAACR,EAAX,KAAkBL,MAAM,CAACc,YAA7B,EAA2C;AACzC,sBAAIC,iBAAiB,qBAAQF,UAAR,CAArB;;AACAE,kBAAAA,iBAAiB,CAACC,MAAlB,GAA2BhB,MAAM,CAACiB,aAAP,CAAqBD,MAAhD;AACAD,kBAAAA,iBAAiB,CAACG,MAAlB,GAA2BlB,MAAM,CAACiB,aAAP,CAAqBC,MAAhD;AACA,yBAAOH,iBAAP;AACD,iBALD,MAKO;AACL,yBAAOF,UAAP;AACD;AACF,eAV4B,CAA/B;AAaA,qBAAOF,gBAAP;AACD,aAhBD,MAgBO;AACL,qBAAOF,SAAP;AACD;AACF,WArByB,CAA5B;AAwBA,iBAAOF,cAAP;AACD,SA5BD,MA4BO;AACL,iBAAOH,OAAP;AACD;AACF,OAhCsB,CAAvB;AAiCA,aAAO;AACLP,QAAAA,oBAAoB,EAAEA;AADjB,OAAP;AAGA;;AAEF,SAAK,8BAAL;AACE,UAAIsB,oBAAoB,GAAG,CAAC,GAAGpB,KAAK,CAACF,oBAAV,CAA3B;AACAsB,MAAAA,oBAAoB,CAACC,IAArB,CAA0BpB,MAAM,CAACI,OAAjC;AACA,aAAO;AACLP,QAAAA,oBAAoB,EAAEsB;AADjB,OAAP;AAGA;;AAEF;AACE,aAAOpB,KAAP;AAvDJ;AAyDD,CA1DD;;AA4DA,eAAeD,OAAf","sourcesContent":["import cloneDeep from \"lodash/cloneDeep\";\nimport { default as extend } from \"lodash/assignIn\";\nimport { solver } from \"../views/QuizList/utils/sudoku\";\n\nconst initialState = {\n  projectlistTabledata: []\n};\n\nconst reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case \"PUSH PROJECTLIST DATA\":\n      return {\n        projectlistTabledata: action.data\n      };\n      break;\n    case \"UPDATE REVIEW\":\n      let projectlistTabledata = [...state.projectlistTabledata];\n      projectlistTabledata = projectlistTabledata.map(project => {\n        if (project.id === action.projectId) {\n          let updatedProject = { ...project };\n\n          updatedProject.milestones = updatedProject.milestones.map(\n            milestone => {\n              if (milestone.id === action.milestoneId) {\n                let updatedmilestone = { ...milestone };\n                updatedmilestone.submissions = updatedmilestone.submissions.map(\n                  submission => {\n                    if (submission.id === action.submissionId) {\n                      let updatedSubmission = { ...submission };\n                      updatedSubmission.status = action.updatedReview.status;\n                      updatedSubmission.remark = action.updatedReview.remark;\n                      return updatedSubmission;\n                    } else {\n                      return submission;\n                    }\n                  }\n                );\n\n                return updatedmilestone;\n              } else {\n                return milestone;\n              }\n            }\n          );\n\n          return updatedProject;\n        } else {\n          return project;\n        }\n      });\n      return {\n        projectlistTabledata: projectlistTabledata\n      };\n      break;\n\n    case \"PUSH PROJECT TO PROJECT LIST\":\n      let ProjectlistTabledata = [...state.projectlistTabledata];\n      ProjectlistTabledata.push(action.project);\n      return {\n        projectlistTabledata: ProjectlistTabledata\n      };\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}