{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      loadProjectList(this.props.token).then(data => {\n        console.log(data.projects);\n        let projects = data.projects.map(project => {\n          return new Project(project);\n        });\n        this.setState(prevState => {\n          return {\n            data: {\n              projects\n            },\n            isLoading: false\n          };\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.columns = [{\n      field: \"id\",\n      title: \"id\",\n      hidden: true,\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      field: \"title\",\n      title: \"Title\",\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      field: \"skills\",\n      title: \"Skills\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      field: \"team\",\n      title: \"Team\",\n      options: {\n        filter: true,\n        sort: false\n      }\n    }, {\n      title: \"View\",\n      render: rowData => React.createElement(IconButton, {\n        onClick: () => this.handleViewProject(rowData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ViewIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))\n    }];\n\n    this.handleViewProject = id => {\n      this.props.history.push(\"/project/\" + id);\n    };\n\n    this.data = [{\n      id: \"dsfsd\",\n      title: \"Joe James\",\n      skills: \"Test Corp\",\n      team: \"Yonkers\"\n    }, {\n      id: \"desd\",\n      title: \"John Walsh\",\n      skills: \"Test Corp\",\n      team: \"Hartford\"\n    }, {\n      id: \"wfsd\",\n      title: \"Bob Herm\",\n      skills: \"Test Corp\",\n      team: \"Tampa\"\n    }, {\n      id: \"dsxcsfsd\",\n      title: \"James Houston\",\n      skills: \"Test Corp\",\n      team: \"Dallas\"\n    }];\n\n    this.handleSelection = rows => {\n      console.log(rows);\n    };\n\n    this.state = {\n      data: {},\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(ProjectToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, !this.state.isLoading ? React.createElement(MaterialTable, {\n      title: \"Project List\",\n      data: this.state.data.projects,\n      columns: this.columns,\n      onSelectionChange: this.handleSelection,\n      options: {\n        filtering: true,\n        selection: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst MapStatetoProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(MapStatetoProps)(withStyles(styles)(ProjectList));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","ProjectToolbar","MaterialTable","IconButton","ViewIcon","Loader","connect","styles","withStyles","loadProjectList","Project","ProjectList","constructor","props","loadData","token","then","data","console","log","projects","map","project","setState","prevState","isLoading","catch","error","columns","field","title","hidden","options","filter","sort","render","rowData","handleViewProject","id","history","push","skills","team","handleSelection","rows","state","componentDidMount","classes","root","content","filtering","selection","MapStatetoProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nclass ProjectList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {},\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadData();\n\t}\n\n\tloadData = () => {\n\t\tloadProjectList(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.projects);\n\t\t\t\tlet projects = data.projects.map(project => {\n\t\t\t\t\treturn new Project(project);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\ttitle: \"id\",\n\t\t\thidden: true,\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfield: \"title\",\n\t\t\ttitle: \"Title\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfield: \"skills\",\n\t\t\ttitle: \"Skills\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfield: \"team\",\n\t\t\ttitle: \"Team\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: \"View\",\n\t\t\trender: rowData => (\n\t\t\t\t<IconButton onClick={() => this.handleViewProject(rowData.id)}>\n\t\t\t\t\t<ViewIcon />\n\t\t\t\t</IconButton>\n\t\t\t)\n\t\t}\n\t];\n\n\thandleViewProject = id => {\n\t\tthis.props.history.push(\"/project/\" + id);\n\t};\n\n\tdata = [\n\t\t{ id: \"dsfsd\", title: \"Joe James\", skills: \"Test Corp\", team: \"Yonkers\" },\n\t\t{\n\t\t\tid: \"desd\",\n\t\t\ttitle: \"John Walsh\",\n\t\t\tskills: \"Test Corp\",\n\t\t\tteam: \"Hartford\"\n\t\t},\n\t\t{ id: \"wfsd\", title: \"Bob Herm\", skills: \"Test Corp\", team: \"Tampa\" },\n\t\t{\n\t\t\tid: \"dsxcsfsd\",\n\t\t\ttitle: \"James Houston\",\n\t\t\tskills: \"Test Corp\",\n\t\t\tteam: \"Dallas\"\n\t\t}\n\t];\n\n\thandleSelection = rows => {\n\t\tconsole.log(rows);\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout title=\"Projects\">\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<ProjectToolbar />\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t{!this.state.isLoading ? (\n\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\ttitle={\"Project List\"}\n\t\t\t\t\t\t\t\tdata={this.state.data.projects}\n\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\tonSelectionChange={this.handleSelection}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\t\tselection: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\n\nconst MapStatetoProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(MapStatetoProps)(withStyles(styles)(ProjectList));\n"]},"metadata":{},"sourceType":"module"}