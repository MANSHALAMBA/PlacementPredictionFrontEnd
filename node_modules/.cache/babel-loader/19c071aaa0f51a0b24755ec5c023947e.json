{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\nimport { OverviewTab, ChatTab, TeamTab, MilestonesTab, ReviewsTab } from \"./components\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {// check for project in redux\n  }\n\n  render() {\n    // const { classes } = this.props;\n    return React.createElement(DashboardLayout, {\n      mode: PROJECT,\n      title: \"Project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/overview\",\n      component: OverviewTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/chat\",\n      component: ChatTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/milestones\",\n      component: MilestonesTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/team\",\n      component: TeamTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/reviews\",\n      component: ReviewsTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/project/:projectId/overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatereview: (projectId, milestoneId, submissionId, updatedReview) => dispatch({\n      type: \"UPDATE REVIEW\",\n      projectId: projectId,\n      milestoneId: milestoneId,\n      submissionId: submissionId,\n      updatedReview: updatedReview\n    })\n  };\n};\n\nexport default compose(connect(mapDispatchToProps), withStyles(styles))(Project); // check for project in redux\n// if found set activeproject to it\n// if not found fetch project and set active project to it","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx"],"names":["React","Component","Route","Switch","Redirect","compose","Dashboard","DashboardLayout","PROJECT","OverviewTab","ChatTab","TeamTab","MilestonesTab","ReviewsTab","styles","withStyles","Project","constructor","props","state","isLoading","componentDidMount","render","mapDispatchToProps","dispatch","updatereview","projectId","milestoneId","submissionId","updatedReview","type","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,SAA7C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SACCC,WADD,EAECC,OAFD,EAGCC,OAHD,EAICC,aAJD,EAKCC,UALD,QAMO,cANP,C,CAQA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,OAAN,SAAsBf,SAAtB,CAAgC;AAC/BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR;AAEA,WACC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEd,OAAvB;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,8BAFN;AAGC,MAAA,SAAS,EAAEC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,0BAAlB;AAA6C,MAAA,SAAS,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,EAOC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,gCAFN;AAGC,MAAA,SAAS,EAAEE,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,EAYC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,0BAAlB;AAA6C,MAAA,SAAS,EAAED,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZD,EAaC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,6BAFN;AAGC,MAAA,SAAS,EAAEE,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAkBC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBD,CADD,CADD;AAwBA;;AAtC8B;;AAwChC,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNC,IAAAA,YAAY,EAAE,CAACC,SAAD,EAAYC,WAAZ,EAAyBC,YAAzB,EAAuCC,aAAvC,KACbL,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAE,eADE;AAERJ,MAAAA,SAAS,EAAEA,SAFH;AAGRC,MAAAA,WAAW,EAAEA,WAHL;AAIRC,MAAAA,YAAY,EAAEA,YAJN;AAKRC,MAAAA,aAAa,EAAEA;AALP,KAAD;AAFH,GAAP;AAUA,CAXD;;AAaA,eAAexB,OAAO,CACrB0B,OAAO,CAACR,kBAAD,CADc,EAErBR,UAAU,CAACD,MAAD,CAFW,CAAP,CAGbE,OAHa,CAAf,C,CAKA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\n\nimport {\n\tOverviewTab,\n\tChatTab,\n\tTeamTab,\n\tMilestonesTab,\n\tReviewsTab\n} from \"./components\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Project extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// check for project in redux\n\t}\n\trender() {\n\t\t// const { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout mode={PROJECT} title=\"Project\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/overview\"\n\t\t\t\t\t\tcomponent={OverviewTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/chat\" component={ChatTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/milestones\"\n\t\t\t\t\t\tcomponent={MilestonesTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/team\" component={TeamTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/reviews\"\n\t\t\t\t\t\tcomponent={ReviewsTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to=\"/project/:projectId/overview\" />\n\t\t\t\t</Switch>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tupdatereview: (projectId, milestoneId, submissionId, updatedReview) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"UPDATE REVIEW\",\n\t\t\t\tprojectId: projectId,\n\t\t\t\tmilestoneId: milestoneId,\n\t\t\t\tsubmissionId: submissionId,\n\t\t\t\tupdatedReview: updatedReview\n\t\t\t})\n\t};\n};\n\nexport default compose(\n\tconnect(mapDispatchToProps),\n\twithStyles(styles)\n)(Project);\n\n// check for project in redux\n// if found set activeproject to it\n// if not found fetch project and set active project to it\n"]},"metadata":{},"sourceType":"module"}