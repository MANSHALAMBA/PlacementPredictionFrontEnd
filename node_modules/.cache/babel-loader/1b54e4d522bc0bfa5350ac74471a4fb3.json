{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/ProjectList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Route, Switch, Redirect } from \"react-router-dom\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\nimport { Typography } from \"@material-ui/core\";\n\nclass Cell extends Component {\n  render() {\n    const cls = this.props.value === 0 ? \"square zero\" : \"square\";\n    return React.createElement(\"span\", {\n      className: cls,\n      onClick: () => this.props.clickHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass Board extends Component {\n  componentWillMount() {\n    this.findClickables(this.props.board, this.props.size);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.findClickables(nextProps.board, nextProps.size);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const curr = this.props.board.join(\"\");\n    const next = nextProps.board.join(\"\");\n    return curr !== next;\n  }\n\n  findClickables(board, size) {\n    const zeroIndex = board.indexOf(0);\n    const zeroCoordinate = this.getCoordFromIndex(zeroIndex, size);\n    const possibleTopIdx = zeroCoordinate.row > 0 ? this.getIndexFromCoord(zeroCoordinate.row - 1, zeroCoordinate.column, size) : null;\n    const possiblRightIdx = zeroCoordinate.column < size ? this.getIndexFromCoord(zeroCoordinate.row, zeroCoordinate.column + 1, size) : null;\n    const possiblBottomIdx = zeroCoordinate.row < size ? this.getIndexFromCoord(zeroCoordinate.row + 1, zeroCoordinate.column, size) : null;\n    const possibleLeftIdx = zeroCoordinate.column > 0 ? this.getIndexFromCoord(zeroCoordinate.row, zeroCoordinate.column - 1, size) : null;\n    this.setState({\n      zero: zeroIndex,\n      possibleTopIdx: possibleTopIdx,\n      possiblRightIdx: possiblRightIdx,\n      possiblBottomIdx: possiblBottomIdx,\n      possibleLeftIdx: possibleLeftIdx\n    });\n  }\n\n  getCoordFromIndex(idx, size) {\n    return {\n      row: Math.floor(idx / size) + 1,\n      column: idx % size + 1\n    };\n  }\n\n  getIndexFromCoord(row, col, size) {\n    return size * (row - 1) + col - 1;\n  }\n\n  cellClickHandler(index) {\n    if (index === this.state.possibleTopIdx || index === this.state.possiblRightIdx || index === this.state.possiblBottomIdx || index === this.state.possibleLeftIdx) this.nextBoard(index);\n  }\n\n  nextBoard(index, direction) {\n    const board = this.props.board.slice();\n    const temp = board[index];\n    board[index] = board[this.state.zero];\n    board[this.state.zero] = temp;\n    this.props.updateBoard(board);\n  }\n\n  render() {\n    const squares = this.props.board.map((val, index) => {\n      if ((index + 1) % this.props.size === 0) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Cell, {\n          value: val,\n          clickHandler: this.cellClickHandler.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Cell, {\n        value: val,\n        clickHandler: this.cellClickHandler.bind(this, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, squares);\n  }\n\n}\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [1, 2, 3, 4, 5, 6, 7, 8, 0],\n      size: 3\n    };\n  }\n\n  newGame(size) {\n    let board = new Array(size * size);\n\n    for (let i = 0; i < size * size; ++i) board[i] = i;\n\n    board = this.shuffle(board);\n    this.updateBoard(board, size);\n    this.setState({\n      size: size\n    });\n  }\n\n  updateBoard(board, size) {\n    this.setState({\n      board: board\n    });\n  }\n\n  shuffle(o) {\n    const temp = o.slice();\n\n    for (var j, x, i = temp.length; i; j = Math.floor(Math.random() * i), x = temp[--i], temp[i] = temp[j], temp[j] = x);\n\n    return temp;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"APTITUDE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.puzzle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"React puzzle game\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Click on the squares to move them (only those next to the 0 square)\"), this.state && this.state.board ? React.createElement(Board, {\n      size: this.state.size,\n      board: this.state.board,\n      updateBoard: this.updateBoard.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New 3x3 game\",\n      onClick: this.newGame.bind(this, 3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New 4x4 game\",\n      onClick: this.newGame.bind(this, 4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"New 5x5 game\",\n      onClick: this.newGame.bind(this, 5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    projectlistTabledata: state.project.projectlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushProjectListdata: data => dispatch({\n      type: \"PUSH PROJECTLIST DATA\",\n      data: data\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(withStyles(styles)(ProjectList));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/ProjectList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","ProjectToolbar","MaterialTable","IconButton","ViewIcon","Loader","connect","APTITUDE","Route","Switch","Redirect","styles","withStyles","loadProjectList","Project","CreateEvent","Milestone","Projectgroup","swal","Typography","Cell","render","cls","props","value","clickHandler","Board","componentWillMount","findClickables","board","size","componentWillReceiveProps","nextProps","shouldComponentUpdate","curr","join","next","zeroIndex","indexOf","zeroCoordinate","getCoordFromIndex","possibleTopIdx","row","getIndexFromCoord","column","possiblRightIdx","possiblBottomIdx","possibleLeftIdx","setState","zero","idx","Math","floor","col","cellClickHandler","index","state","nextBoard","direction","slice","temp","updateBoard","squares","map","val","bind","ProjectList","constructor","newGame","Array","i","shuffle","o","j","x","length","random","classes","puzzle","mapStatetoProps","token","auth","projectlistTabledata","project","mapDispatchToProps","dispatch","pushProjectListdata","data","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\nimport { Typography } from \"@material-ui/core\";\n\nclass Cell extends Component {\n  render() {\n    const cls = this.props.value === 0 ? \"square zero\" : \"square\";\n    return (\n      <span className={cls} onClick={() => this.props.clickHandler()}>\n        {this.props.value}\n      </span>\n    );\n  }\n}\n\nclass Board extends Component {\n  componentWillMount() {\n    this.findClickables(this.props.board, this.props.size);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.findClickables(nextProps.board, nextProps.size);\n  }\n  shouldComponentUpdate(nextProps) {\n    const curr = this.props.board.join(\"\");\n    const next = nextProps.board.join(\"\");\n    return curr !== next;\n  }\n\n  findClickables(board, size) {\n    const zeroIndex = board.indexOf(0);\n    const zeroCoordinate = this.getCoordFromIndex(zeroIndex, size);\n    const possibleTopIdx =\n      zeroCoordinate.row > 0\n        ? this.getIndexFromCoord(\n            zeroCoordinate.row - 1,\n            zeroCoordinate.column,\n            size\n          )\n        : null;\n    const possiblRightIdx =\n      zeroCoordinate.column < size\n        ? this.getIndexFromCoord(\n            zeroCoordinate.row,\n            zeroCoordinate.column + 1,\n            size\n          )\n        : null;\n    const possiblBottomIdx =\n      zeroCoordinate.row < size\n        ? this.getIndexFromCoord(\n            zeroCoordinate.row + 1,\n            zeroCoordinate.column,\n            size\n          )\n        : null;\n    const possibleLeftIdx =\n      zeroCoordinate.column > 0\n        ? this.getIndexFromCoord(\n            zeroCoordinate.row,\n            zeroCoordinate.column - 1,\n            size\n          )\n        : null;\n\n    this.setState({\n      zero: zeroIndex,\n      possibleTopIdx: possibleTopIdx,\n      possiblRightIdx: possiblRightIdx,\n      possiblBottomIdx: possiblBottomIdx,\n      possibleLeftIdx: possibleLeftIdx\n    });\n  }\n  getCoordFromIndex(idx, size) {\n    return { row: Math.floor(idx / size) + 1, column: (idx % size) + 1 };\n  }\n  getIndexFromCoord(row, col, size) {\n    return size * (row - 1) + col - 1;\n  }\n  cellClickHandler(index) {\n    if (\n      index === this.state.possibleTopIdx ||\n      index === this.state.possiblRightIdx ||\n      index === this.state.possiblBottomIdx ||\n      index === this.state.possibleLeftIdx\n    )\n      this.nextBoard(index);\n  }\n  nextBoard(index, direction) {\n    const board = this.props.board.slice();\n    const temp = board[index];\n    board[index] = board[this.state.zero];\n    board[this.state.zero] = temp;\n    this.props.updateBoard(board);\n  }\n  render() {\n    const squares = this.props.board.map((val, index) => {\n      if ((index + 1) % this.props.size === 0) {\n        return (\n          <span>\n            {\n              <Cell\n                value={val}\n                clickHandler={this.cellClickHandler.bind(this, index)}\n              />\n            }\n            <br />\n          </span>\n        );\n      }\n      return (\n        <Cell\n          value={val}\n          clickHandler={this.cellClickHandler.bind(this, index)}\n        />\n      );\n    });\n    return <div className=\"board\">{squares}</div>;\n  }\n}\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { board: [1, 2, 3, 4, 5, 6, 7, 8, 0], size: 3 };\n  }\n  newGame(size) {\n    let board = new Array(size * size);\n    for (let i = 0; i < size * size; ++i) board[i] = i;\n    board = this.shuffle(board);\n    this.updateBoard(board, size);\n    this.setState({ size: size });\n  }\n  updateBoard(board, size) {\n    this.setState({ board: board });\n  }\n  shuffle(o) {\n    const temp = o.slice();\n    for (\n      var j, x, i = temp.length;\n      i;\n      j = Math.floor(Math.random() * i),\n        x = temp[--i],\n        temp[i] = temp[j],\n        temp[j] = x\n    );\n    return temp;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"APTITUDE\">\n        <div className={classes.puzzle}>\n          <h1>React puzzle game</h1>\n          <p>\n            Click on the squares to move them (only those next to the 0 square)\n          </p>\n          {this.state && this.state.board ? (\n            <Board\n              size={this.state.size}\n              board={this.state.board}\n              updateBoard={this.updateBoard.bind(this)}\n            />\n          ) : null}\n          <input\n            type=\"submit\"\n            value=\"New 3x3 game\"\n            onClick={this.newGame.bind(this, 3)}\n          />\n          <input\n            type=\"submit\"\n            value=\"New 4x4 game\"\n            onClick={this.newGame.bind(this, 4)}\n          />\n          <input\n            type=\"submit\"\n            value=\"New 5x5 game\"\n            onClick={this.newGame.bind(this, 5)}\n          />\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    projectlistTabledata: state.project.projectlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushProjectListdata: data =>\n      dispatch({ type: \"PUSH PROJECTLIST DATA\", data: data })\n  };\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(withStyles(styles)(ProjectList));\n"]},"metadata":{},"sourceType":"module"}