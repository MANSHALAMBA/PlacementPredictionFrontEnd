{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Typography } from \"@material-ui/core\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Quizzes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(QuizToolbar, {\n      handleClickOpen: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), this.state.open && React.createElement(CreateQuiz, {\n      open: this.state.open,\n      handleClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), this.state.editEnddate.open && React.createElement(EditEndDate, {\n      open: this.state.editEnddate.open,\n      handleClose: this.handleCloseEditEnddateFrom,\n      startdate: this.state.editEnddate.startdate,\n      quizid: this.state.editEnddate.quizid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, !this.state.isLoading ? React.createElement(MaterialTable, {\n      columns: this.columns,\n      data: this.props.quizlistTabledata,\n      options: {\n        filtering: true,\n        actionsColumnIndex: -1,\n        headerStyle: {\n          \"font-size\": \"18px\"\n        }\n      },\n      actions: this.actions,\n      title: React.createElement(Typography, {\n        style: {\n          \"font-size\": \"18px\",\n          fontWeight: \"bolder\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Quiz List\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    quizlistTabledata: state.quiz.quizlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushQuizListdata: data => dispatch({\n      type: \"PUSH QUIZLIST DATA\",\n      data: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sudoku));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","connect","APTITUDE","Typography","styles","withStyles","Sudoku","constructor","props","state","render","classes","root","handleClickOpen","open","handleClose","editEnddate","handleCloseEditEnddateFrom","startdate","quizid","content","isLoading","columns","quizlistTabledata","filtering","actionsColumnIndex","headerStyle","actions","fontWeight","mapStateToProps","token","auth","quiz","mapDispatchToProps","dispatch","pushQuizListdata","data","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\n\nimport { Typography } from \"@material-ui/core\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Quizzes\">\n        <div className={classes.root}>\n          <QuizToolbar handleClickOpen={this.handleClickOpen} />\n          {this.state.open && (\n            <CreateQuiz open={this.state.open} handleClose={this.handleClose} />\n          )}\n          {this.state.editEnddate.open && (\n            <EditEndDate\n              open={this.state.editEnddate.open}\n              handleClose={this.handleCloseEditEnddateFrom}\n              startdate={this.state.editEnddate.startdate}\n              quizid={this.state.editEnddate.quizid}\n            />\n          )}\n          <div className={classes.content}>\n            {!this.state.isLoading ? (\n              <MaterialTable\n                columns={this.columns}\n                data={this.props.quizlistTabledata}\n                options={{\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  headerStyle: {\n                    \"font-size\": \"18px\"\n                  }\n                }}\n                actions={this.actions}\n                title={\n                  <Typography\n                    style={{ \"font-size\": \"18px\", fontWeight: \"bolder\" }}\n                  >\n                    Quiz List\n                  </Typography>\n                }\n              />\n            ) : (\n              <Loader />\n            )}\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    quizlistTabledata: state.quiz.quizlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushQuizListdata: data =>\n      dispatch({ type: \"PUSH QUIZLIST DATA\", data: data })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Sudoku));\n"]},"metadata":{},"sourceType":"module"}