{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Milestone/index.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form/AddMilestone\";\nimport validate from \"validate.js\";\nimport moment from \"moment\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass AddMilestone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: []\n          })\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let errors = validate(this.state.data, {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        deadline: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            earliest: moment.utc().add(1, \"day\"),\n            message: \"should be greater than today's date\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      }\n\n      console.log(errors);\n    };\n\n    this.state = {\n      data: {\n        title: \"\",\n        description: \"\",\n        deadline: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default AddMilestone;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Milestone/index.jsx"],"names":["React","Component","Form","validate","moment","extend","validators","datetime","parse","value","options","utc","format","dateOnly","AddMilestone","constructor","props","onChangeHandler","e","target","name","setState","prevState","data","errors","onSubmitHandler","console","log","state","title","presence","allowEmpty","message","description","deadline","earliest","add","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEAD,QAAQ,CAACE,MAAT,CAAgBF,QAAQ,CAACG,UAAT,CAAoBC,QAApC,EAA8C;AAC5C;AACA;AACAC,EAAAA,KAAK,EAAE,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC9B,WAAO,CAACN,MAAM,CAACO,GAAP,CAAWF,KAAX,CAAR;AACD,GAL2C;AAM5C;AACAG,EAAAA,MAAM,EAAE,UAASH,KAAT,EAAgBC,OAAhB,EAAyB;AAC/B,QAAIE,MAAM,GAAGF,OAAO,CAACG,QAAR,GAAmB,YAAnB,GAAkC,qBAA/C;AACA,WAAOT,MAAM,CAACO,GAAP,CAAWF,KAAX,EAAkBG,MAAlB,CAAyBA,MAAzB,CAAP;AACD;AAV2C,CAA9C;;AAaA,MAAME,YAAN,SAA2Bb,SAA3B,CAAqC;AACnCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,eAXmB,GAWDC,CAAC,IAAI;AAAA,wBACGA,CAAC,CAACC,MADL;AAAA,YACbC,IADa,aACbA,IADa;AAAA,YACPX,KADO,aACPA,KADO;AAGrB,WAAKY,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLC,UAAAA,IAAI,oBACCD,SAAS,CAACC,IADX;AAEF,aAACH,IAAD,GAAQX;AAFN,YADC;AAKLe,UAAAA,MAAM,oBACDF,SAAS,CAACE,MADT;AAEJ,aAACJ,IAAD,GAAQ;AAFJ;AALD,SAAP;AAUD,OAXD;AAYD,KA1BkB;;AAAA,SA4BnBK,eA5BmB,GA4BD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADsB,CAEtB;;AACA,UAAIH,MAAM,GAAGrB,QAAQ,CAAC,KAAKyB,KAAL,CAAWL,IAAZ,EAAkB;AACrCM,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SAD8B;AAErCC,QAAAA,WAAW,EAAE;AAAEH,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SAFwB;AAGrCE,QAAAA,QAAQ,EAAE;AACRJ,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B,WADF;AAERzB,UAAAA,QAAQ,EAAE;AACR4B,YAAAA,QAAQ,EAAE/B,MAAM,CAACO,GAAP,GAAayB,GAAb,CAAiB,CAAjB,EAAoB,KAApB,CADF;AAERJ,YAAAA,OAAO,EAAE;AAFD;AAFF;AAH2B,OAAlB,CAArB,CAHsB,CAetB;;AACA,UAAIR,MAAJ,EAAY;AACV,aAAKH,QAAL,CAAc;AAAEG,UAAAA;AAAF,SAAd;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,KAhDkB;;AAEjB,SAAKI,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE;AACJM,QAAAA,KAAK,EAAE,EADH;AAEJI,QAAAA,WAAW,EAAE,EAFT;AAGJC,QAAAA,QAAQ,EAAE;AAHN,OADK;AAMXV,MAAAA,MAAM,EAAE;AANG,KAAb;AAQD;;AAwCDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,eAAe,EAAE,KAAKpB,eADxB;AAEE,MAAA,QAAQ,EAAE,KAAKQ,eAFjB;AAGE,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWJ,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA3DkC;;AA8DrC,eAAeV,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form/AddMilestone\";\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function(value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function(value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass AddMilestone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        title: \"\",\n        description: \"\",\n        deadline: \"\"\n      },\n      errors: {}\n    };\n  }\n  onChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState(prevState => {\n      return {\n        data: {\n          ...prevState.data,\n          [name]: value\n        },\n        errors: {\n          ...prevState.errors,\n          [name]: []\n        }\n      };\n    });\n  };\n\n  onSubmitHandler = () => {\n    console.log(\"submission handler\");\n    //validation\n    let errors = validate(this.state.data, {\n      title: { presence: { allowEmpty: false, message: \"is required\" } },\n      description: { presence: { allowEmpty: false, message: \"is required\" } },\n      deadline: {\n        presence: { allowEmpty: false, message: \"is required\" },\n        datetime: {\n          earliest: moment.utc().add(1, \"day\"),\n          message: \"should be greater than today's date\"\n        }\n      }\n    });\n\n    // check for errors\n    if (errors) {\n      this.setState({ errors });\n    }\n    console.log(errors);\n  };\n\n  render() {\n    return (\n      <Form\n        onChangeHandler={this.onChangeHandler}\n        onSubmit={this.onSubmitHandler}\n        errors={this.state.errors}\n      />\n    );\n  }\n}\n\nexport default AddMilestone;\n"]},"metadata":{},"sourceType":"module"}