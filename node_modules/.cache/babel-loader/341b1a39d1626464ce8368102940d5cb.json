{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/Project/components/Milestones/index.jsx\";\nimport React, { Component } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Styles from \"./styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Visibility } from \"@material-ui/icons\";\nimport { CloudDownload } from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GiveReview from \"./components/GiveReview\";\n\nclass Milestones extends Component {\n  constructor(props) {\n    super(props);\n\n    this.remark = (statusOfSubmission, submissionId) => {\n      this.setState({\n        open: true,\n        statusOfSubmission,\n        submissionId\n      });\n    };\n\n    this.handleclose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.openSubmission = url => {\n      if (url) {\n        var win = window.open(url, \"_blank\");\n        win.focus();\n      }\n    };\n\n    this.handleNext = () => {\n      this.setState(prevState => {\n        return {\n          activeStep: prevState.activeStep + 1\n        };\n      });\n    };\n\n    this.handleBack = () => {\n      this.setState(prevState => {\n        return {\n          activeStep: prevState.activeStep - 1\n        };\n      });\n    };\n\n    this.colorDescision = statusOfSubmission => {\n      let color = statusOfSubmission === \"rejected\" ? \"red\" : statusOfSubmission === \"approved\" ? \"green\" : \"\";\n      return color;\n    };\n\n    this.state = {\n      activeStep: 0,\n      open: false,\n      statusOfSubmission: \"\",\n      submissionId: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Milestones\")), React.createElement(Stepper, {\n      activeStep: this.state.activeStep,\n      orientation: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.milestones.map((milestone, index) => React.createElement(Step, {\n      key: milestone.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, milestone.title), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      display: \"inline\",\n      className: this.props.classes.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Description :\"), \" \", React.createElement(Typography, {\n      display: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, milestone.description), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      display: \"inline\",\n      className: this.props.classes.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Deadline :\"), \" \", React.createElement(Typography, {\n      display: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, milestone.deadline), !(milestone.submissions.length === 0) ? React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, milestone.submissions.map(submission => {\n      return React.createElement(Grid, {\n        item: true,\n        md: 6,\n        className: this.props.classes.splitFormSpacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.props.classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Download Submitted File\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: this.props.classes.button,\n        \"aria-label\": \"Download Submitted File\",\n        onClick: () => this.openSubmission(submission.file),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(CloudDownload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        title: \"View Submitted Work \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: this.props.classes.button,\n        \"aria-label\": \"View Submitted Work\",\n        onClick: () => this.openSubmission(submission.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: this.props.classes.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Summary :\"), React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          color: \"black\"\n        },\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, submission.summary), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        className: this.props.classes.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Status :\"), React.createElement(Typography, {\n        style: {\n          color: this.colorDescision(submission.status)\n        },\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, submission.status.charAt(0).toUpperCase() + submission.status.slice(1)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), submission.status === \"pending\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        style: {\n          color: \"white\",\n          backgroundColor: \"green\"\n        },\n        variant: \"contained\",\n        onClick: () => this.remark(\"approved\", submission.id),\n        className: this.props.classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Approve\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        variant: \"contained\",\n        style: {\n          color: \"white\",\n          backgroundColor: \"red\"\n        },\n        onClick: () => this.remark(\"rejected\", submission.id),\n        className: this.props.classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Reject\"), \" \"), this.state.open && React.createElement(GiveReview, {\n        open: this.state.open,\n        handleClose: this.handleclose,\n        statusOfSubmission: this.state.statusOfSubmission,\n        submissionId: this.state.submissionId,\n        updatereview: (submissionId, updatedReview) => this.props.updatereview(this.props.match.params.projectId, milestone.id, submissionId, updatedReview),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: this.props.classes.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Remark:\"), React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          color: \"black\"\n        },\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, submission.remark))))));\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      className: this.props.classes.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"No Submissions Yet\")), React.createElement(\"div\", {\n      className: this.props.classes.actionsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      onClick: this.handleBack,\n      className: this.props.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      updatereview: true,\n      className: this.props.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, this.state.activeStep === this.props.milestones.length - 1 ? \"Finish\" : \"Next\"))))))), this.state.activeStep === this.props.milestones.length && React.createElement(Paper, {\n      square: true,\n      elevation: 0,\n      className: this.props.classes.resetContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"All milestones completed - you're finished\")));\n  }\n\n}\n\nconst mapStatetoProps = (state, props) => {\n  let Milestones = [];\n  state.project.projectlistTabledata.map(project => {\n    if (project.id === props.match.params.projectId) {\n      Milestones = project.milestones;\n    }\n  });\n  return {\n    token: state.auth.token,\n    milestones: Milestones\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatereview: (projectId, milestoneId, submissionId, updatedReview) => dispatch({\n      type: \"UPDATE REVIEW\",\n      projectId: projectId,\n      milestoneId: milestoneId,\n      submissionId: submissionId,\n      updatedReview: updatedReview\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(withStyles(Styles)(Milestones));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/Project/components/Milestones/index.jsx"],"names":["React","Component","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","withStyles","Styles","Card","CardContent","IconButton","Visibility","CloudDownload","Grid","connect","Tooltip","GiveReview","Milestones","constructor","props","remark","statusOfSubmission","submissionId","setState","open","handleclose","openSubmission","url","win","window","focus","handleNext","prevState","activeStep","handleBack","colorDescision","color","state","render","classes","root","heading","milestones","map","milestone","index","id","title","subtitle","description","deadline","submissions","length","submission","splitFormSpacing","card","float","button","file","summary","status","charAt","toUpperCase","slice","backgroundColor","updatedReview","updatereview","match","params","projectId","actionsContainer","resetContainer","mapStatetoProps","project","projectlistTabledata","token","auth","mapDispatchToProps","dispatch","milestoneId","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Styles from \"./styles\";\n\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Visibility } from \"@material-ui/icons\";\nimport { CloudDownload } from \"@material-ui/icons\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { connect } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport GiveReview from \"./components/GiveReview\";\n\nclass Milestones extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveStep: 0,\n\t\t\topen: false,\n\t\t\tstatusOfSubmission: \"\",\n\t\t\tsubmissionId: \"\"\n\t\t};\n\t}\n\n\tremark = (statusOfSubmission, submissionId) => {\n\t\tthis.setState({\n\t\t\topen: true,\n\t\t\tstatusOfSubmission,\n\t\t\tsubmissionId\n\t\t});\n\t};\n\n\thandleclose = () => {\n\t\tthis.setState({\n\t\t\topen: false\n\t\t});\n\t};\n\n\topenSubmission = url => {\n\t\tif (url) {\n\t\t\tvar win = window.open(url, \"_blank\");\n\t\t\twin.focus();\n\t\t}\n\t};\n\n\thandleNext = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tactiveStep: prevState.activeStep + 1\n\t\t\t};\n\t\t});\n\t};\n\n\thandleBack = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tactiveStep: prevState.activeStep - 1\n\t\t\t};\n\t\t});\n\t};\n\tcolorDescision = statusOfSubmission => {\n\t\tlet color =\n\t\t\tstatusOfSubmission === \"rejected\"\n\t\t\t\t? \"red\"\n\t\t\t\t: statusOfSubmission === \"approved\"\n\t\t\t\t? \"green\"\n\t\t\t\t: \"\";\n\n\t\treturn color;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.classes.root}>\n\t\t\t\t<div className={this.props.classes.heading}>\n\t\t\t\t\t<Typography variant=\"h4\">Milestones</Typography>\n\t\t\t\t</div>\n\t\t\t\t<Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n\t\t\t\t\t{this.props.milestones.map((milestone, index) => (\n\t\t\t\t\t\t<Step key={milestone.id}>\n\t\t\t\t\t\t\t<StepLabel>{milestone.title}</StepLabel>\n\t\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\tDescription :\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\n\t\t\t\t\t\t\t\t<Typography display=\"inline\">\n\t\t\t\t\t\t\t\t\t{milestone.description}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tdisplay=\"inline\"\n\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\tDeadline :\n\t\t\t\t\t\t\t\t</Typography>{\" \"}\n\t\t\t\t\t\t\t\t<Typography display=\"inline\">{milestone.deadline}</Typography>\n\t\t\t\t\t\t\t\t{!(milestone.submissions.length === 0) ? (\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t\t{milestone.submissions.map(submission => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.splitFormSpacing}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card className={this.props.classes.card}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ float: \"right\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Download Submitted File\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Download Submitted File\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.openSubmission(submission.file)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloudDownload />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"View Submitted Work \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"View Submitted Work\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.openSubmission(submission.url)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSummary :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"black\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{submission.summary}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStatus :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(color =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmission.status === \"rejected\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"red\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: submission.status === \"approved\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: this.colorDescision(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmission.status\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{submission.status.charAt(0).toUpperCase() +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmission.status.slice(1)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{submission.status === \"pending\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.remark(\"approved\", submission.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApprove\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"red\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.remark(\"rejected\", submission.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tReject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.open && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<GiveReview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topen={this.state.open}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleClose={this.handleclose}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatusOfSubmission={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.statusOfSubmission\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmissionId={this.state.submissionId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatereview={(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmissionId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedReview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.updatereview(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.match.params.projectId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmilestone.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmissionId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedReview\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemark:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"black\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{submission.remark}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.subtitle}>\n\t\t\t\t\t\t\t\t\t\t\tNo Submissions Yet\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className={this.props.classes.actionsContainer}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={this.state.activeStep === 0}\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}>\n\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t\t\t\tupdatereview\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.props.classes.button}>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.activeStep ===\n\t\t\t\t\t\t\t\t\t\t\tthis.props.milestones.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t? \"Finish\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"Next\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t))}\n\t\t\t\t</Stepper>\n\t\t\t\t{this.state.activeStep === this.props.milestones.length && (\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tsquare\n\t\t\t\t\t\televation={0}\n\t\t\t\t\t\tclassName={this.props.classes.resetContainer}>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tAll milestones completed - you&apos;re finished\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Paper>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStatetoProps = (state, props) => {\n\tlet Milestones = [];\n\tstate.project.projectlistTabledata.map(project => {\n\t\tif (project.id === props.match.params.projectId) {\n\t\t\tMilestones = project.milestones;\n\t\t}\n\t});\n\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tmilestones: Milestones\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tupdatereview: (projectId, milestoneId, submissionId, updatedReview) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"UPDATE REVIEW\",\n\t\t\t\tprojectId: projectId,\n\t\t\t\tmilestoneId: milestoneId,\n\t\t\t\tsubmissionId: submissionId,\n\t\t\t\tupdatedReview: updatedReview\n\t\t\t})\n\t};\n};\nexport default connect(\n\tmapStatetoProps,\n\tmapDispatchToProps\n)(withStyles(Styles)(Milestones));\n"]},"metadata":{},"sourceType":"module"}