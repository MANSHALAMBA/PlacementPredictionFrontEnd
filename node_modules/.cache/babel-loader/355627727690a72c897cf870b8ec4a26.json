{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/QuizList/components/Grid.js\";\nimport React from 'react';\nimport Box from './Box';\n/* Grid Component */\n\nconst Grid = React.createClass({\n  displayName: \"Grid\",\n\n  render() {\n    const _this$props = this.props,\n          grid = _this$props.grid,\n          status = _this$props.status;\n    const isSolved = status.isSolved;\n\n    const renderBox = (row, val, col) => {\n      return React.createElement(Box, Object.assign({\n        key: col,\n        row: row,\n        col: col,\n        val: val,\n        isSolved: isSolved\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    };\n\n    const renderRow = (vals, row) => {\n      return React.createElement(\"tr\", {\n        key: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, vals.map(renderBox.bind(this, row)));\n    };\n\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, grid.map(renderRow)));\n  }\n\n});\nexport default Grid;","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/QuizList/components/Grid.js"],"names":["React","Box","Grid","createClass","render","props","grid","status","isSolved","renderBox","row","val","col","renderRow","vals","map","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAAA;;AAC9BC,EAAAA,MAAM,GAAG;AAAA,wBACe,KAAKC,KADpB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKC,MADL,eACKA,MADL;AAAA,UAEDC,QAFC,GAEWD,MAFX,CAEDC,QAFC;;AAGR,UAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AACpC,aACC,oBAAC,GAAD;AACC,QAAA,GAAG,EAAEA,GADN;AAEC,QAAA,GAAG,EAAEF,GAFN;AAGC,QAAA,GAAG,EAAEE,GAHN;AAIC,QAAA,GAAG,EAAED,GAJN;AAKC,QAAA,QAAQ,EAAEH;AALX,SAMK,KAAKH,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD;AAUA,KAXD;;AAYA,UAAMQ,SAAS,GAAG,CAACC,IAAD,EAAOJ,GAAP,KAAe;AAChC,aACC;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEI,IAAI,CAACC,GAAL,CAASN,SAAS,CAACO,IAAV,CAAe,IAAf,EAAqBN,GAArB,CAAT,CADF,CADD;AAKA,KAND;;AAQA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEJ,IAAI,CAACS,GAAL,CAASF,SAAT,CADF,CADD,CADD;AAQA;;AAhC6B,CAAlB,CAAb;AAmCA,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport Box from './Box';\n\n/* Grid Component */\nconst Grid = React.createClass({\n\trender() {\n\t\tconst {grid, status} = this.props;\n\t\tconst {isSolved} = status;\n\t\tconst renderBox = (row, val, col) => {\n\t\t\treturn (\n\t\t\t\t<Box\n\t\t\t\t\tkey={col}\n\t\t\t\t\trow={row}\n\t\t\t\t\tcol={col}\n\t\t\t\t\tval={val}\n\t\t\t\t\tisSolved={isSolved}\n\t\t\t\t\t{...this.props}\n\t\t\t\t/>\n\t\t\t);\n\t\t};\n\t\tconst renderRow = (vals, row) => {\n\t\t\treturn (\n\t\t\t\t<tr key={row}>\n\t\t\t\t\t{vals.map(renderBox.bind(this, row))}\n\t\t\t\t</tr>\n\t\t\t);\t\t\t\n\t\t};\n\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{grid.map(renderRow)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t);\n\t}\n});\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}