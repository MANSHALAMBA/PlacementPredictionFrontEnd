{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/CreateFacultyGroup/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport Loader from \"./components/loader\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchFaculties, creategroup } from \"api/faculties\";\nimport { connect } from \"react-redux\";\nimport { Faculty } from \"serializers/faculty\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      fetchFaculties(this.props.token).then(({\n        faculties\n      }) => {\n        console.log(faculties);\n        let facultyTableData = faculties.map(faculty => {\n          return new Faculty(faculty);\n        });\n        this.setState({\n          facultyTableData: facultyTableData,\n          isloading: false\n        });\n      });\n    };\n\n    this.sendData = groupname => {\n      let facultyList = this.state.data.selectedFaculties.map(id => {\n        return id;\n      });\n      let data = {\n        name: groupname,\n        facultyList\n      };\n      console.log(data);\n      creategroup(this.props.token, data).then(response => {\n        swal({\n          title: \"Success\",\n          text: \"Faculty Group \" + response.group.name + \" has been created successfully\",\n          button: \"Ok\"\n        });\n        this.handleClose();\n      }).catch(error => {\n        console.log(error.response.data);\n      });\n    };\n\n    this.columns = [{\n      field: \"name\",\n      title: \"Name\"\n    }, {\n      field: \"department\",\n      title: \"Department\"\n    }, {\n      field: \"Id\",\n      title: \"Id\",\n      hidden: true\n    }];\n\n    this.handleSelection = rows => {\n      console.log(rows);\n      let selectedFaculties = rows.map(row => {\n        return row.Id;\n      });\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            selectedFaculties: [...selectedFaculties]\n          })\n        };\n      });\n    };\n\n    this.handleOpenForm = () => {\n      this.state.data.selectedFaculties.length < 1 ? swal({\n        title: \"Error\",\n        text: \"Select Atleast One faculty Member\",\n        icon: \"error\",\n        button: \"Ok\"\n      }) : this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: true\n          })\n        };\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: false\n          })\n        };\n      });\n    };\n\n    this.state = {\n      data: {\n        selectedFaculties: []\n      },\n      facultyTableData: [],\n      form: {\n        open: false\n      },\n      isloading: true\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Create Faculty Group\",\n      mode: CREATEGROUP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(CreateGroupToolbar, {\n      handleOpenForm: this.handleOpenForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.form.open && React.createElement(CreateGroup, {\n      open: this.state.form.open,\n      handleClose: this.handleClose,\n      numberOfFaculties: this.state.data.selectedFaculties.length,\n      sendData: this.sendData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), !this.state.isloading ? React.createElement(MaterialTable, {\n      title: \"Faculty  List\",\n      data: this.state.facultyTableData,\n      columns: this.columns,\n      onSelectionChange: this.handleSelection,\n      options: {\n        filtering: true,\n        selection: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: classes.alignCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/CreateFacultyGroup/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","CreateGroupToolbar","CreateGroup","Loader","MaterialTable","CREATEGROUP","fetchFaculties","creategroup","connect","Faculty","styles","withStyles","swal","Creategroup","constructor","props","loadData","token","then","faculties","console","log","facultyTableData","map","faculty","setState","isloading","sendData","groupname","facultyList","state","data","selectedFaculties","id","name","response","title","text","group","button","handleClose","catch","error","columns","field","hidden","handleSelection","rows","row","Id","prevState","handleOpenForm","length","icon","form","open","componentDidMount","render","classes","root","content","filtering","selection","alignCenter","mapStateToProps","auth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,SAA7C;AAEA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,WAAN,SAA0Bf,SAA1B,CAAoC;AACnCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAcnBC,QAdmB,GAcR,MAAM;AAChBV,MAAAA,cAAc,CAAC,KAAKS,KAAL,CAAWE,KAAZ,CAAd,CAAiCC,IAAjC,CAAsC,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAmB;AACxDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,YAAIG,gBAAgB,GAAGH,SAAS,CAACI,GAAV,CAAcC,OAAO,IAAI;AAC/C,iBAAO,IAAIf,OAAJ,CAAYe,OAAZ,CAAP;AACA,SAFsB,CAAvB;AAIA,aAAKC,QAAL,CAAc;AACbH,UAAAA,gBAAgB,EAAEA,gBADL;AAEbI,UAAAA,SAAS,EAAE;AAFE,SAAd;AAIA,OAVD;AAWA,KA1BkB;;AAAA,SA4BnBC,QA5BmB,GA4BRC,SAAS,IAAI;AACvB,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,iBAAhB,CAAkCT,GAAlC,CAAsCU,EAAE,IAAI;AAC7D,eAAOA,EAAP;AACA,OAFiB,CAAlB;AAGA,UAAIF,IAAI,GAAG;AACVG,QAAAA,IAAI,EAAEN,SADI;AAEVC,QAAAA;AAFU,OAAX;AAIAT,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAxB,MAAAA,WAAW,CAAC,KAAKQ,KAAL,CAAWE,KAAZ,EAAmBc,IAAnB,CAAX,CACEb,IADF,CACOiB,QAAQ,IAAI;AACjBvB,QAAAA,IAAI,CAAC;AACJwB,UAAAA,KAAK,EAAE,SADH;AAEJC,UAAAA,IAAI,EACH,mBACAF,QAAQ,CAACG,KAAT,CAAeJ,IADf,GAEA,gCALG;AAOJK,UAAAA,MAAM,EAAE;AAPJ,SAAD,CAAJ;AASA,aAAKC,WAAL;AACA,OAZF,EAaEC,KAbF,CAaQC,KAAK,IAAI;AACftB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAK,CAACP,QAAN,CAAeJ,IAA3B;AACA,OAfF;AAgBA,KArDkB;;AAAA,SAuDnBY,OAvDmB,GAuDT,CACT;AACCC,MAAAA,KAAK,EAAE,MADR;AAECR,MAAAA,KAAK,EAAE;AAFR,KADS,EAMT;AACCQ,MAAAA,KAAK,EAAE,YADR;AAECR,MAAAA,KAAK,EAAE;AAFR,KANS,EAWT;AACCQ,MAAAA,KAAK,EAAE,IADR;AAECR,MAAAA,KAAK,EAAE,IAFR;AAGCS,MAAAA,MAAM,EAAE;AAHT,KAXS,CAvDS;;AAAA,SAyEnBC,eAzEmB,GAyEDC,IAAI,IAAI;AACzB3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,IAAZ;AAEA,UAAIf,iBAAiB,GAAGe,IAAI,CAACxB,GAAL,CAASyB,GAAG,IAAI;AACvC,eAAOA,GAAG,CAACC,EAAX;AACA,OAFuB,CAAxB;AAGA,WAAKxB,QAAL,CAAcyB,SAAS,IAAI;AAC1B,eAAO;AACNnB,UAAAA,IAAI,oBACAmB,SAAS,CAACnB,IADV;AAEHC,YAAAA,iBAAiB,EAAE,CAAC,GAAGA,iBAAJ;AAFhB;AADE,SAAP;AAMA,OAPD;AAQA,KAvFkB;;AAAA,SAwFnBmB,cAxFmB,GAwFF,MAAM;AACtB,WAAKrB,KAAL,CAAWC,IAAX,CAAgBC,iBAAhB,CAAkCoB,MAAlC,GAA2C,CAA3C,GACGxC,IAAI,CAAC;AACLwB,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,IAAI,EAAE,mCAFD;AAILgB,QAAAA,IAAI,EAAE,OAJD;AAKLd,QAAAA,MAAM,EAAE;AALH,OAAD,CADP,GAQG,KAAKd,QAAL,CAAcyB,SAAS,IAAI;AAC3B,eAAO;AACNI,UAAAA,IAAI,oBACAJ,SAAS,CAACI,IADV;AAEHC,YAAAA,IAAI,EAAE;AAFH;AADE,SAAP;AAMC,OAPD,CARH;AAgBA,KAzGkB;;AAAA,SA2GnBf,WA3GmB,GA2GL,MAAM;AACnB,WAAKf,QAAL,CAAcyB,SAAS,IAAI;AAC1B,eAAO;AACNI,UAAAA,IAAI,oBACAJ,SAAS,CAACI,IADV;AAEHC,YAAAA,IAAI,EAAE;AAFH;AADE,SAAP;AAMA,OAPD;AAQA,KApHkB;;AAElB,SAAKzB,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,iBAAiB,EAAE;AAArB,OADM;AAEZV,MAAAA,gBAAgB,EAAE,EAFN;AAGZgC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAHM;AAIZ7B,MAAAA,SAAS,EAAE;AAJC,KAAb;AAMA;;AAED8B,EAAAA,iBAAiB,GAAG;AACnB,SAAKxC,QAAL;AACA;;AA0GDyC,EAAAA,MAAM,GAAG;AAAA,UACAC,OADA,GACY,KAAK3C,KADjB,CACA2C,OADA;AAGR,WACC,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC,sBAAvB;AAA8C,MAAA,IAAI,EAAErD,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAEqD,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,kBAAD;AAAoB,MAAA,cAAc,EAAE,KAAKR,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAK,MAAA,SAAS,EAAEO,OAAO,CAACE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK9B,KAAL,CAAWwB,IAAX,CAAgBC,IAAhB,IACA,oBAAC,WAAD;AACC,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWwB,IAAX,CAAgBC,IADvB;AAEC,MAAA,WAAW,EAAE,KAAKf,WAFnB;AAGC,MAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBC,iBAAhB,CAAkCoB,MAHtD;AAIC,MAAA,QAAQ,EAAE,KAAKzB,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,CAAC,KAAKG,KAAL,CAAWJ,SAAZ,GACA,oBAAC,aAAD;AACC,MAAA,KAAK,EAAE,eADR;AAEC,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWR,gBAFlB;AAGC,MAAA,OAAO,EAAE,KAAKqB,OAHf;AAIC,MAAA,iBAAiB,EAAE,KAAKG,eAJzB;AAKC,MAAA,OAAO,EAAE;AACRe,QAAAA,SAAS,EAAE,IADH;AAERC,QAAAA,SAAS,EAAE;AAFH,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAYA;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACK,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CArBF,CAFD,CADD,CADD;AAiCA;;AA3JkC;;AA8JpC,MAAMC,eAAe,GAAGlC,KAAK,IAAI;AAChC,SAAO;AACNb,IAAAA,KAAK,EAAEa,KAAK,CAACmC,IAAN,CAAWhD;AADZ,GAAP;AAGA,CAJD;;AAMA,eAAeT,OAAO,CAACwD,eAAD,CAAP,CAAyBrD,UAAU,CAACD,MAAD,CAAV,CAAmBG,WAAnB,CAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport Loader from \"./components/loader\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchFaculties, creategroup } from \"api/faculties\";\nimport { connect } from \"react-redux\";\nimport { Faculty } from \"serializers/faculty\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: { selectedFaculties: [] },\n\t\t\tfacultyTableData: [],\n\t\t\tform: { open: false },\n\t\t\tisloading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadData();\n\t}\n\n\tloadData = () => {\n\t\tfetchFaculties(this.props.token).then(({ faculties }) => {\n\t\t\tconsole.log(faculties);\n\t\t\tlet facultyTableData = faculties.map(faculty => {\n\t\t\t\treturn new Faculty(faculty);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tfacultyTableData: facultyTableData,\n\t\t\t\tisloading: false\n\t\t\t});\n\t\t});\n\t};\n\n\tsendData = groupname => {\n\t\tlet facultyList = this.state.data.selectedFaculties.map(id => {\n\t\t\treturn id;\n\t\t});\n\t\tlet data = {\n\t\t\tname: groupname,\n\t\t\tfacultyList\n\t\t};\n\t\tconsole.log(data);\n\t\tcreategroup(this.props.token, data)\n\t\t\t.then(response => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext:\n\t\t\t\t\t\t\"Faculty Group \" +\n\t\t\t\t\t\tresponse.group.name +\n\t\t\t\t\t\t\" has been created successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.handleClose();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error.response.data);\n\t\t\t});\n\t};\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: \"name\",\n\t\t\ttitle: \"Name\"\n\t\t},\n\n\t\t{\n\t\t\tfield: \"department\",\n\t\t\ttitle: \"Department\"\n\t\t},\n\n\t\t{\n\t\t\tfield: \"Id\",\n\t\t\ttitle: \"Id\",\n\t\t\thidden: true\n\t\t}\n\t];\n\n\thandleSelection = rows => {\n\t\tconsole.log(rows);\n\n\t\tlet selectedFaculties = rows.map(row => {\n\t\t\treturn row.Id;\n\t\t});\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\tselectedFaculties: [...selectedFaculties]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\thandleOpenForm = () => {\n\t\tthis.state.data.selectedFaculties.length < 1\n\t\t\t? swal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: \"Select Atleast One faculty Member\",\n\n\t\t\t\t\ticon: \"error\",\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t  })\n\t\t\t: this.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tform: {\n\t\t\t\t\t\t\t...prevState.form,\n\t\t\t\t\t\t\topen: true\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t  });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tform: {\n\t\t\t\t\t...prevState.form,\n\t\t\t\t\topen: false\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout title=\"Create Faculty Group\" mode={CREATEGROUP}>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<CreateGroupToolbar handleOpenForm={this.handleOpenForm} />\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t{this.state.form.open && (\n\t\t\t\t\t\t\t<CreateGroup\n\t\t\t\t\t\t\t\topen={this.state.form.open}\n\t\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\t\tnumberOfFaculties={this.state.data.selectedFaculties.length}\n\t\t\t\t\t\t\t\tsendData={this.sendData}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!this.state.isloading ? (\n\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\ttitle={\"Faculty  List\"}\n\t\t\t\t\t\t\t\tdata={this.state.facultyTableData}\n\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\tonSelectionChange={this.handleSelection}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\t\tselection: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className={classes.alignCenter}>\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));\n"]},"metadata":{},"sourceType":"module"}