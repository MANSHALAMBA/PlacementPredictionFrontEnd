{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"components\";\nimport { fetchProjectdata } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport { OverviewTab, ChatTab, TeamTab, MilestonesTab, ReviewsTab } from \"./components\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // check for project in redux\n    let outcome = this.props.checkForCurrentProject(this.props.match.params.projectId);\n\n    if (outcome === \"SUCCESS\") {\n      this.setState({\n        isLoading: false\n      });\n    } else if (outcome === \"FAILURE\") {\n      fetchProjectdata().then(data => {\n        console.log(data);\n        this.props.pushProjecttoProjectList(new Project(data.project));\n        this.setState({\n          isLoading: false\n        });\n      }).catch(data => {\n        console.log(data);\n      });\n    }\n  }\n\n  render() {\n    // const { classes } = this.props;\n    return React.createElement(DashboardLayout, {\n      mode: PROJECT,\n      title: \"Project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.isLoading && React.createElement(Route, {\n      component: Loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/overview\",\n      component: OverviewTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/chat\",\n      component: ChatTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/milestones\",\n      component: MilestonesTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/team\",\n      component: TeamTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/reviews\",\n      component: ReviewsTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/project/:projectId/overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkForCurrentProject: projectId => dispatch({\n      type: \"CHECK FOR CURRENT PROJECT\",\n      projectId: projectId\n    }),\n    pushProjecttoProjectList: project => dispatch({\n      type: \"PUSH PROJECT TO PROJECT LIST\",\n      project: project\n    })\n  };\n};\n\nexport default compose(connect(mapDispatchToProps), withStyles(styles))(project); // isloading true\n// check for project in redux\n// if found isloading false\n// if not found fetch project and push to redux project list , set isloading false","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx"],"names":["React","Component","Route","Switch","Redirect","compose","Dashboard","DashboardLayout","PROJECT","connect","Loader","fetchProjectdata","Project","OverviewTab","ChatTab","TeamTab","MilestonesTab","ReviewsTab","styles","withStyles","project","constructor","props","state","isLoading","componentDidMount","outcome","checkForCurrentProject","match","params","projectId","setState","then","data","console","log","pushProjecttoProjectList","catch","render","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"components\";\nimport { fetchProjectdata } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport {\n\tOverviewTab,\n\tChatTab,\n\tTeamTab,\n\tMilestonesTab,\n\tReviewsTab\n} from \"./components\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass project extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// check for project in redux\n\t\tlet outcome = this.props.checkForCurrentProject(\n\t\t\tthis.props.match.params.projectId\n\t\t);\n\t\tif (outcome === \"SUCCESS\") {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false\n\t\t\t});\n\t\t} else if (outcome === \"FAILURE\") {\n\t\t\tfetchProjectdata()\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tthis.props.pushProjecttoProjectList(new Project(data.project));\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\t// const { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout mode={PROJECT} title=\"Project\">\n\t\t\t\t<Switch>\n\t\t\t\t\t{this.state.isLoading && <Route component={Loader} />}\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/overview\"\n\t\t\t\t\t\tcomponent={OverviewTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/chat\" component={ChatTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/milestones\"\n\t\t\t\t\t\tcomponent={MilestonesTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/team\" component={TeamTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/reviews\"\n\t\t\t\t\t\tcomponent={ReviewsTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to=\"/project/:projectId/overview\" />\n\t\t\t\t</Switch>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tcheckForCurrentProject: projectId =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"CHECK FOR CURRENT PROJECT\",\n\t\t\t\tprojectId: projectId\n\t\t\t}),\n\t\tpushProjecttoProjectList: project =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"PUSH PROJECT TO PROJECT LIST\",\n\t\t\t\tproject: project\n\t\t\t})\n\t};\n};\n\nexport default compose(\n\tconnect(mapDispatchToProps),\n\twithStyles(styles)\n)(project);\n\n// isloading true\n// check for project in redux\n// if found isloading false\n// if not found fetch project and push to redux project list , set isloading false\n"]},"metadata":{},"sourceType":"module"}