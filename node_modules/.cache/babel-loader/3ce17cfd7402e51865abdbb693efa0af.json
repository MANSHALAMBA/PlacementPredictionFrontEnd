{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/CreateGroup/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchStudents } from \"api/students\";\nimport { connect } from \"react-redux\";\nimport Serializer from \"serializers/CreategroupStudentlist\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      fetchStudents(this.props.token).then(({\n        students\n      }) => {\n        console.log(students);\n        let studentTableData = students.map(student => {\n          new Serializer(student);\n        });\n        this.setState({\n          studentTableData: [...studentTableData]\n        });\n      });\n    };\n\n    this.columns = [{\n      field: \"name\",\n      title: \"Name\"\n    }, {\n      field: \"rollNumber\",\n      title: \"Roll Number\",\n      type: \"numeric\"\n    }, {\n      field: \"department\",\n      title: \"Department\"\n    }, {\n      field: \"year\",\n      title: \"Year\",\n      type: \"numeric\"\n    }, {\n      field: \"section\",\n      title: \"Section\"\n    }, {\n      field: \"Id\",\n      title: \"Id\",\n      hidden: true\n    }];\n    this.data = [{\n      id: \"dsfsd\",\n      name: \"Joe James\",\n      rollNumber: 1,\n      department: \"CSE\",\n      year: 1,\n      section: \"A\"\n    }, {\n      id: \"dsfsd\",\n      name: \"Joe James\",\n      rollNumber: 1,\n      department: \"CSE\",\n      year: 1,\n      section: \"A\"\n    }, {\n      id: \"dsfsd\",\n      name: \"Joe James\",\n      rollNumber: 1,\n      department: \"CSE\",\n      year: 1,\n      section: \"A\"\n    }, {\n      id: \"dsfsd\",\n      name: \"Joe James\",\n      rollNumber: 1,\n      department: \"CSE\",\n      year: 1,\n      section: \"A\"\n    }];\n\n    this.handleSelection = rows => {\n      console.log(rows);\n      let selectedStudents = rows.map(row => {\n        return row.Id;\n      });\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            selectedStudents: [...selectedStudents]\n          })\n        };\n      });\n    };\n\n    this.handleOpenForm = () => {\n      this.state.data.selectedStudents.length >= 2 ? this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: true\n          })\n        };\n      }) : swal({\n        title: \"Select Atleast Two Students\",\n        icon: \"error\",\n        button: \"Ok\"\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: false\n          })\n        };\n      });\n    };\n\n    this.state = {\n      data: {\n        selectedStudents: []\n      },\n      studentTableData: null,\n      form: {\n        open: false\n      }\n    };\n  }\n\n  componentDidMount() {// this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Create Group\",\n      mode: CREATEGROUP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(CreateGroupToolbar, {\n      handleOpenForm: this.handleOpenForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.form.open && React.createElement(CreateGroup, {\n      open: this.state.form.open,\n      handleClose: this.handleClose,\n      numberOfStudents: this.state.data.selectedStudents.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"Student  List\",\n      data: this.data,\n      columns: this.columns,\n      onSelectionChange: this.handleSelection,\n      options: {\n        filtering: true,\n        selection: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/CreateGroup/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","CreateGroupToolbar","CreateGroup","MaterialTable","CREATEGROUP","fetchStudents","connect","Serializer","styles","withStyles","swal","Creategroup","constructor","props","loadData","token","then","students","console","log","studentTableData","map","student","setState","columns","field","title","type","hidden","data","id","name","rollNumber","department","year","section","handleSelection","rows","selectedStudents","row","Id","prevState","handleOpenForm","state","length","form","open","icon","button","handleClose","componentDidMount","render","classes","root","content","filtering","selection","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchStudents } from \"api/students\";\nimport { connect } from \"react-redux\";\nimport Serializer from \"serializers/CreategroupStudentlist\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: { selectedStudents: [] },\n\t\t\tstudentTableData: null,\n\t\t\tform: { open: false }\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.loadData();\n\t}\n\n\tloadData = () => {\n\t\tfetchStudents(this.props.token).then(({ students }) => {\n\t\t\tconsole.log(students);\n\t\t\tlet studentTableData = students.map(student => {\n\t\t\t\tnew Serializer(student);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tstudentTableData: [...studentTableData]\n\t\t\t});\n\t\t});\n\t};\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: \"name\",\n\t\t\ttitle: \"Name\"\n\t\t},\n\t\t{\n\t\t\tfield: \"rollNumber\",\n\t\t\ttitle: \"Roll Number\",\n\t\t\ttype: \"numeric\"\n\t\t},\n\t\t{\n\t\t\tfield: \"department\",\n\t\t\ttitle: \"Department\"\n\t\t},\n\t\t{\n\t\t\tfield: \"year\",\n\t\t\ttitle: \"Year\",\n\t\t\ttype: \"numeric\"\n\t\t},\n\t\t{\n\t\t\tfield: \"section\",\n\t\t\ttitle: \"Section\"\n\t\t},\n\t\t{\n\t\t\tfield: \"Id\",\n\t\t\ttitle: \"Id\",\n\t\t\thidden: true\n\t\t}\n\t];\n\n\tdata = [\n\t\t{\n\t\t\tid: \"dsfsd\",\n\t\t\tname: \"Joe James\",\n\t\t\trollNumber: 1,\n\t\t\tdepartment: \"CSE\",\n\t\t\tyear: 1,\n\t\t\tsection: \"A\"\n\t\t},\n\t\t{\n\t\t\tid: \"dsfsd\",\n\t\t\tname: \"Joe James\",\n\t\t\trollNumber: 1,\n\t\t\tdepartment: \"CSE\",\n\t\t\tyear: 1,\n\t\t\tsection: \"A\"\n\t\t},\n\t\t{\n\t\t\tid: \"dsfsd\",\n\t\t\tname: \"Joe James\",\n\t\t\trollNumber: 1,\n\t\t\tdepartment: \"CSE\",\n\t\t\tyear: 1,\n\t\t\tsection: \"A\"\n\t\t},\n\t\t{\n\t\t\tid: \"dsfsd\",\n\t\t\tname: \"Joe James\",\n\t\t\trollNumber: 1,\n\t\t\tdepartment: \"CSE\",\n\t\t\tyear: 1,\n\t\t\tsection: \"A\"\n\t\t}\n\t];\n\n\thandleSelection = rows => {\n\t\tconsole.log(rows);\n\n\t\tlet selectedStudents = rows.map(row => {\n\t\t\treturn row.Id;\n\t\t});\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\tselectedStudents: [...selectedStudents]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\thandleOpenForm = () => {\n\t\tthis.state.data.selectedStudents.length >= 2\n\t\t\t? this.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tform: {\n\t\t\t\t\t\t\t...prevState.form,\n\t\t\t\t\t\t\topen: true\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t  })\n\t\t\t: swal({\n\t\t\t\t\ttitle: \"Select Atleast Two Students\",\n\n\t\t\t\t\ticon: \"error\",\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t  });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tform: {\n\t\t\t\t\t...prevState.form,\n\t\t\t\t\topen: false\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout title=\"Create Group\" mode={CREATEGROUP}>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<CreateGroupToolbar handleOpenForm={this.handleOpenForm} />\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t{this.state.form.open && (\n\t\t\t\t\t\t\t<CreateGroup\n\t\t\t\t\t\t\t\topen={this.state.form.open}\n\t\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\t\tnumberOfStudents={this.state.data.selectedStudents.length}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\ttitle={\"Student  List\"}\n\t\t\t\t\t\t\tdata={this.data}\n\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\tonSelectionChange={this.handleSelection}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\tselection: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));\n"]},"metadata":{},"sourceType":"module"}