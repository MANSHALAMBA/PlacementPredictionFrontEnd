{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Milestone/index.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport validate from \"validate.js\";\nimport moment from \"moment\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass AddMilestone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: []\n          })\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let errors = validate(this.state.data, {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        deadline: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            earliest: moment.utc().add(1, \"day\"),\n            message: \"should be greater than today's date\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      }\n\n      console.log(errors);\n    };\n\n    this.state = {\n      data: {\n        title: \"\",\n        description: \"\",\n        deadline: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      open: this.props.open,\n      handleClose: this.props.handleClose,\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default AddMilestone;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Milestone/index.jsx"],"names":["React","Component","Form","validate","moment","extend","validators","datetime","parse","value","options","utc","format","dateOnly","AddMilestone","constructor","props","onChangeHandler","e","target","name","setState","prevState","data","errors","onSubmitHandler","console","log","state","title","presence","allowEmpty","message","description","deadline","earliest","add","render","open","handleClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nvalidate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nclass AddMilestone extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tdeadline: \"\"\n\t\t\t},\n\t\t\terrors: {}\n\t\t};\n\t}\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\t[name]: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t[name]: []\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSubmitHandler = () => {\n\t\tconsole.log(\"submission handler\");\n\t\t//validation\n\t\tlet errors = validate(this.state.data, {\n\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\tdescription: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\tdeadline: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tearliest: moment.utc().add(1, \"day\"),\n\t\t\t\t\tmessage: \"should be greater than today's date\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// check for errors\n\t\tif (errors) {\n\t\t\tthis.setState({ errors });\n\t\t}\n\t\tconsole.log(errors);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Form\n\t\t\t\topen={this.props.open}\n\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\terrors={this.state.errors}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default AddMilestone;\n"]},"metadata":{},"sourceType":"module"}