{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      loadProjectList(this.props.token).then(data => {\n        console.log(data.projects);\n        let projects = data.projects.map(project => {\n          return new Project(project);\n        });\n        this.setState(prevState => {\n          return {\n            data: {\n              projects\n            },\n            isLoading: false\n          };\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.columns = [{\n      field: \"id\",\n      title: \"id\",\n      hidden: true,\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      field: \"title\",\n      title: \"Title\",\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      field: \"skills\",\n      title: \"Skills\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      render: rowData => rowData.skills.map(skill => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, skill.skill);\n      })\n    }, {\n      field: \"team\",\n      title: \"Team\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      render: rowData => rowData.team.map(student => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, student.name);\n      })\n    }, {\n      title: \"View\",\n      render: rowData => React.createElement(IconButton, {\n        onClick: () => this.handleViewProject(rowData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ViewIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))\n    }];\n\n    this.handleViewProject = id => {\n      this.props.history.push(\"/project/\" + id);\n    };\n\n    this.data = [{\n      id: \"dsfsd\",\n      title: \"Joe James\",\n      skills: \"Test Corp\",\n      team: \"Yonkers\"\n    }, {\n      id: \"desd\",\n      title: \"John Walsh\",\n      skills: \"Test Corp\",\n      team: \"Hartford\"\n    }, {\n      id: \"wfsd\",\n      title: \"Bob Herm\",\n      skills: \"Test Corp\",\n      team: \"Tampa\"\n    }, {\n      id: \"dsxcsfsd\",\n      title: \"James Houston\",\n      skills: \"Test Corp\",\n      team: \"Dallas\"\n    }];\n\n    this.handleSelection = rows => {\n      this.setState({\n        selectedRows: rows\n      });\n    };\n\n    this.handleClickOpen = formName => {\n      switch (formName) {\n        case \"Event\":\n          this.setState({\n            open: formName\n          });\n          break;\n\n        case \"Group\":\n          this.state.selectedRows.length < 2 ? swal({\n            title: \"Select Atleast Two Projects\",\n            icon: \"error\",\n            button: \"Ok\"\n          }) : this.setState({\n            open: formName\n          });\n          break;\n\n        case \"Milestone\":\n          this.state.selectedRows.length < 1 ? swal({\n            title: \"Select Atleast one Project\",\n            icon: \"error\",\n            button: \"Ok\"\n          }) : this.setState({\n            open: formName\n          });\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: null\n      });\n    };\n\n    this.state = {\n      data: {},\n      isLoading: true,\n      open: null,\n      selectedRows: []\n    };\n  }\n\n  componentDidMount() {// this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(ProjectToolbar, {\n      handleClickOpen: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), this.state.open === \"Event\" && React.createElement(CreateEvent, {\n      open: this.state.open === \"Event\",\n      handleClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), this.state.open === \"Group\" && React.createElement(Projectgroup, {\n      open: this.state.open === \"Group\",\n      handleClose: this.handleClose,\n      selectedRows: this.state.selectedRows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), this.state.open === \"Milestone\" && React.createElement(Milestone, {\n      open: this.state.open === \"Milestone\",\n      handleClose: this.handleClose,\n      selectedRows: this.state.selectedRows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, !this.state.isLoading ? React.createElement(MaterialTable, {\n      title: \"Project List\",\n      data: this.data,\n      columns: this.columns,\n      onSelectionChange: this.handleSelection,\n      options: {\n        filtering: true,\n        selection: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst MapStatetoProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(MapStatetoProps)(withStyles(styles)(ProjectList));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","ProjectToolbar","MaterialTable","IconButton","ViewIcon","Loader","connect","styles","withStyles","loadProjectList","Project","CreateEvent","Milestone","Projectgroup","swal","ProjectList","constructor","props","loadData","token","then","data","console","log","projects","map","project","setState","prevState","isLoading","catch","error","columns","field","title","hidden","options","filter","sort","render","rowData","skills","skill","team","student","name","handleViewProject","id","history","push","handleSelection","rows","selectedRows","handleClickOpen","formName","open","state","length","icon","button","handleClose","componentDidMount","classes","root","content","filtering","selection","MapStatetoProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\nclass ProjectList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {},\n\t\t\tisLoading: true,\n\t\t\topen: null,\n\t\t\tselectedRows: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.loadData();\n\t}\n\n\tloadData = () => {\n\t\tloadProjectList(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.projects);\n\t\t\t\tlet projects = data.projects.map(project => {\n\t\t\t\t\treturn new Project(project);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t},\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\ttitle: \"id\",\n\t\t\thidden: true,\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfield: \"title\",\n\t\t\ttitle: \"Title\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfield: \"skills\",\n\t\t\ttitle: \"Skills\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: false\n\t\t\t},\n\t\t\trender: rowData =>\n\t\t\t\trowData.skills.map(skill => {\n\t\t\t\t\treturn <li>{skill.skill}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\tfield: \"team\",\n\t\t\ttitle: \"Team\",\n\t\t\toptions: {\n\t\t\t\tfilter: true,\n\t\t\t\tsort: false\n\t\t\t},\n\t\t\trender: rowData =>\n\t\t\t\trowData.team.map(student => {\n\t\t\t\t\treturn <li>{student.name}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\ttitle: \"View\",\n\t\t\trender: rowData => (\n\t\t\t\t<IconButton onClick={() => this.handleViewProject(rowData.id)}>\n\t\t\t\t\t<ViewIcon />\n\t\t\t\t</IconButton>\n\t\t\t)\n\t\t}\n\t];\n\n\thandleViewProject = id => {\n\t\tthis.props.history.push(\"/project/\" + id);\n\t};\n\n\tdata = [\n\t\t{ id: \"dsfsd\", title: \"Joe James\", skills: \"Test Corp\", team: \"Yonkers\" },\n\t\t{\n\t\t\tid: \"desd\",\n\t\t\ttitle: \"John Walsh\",\n\t\t\tskills: \"Test Corp\",\n\t\t\tteam: \"Hartford\"\n\t\t},\n\t\t{ id: \"wfsd\", title: \"Bob Herm\", skills: \"Test Corp\", team: \"Tampa\" },\n\t\t{\n\t\t\tid: \"dsxcsfsd\",\n\t\t\ttitle: \"James Houston\",\n\t\t\tskills: \"Test Corp\",\n\t\t\tteam: \"Dallas\"\n\t\t}\n\t];\n\n\thandleSelection = rows => {\n\t\tthis.setState({\n\t\t\tselectedRows: rows\n\t\t});\n\t};\n\n\thandleClickOpen = formName => {\n\t\tswitch (formName) {\n\t\t\tcase \"Event\":\n\t\t\t\tthis.setState({\n\t\t\t\t\topen: formName\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"Group\":\n\t\t\t\tthis.state.selectedRows.length < 2\n\t\t\t\t\t? swal({\n\t\t\t\t\t\t\ttitle: \"Select Atleast Two Projects\",\n\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t\t  })\n\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\topen: formName\n\t\t\t\t\t  });\n\t\t\t\tbreak;\n\n\t\t\tcase \"Milestone\":\n\t\t\t\tthis.state.selectedRows.length < 1\n\t\t\t\t\t? swal({\n\t\t\t\t\t\t\ttitle: \"Select Atleast one Project\",\n\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t\t  })\n\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\topen: formName\n\t\t\t\t\t  });\n\t\t}\n\t};\n\thandleClose = () => {\n\t\tthis.setState({\n\t\t\topen: null\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout title=\"Projects\">\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<ProjectToolbar handleClickOpen={this.handleClickOpen} />\n\t\t\t\t\t{this.state.open === \"Event\" && (\n\t\t\t\t\t\t<CreateEvent\n\t\t\t\t\t\t\topen={this.state.open === \"Event\"}\n\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.open === \"Group\" && (\n\t\t\t\t\t\t<Projectgroup\n\t\t\t\t\t\t\topen={this.state.open === \"Group\"}\n\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\tselectedRows={this.state.selectedRows}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.open === \"Milestone\" && (\n\t\t\t\t\t\t<Milestone\n\t\t\t\t\t\t\topen={this.state.open === \"Milestone\"}\n\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\tselectedRows={this.state.selectedRows}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t{!this.state.isLoading ? (\n\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\ttitle={\"Project List\"}\n\t\t\t\t\t\t\t\tdata={this.data}\n\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\tonSelectionChange={this.handleSelection}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\t\tselection: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\n\nconst MapStatetoProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(MapStatetoProps)(withStyles(styles)(ProjectList));\n"]},"metadata":{},"sourceType":"module"}