{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/StudyMaterialList/components/SendContent/index.jsx\";\nimport React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { sendContent, loadStudentGroups, loadLectures, editContent } from \"api/contents\";\nimport { StudentGroup, Lecture } from \"serializers/content\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport { CodeSharp } from \"@material-ui/icons\";\n\nclass SendContent extends Component {\n  constructor(_props) {\n    super(_props);\n    this.types = [\"article\", \"video\", \"research_paper\", \"assignment\"];\n\n    this.getInitialState = props => {\n      if (props.openMode === \"Edit\") {\n        return {\n          data: _objectSpread({\n            title: \"\",\n            description: \"\",\n            url: \"\",\n            type: \"\",\n            receipents: [],\n            file: null\n          }, props.data),\n          receipents: [],\n          errors: {}\n        };\n      } else {\n        // default mode is assumed to be Send\n        return {\n          data: {\n            title: \"\",\n            description: \"\",\n            url: \"\",\n            type: \"\",\n            receipents: [],\n            file: null\n          },\n          receipents: [],\n          errors: {}\n        };\n      }\n    };\n\n    this.loadreceipents = () => {\n      loadStudentGroups(this.props.token).then(data => {\n        let studentgroups = data.groups.map(group => {\n          return new StudentGroup(group);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...studentgroups]\n          };\n        });\n      }).catch();\n      loadLectures(this.props.token).then(data => {\n        console.log(data.lectures);\n        let lectures = data.lectures.map(lecture => {\n          return new Lecture(lecture);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...lectures]\n          };\n        });\n      }).catch();\n    };\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: null\n          })\n        };\n      });\n    };\n\n    this.onfileChangeHandler = event => {\n      let file = event.target.files[0];\n      console.log(file);\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            file: file\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            file: null,\n            filesizeError: null\n          })\n        };\n      });\n    };\n\n    this.onSelectChangeHandler = e => {\n      let receipents = [...e.target.value];\n      console.log(receipents);\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            receipents: receipents\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            receipents: null\n          })\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let validationObj = this.props.openMode == \"Send\" ? {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        url: {\n          url: true\n        },\n        type: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        receipents: {\n          presence: {\n            allowEmpty: false,\n            message: \"are required\"\n          }\n        },\n        file: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      } : {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        url: {\n          url: true\n        },\n        type: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        file: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      };\n      let errors = validate(this.state.data, validationObj);\n      let filesizeErr = \"\";\n\n      if (this.state.data.file) {\n        filesizeErr = this.state.data.file.size > 2 * 1024 * 1024 ? \"File is too large\" : null;\n      }\n\n      if (filesizeErr && errors) {\n        console.log(\"many eroora\");\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, errors, {\n              filesizeError: filesizeErr\n            })\n          };\n        });\n      } else if (errors) {\n        console.log(errors);\n        this.setState({\n          errors\n        });\n      } else if (filesizeErr) {\n        console.log(filesizeErr);\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, {\n              filesizeError: filesizeErr\n            })\n          };\n        });\n      } else {\n        console.log(\"Submit handler no error\");\n\n        if (this.props.openMode == \"Send\") {\n          this.sendContent();\n        } else {\n          this.editContent(this.state.data.id);\n        }\n      }\n    };\n\n    this.sendContent = () => {\n      let sendTO = this.state.data.receipents.map(receipent => {\n        let obj = JSON.parse(receipent);\n        return {\n          type: obj.type,\n          id: obj.id\n        };\n      });\n      console.log(sendTO);\n      var form = new FormData();\n      form.append(\"title\", this.state.data.title);\n      form.append(\"description\", this.state.data.description);\n      form.append(\"type\", this.state.data.type);\n      form.append(\"url\", this.state.data.url);\n      form.append(\"file\", this.state.data.file);\n      form.append(\"sendTo\", JSON.stringify(sendTO));\n      sendContent(this.props.token, form).then(response => {\n        console.log(response);\n        swal({\n          title: \"Content\" + \" has been sent successfully\",\n          button: \"Ok\"\n        });\n        this.props.AddContentTableData(response.task);\n      }).catch(error => {\n        console.log(error.response.data);\n      });\n    };\n\n    this.editContent = contentID => {\n      console.log(\"hey there edit content\");\n      var form = new FormData();\n      form.append(\"title\", this.state.data.title);\n      form.append(\"description\", this.state.data.description);\n      form.append(\"type\", this.state.data.type);\n      form.append(\"url\", this.state.data.url);\n      form.append(\"file\", this.state.data.file);\n      editContent(this.props.token, form, contentID).then(response => {\n        console.log(response);\n        swal({\n          title: \"Content\" + \" has been edited successfully\",\n          button: \"Ok\"\n        });\n        this.props.updateContentTableData(response.task);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    console.log(_props.openMode);\n    this.state = this.getInitialState(_props);\n  }\n\n  componentDidMount() {\n    this.loadreceipents();\n  }\n\n  render() {\n    console.log(this.props.openMode);\n    console.log(this.props);\n    return React.createElement(ContentForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onfileChangeHandler: this.onfileChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      receipents: this.state.receipents,\n      types: this.types,\n      handleClose: this.props.handleClose,\n      onSelectChangeHandler: this.onSelectChangeHandler,\n      mode: this.props.openMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    });\n  }\n\n}\n\nSendContent.defaultProps = {\n  openMode: \"Send\"\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, null)(SendContent);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/StudyMaterialList/components/SendContent/index.jsx"],"names":["React","Component","ContentForm","validate","sendContent","loadStudentGroups","loadLectures","editContent","StudentGroup","Lecture","connect","swal","CodeSharp","SendContent","constructor","props","types","getInitialState","openMode","data","title","description","url","type","receipents","file","errors","loadreceipents","token","then","studentgroups","groups","map","group","setState","prevState","catch","console","log","lectures","lecture","onChangeHandler","e","target","name","value","onfileChangeHandler","event","files","filesizeError","onSelectChangeHandler","onSubmitHandler","validationObj","presence","allowEmpty","message","state","filesizeErr","size","id","sendTO","receipent","obj","JSON","parse","form","FormData","append","stringify","response","button","AddContentTableData","task","error","contentID","updateContentTableData","componentDidMount","render","open","handleClose","defaultProps","mapStateToProps","auth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SACCC,WADD,EAECC,iBAFD,EAGCC,YAHD,EAICC,WAJD,QAKO,cALP;AAMA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,qBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AACnCa,EAAAA,WAAW,CAACC,MAAD,EAAQ;AAClB,UAAMA,MAAN;AADkB,SAMnBC,KANmB,GAMX,CAAC,SAAD,EAAY,OAAZ,EAAqB,gBAArB,EAAuC,YAAvC,CANW;;AAAA,SAYnBC,eAZmB,GAYDF,KAAK,IAAI;AAC1B,UAAIA,KAAK,CAACG,QAAN,KAAmB,MAAvB,EAA+B;AAC9B,eAAO;AACNC,UAAAA,IAAI;AACHC,YAAAA,KAAK,EAAE,EADJ;AAEHC,YAAAA,WAAW,EAAE,EAFV;AAGHC,YAAAA,GAAG,EAAE,EAHF;AAIHC,YAAAA,IAAI,EAAE,EAJH;AAKHC,YAAAA,UAAU,EAAE,EALT;AAMHC,YAAAA,IAAI,EAAE;AANH,aAOAV,KAAK,CAACI,IAPN,CADE;AAUNK,UAAAA,UAAU,EAAE,EAVN;AAWNE,UAAAA,MAAM,EAAE;AAXF,SAAP;AAaA,OAdD,MAcO;AACN;AACA,eAAO;AACNP,UAAAA,IAAI,EAAE;AACLC,YAAAA,KAAK,EAAE,EADF;AAELC,YAAAA,WAAW,EAAE,EAFR;AAGLC,YAAAA,GAAG,EAAE,EAHA;AAILC,YAAAA,IAAI,EAAE,EAJD;AAKLC,YAAAA,UAAU,EAAE,EALP;AAMLC,YAAAA,IAAI,EAAE;AAND,WADA;AASND,UAAAA,UAAU,EAAE,EATN;AAUNE,UAAAA,MAAM,EAAE;AAVF,SAAP;AAYA;AACD,KA1CkB;;AAAA,SAgDnBC,cAhDmB,GAgDF,MAAM;AACtBtB,MAAAA,iBAAiB,CAAC,KAAKU,KAAL,CAAWa,KAAZ,CAAjB,CACEC,IADF,CACOV,IAAI,IAAI;AACb,YAAIW,aAAa,GAAGX,IAAI,CAACY,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IAAI;AAC5C,iBAAO,IAAIzB,YAAJ,CAAiByB,KAAjB,CAAP;AACA,SAFmB,CAApB;AAIA,aAAKC,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNX,YAAAA,UAAU,EAAE,CAAC,GAAGW,SAAS,CAACX,UAAd,EAA0B,GAAGM,aAA7B;AADN,WAAP;AAGA,SAJD;AAKA,OAXF,EAYEM,KAZF;AAcA9B,MAAAA,YAAY,CAAC,KAAKS,KAAL,CAAWa,KAAZ,CAAZ,CACEC,IADF,CACOV,IAAI,IAAI;AACbkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACoB,QAAjB;AACA,YAAIA,QAAQ,GAAGpB,IAAI,CAACoB,QAAL,CAAcP,GAAd,CAAkBQ,OAAO,IAAI;AAC3C,iBAAO,IAAI/B,OAAJ,CAAY+B,OAAZ,CAAP;AACA,SAFc,CAAf;AAIA,aAAKN,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNX,YAAAA,UAAU,EAAE,CAAC,GAAGW,SAAS,CAACX,UAAd,EAA0B,GAAGe,QAA7B;AADN,WAAP;AAGA,SAJD;AAKA,OAZF,EAaEH,KAbF;AAcA,KA7EkB;;AAAA,SA+EnBK,eA/EmB,GA+EDC,CAAC,IAAI;AAAA,wBACEA,CAAC,CAACC,MADJ;AAAA,YACdC,IADc,aACdA,IADc;AAAA,YACRC,KADQ,aACRA,KADQ;AAGtB,WAAKX,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNhB,UAAAA,IAAI,oBACAgB,SAAS,CAAChB,IADV;AAEH,aAACyB,IAAD,GAAQC;AAFL,YADE;AAKNnB,UAAAA,MAAM,oBACFS,SAAS,CAACT,MADR;AAEL,aAACkB,IAAD,GAAQ;AAFH;AALA,SAAP;AAUA,OAXD;AAYA,KA9FkB;;AAAA,SA+FnBE,mBA/FmB,GA+FGC,KAAK,IAAI;AAC9B,UAAItB,IAAI,GAAGsB,KAAK,CAACJ,MAAN,CAAaK,KAAb,CAAmB,CAAnB,CAAX;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,WAAKS,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNhB,UAAAA,IAAI,oBAAOgB,SAAS,CAAChB,IAAjB;AAAuBM,YAAAA,IAAI,EAAEA;AAA7B,YADE;AAENC,UAAAA,MAAM,oBACFS,SAAS,CAACT,MADR;AAELD,YAAAA,IAAI,EAAE,IAFD;AAGLwB,YAAAA,aAAa,EAAE;AAHV;AAFA,SAAP;AAQA,OATD;AAUA,KA5GkB;;AAAA,SA8GnBC,qBA9GmB,GA8GKR,CAAC,IAAI;AAC5B,UAAIlB,UAAU,GAAG,CAAC,GAAGkB,CAAC,CAACC,MAAF,CAASE,KAAb,CAAjB;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACA,WAAKU,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNhB,UAAAA,IAAI,oBACAgB,SAAS,CAAChB,IADV;AAEHK,YAAAA,UAAU,EAAEA;AAFT,YADE;AAKNE,UAAAA,MAAM,oBACFS,SAAS,CAACT,MADR;AAELF,YAAAA,UAAU,EAAE;AAFP;AALA,SAAP;AAUA,OAXD;AAYA,KA9HkB;;AAAA,SAgInB2B,eAhImB,GAgID,MAAM;AACvBd,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADuB,CAEvB;;AACA,UAAIc,aAAa,GAChB,KAAKrC,KAAL,CAAWG,QAAX,IAAuB,MAAvB,GACG;AACAE,QAAAA,KAAK,EAAE;AAAEiC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SADP;AAEAlC,QAAAA,WAAW,EAAE;AACZgC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADE,SAFb;AAKAjC,QAAAA,GAAG,EAAE;AAAEA,UAAAA,GAAG,EAAE;AAAP,SALL;AAMAC,QAAAA,IAAI,EAAE;AAAE8B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SANN;AAOA/B,QAAAA,UAAU,EAAE;AACX6B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADC,SAPZ;AAUA9B,QAAAA,IAAI,EAAE;AACL4B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADL;AAVN,OADH,GAeG;AACAnC,QAAAA,KAAK,EAAE;AAAEiC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SADP;AAEAlC,QAAAA,WAAW,EAAE;AACZgC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADE,SAFb;AAKAjC,QAAAA,GAAG,EAAE;AAAEA,UAAAA,GAAG,EAAE;AAAP,SALL;AAMAC,QAAAA,IAAI,EAAE;AAAE8B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ,SANN;AAQA9B,QAAAA,IAAI,EAAE;AACL4B,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AADL;AARN,OAhBJ;AA4BA,UAAI7B,MAAM,GAAGvB,QAAQ,CAAC,KAAKqD,KAAL,CAAWrC,IAAZ,EAAkBiC,aAAlB,CAArB;AACA,UAAIK,WAAW,GAAG,EAAlB;;AACA,UAAI,KAAKD,KAAL,CAAWrC,IAAX,CAAgBM,IAApB,EAA0B;AACzBgC,QAAAA,WAAW,GACV,KAAKD,KAAL,CAAWrC,IAAX,CAAgBM,IAAhB,CAAqBiC,IAArB,GAA4B,IAAI,IAAJ,GAAW,IAAvC,GACG,mBADH,GAEG,IAHJ;AAIA;;AACD,UAAID,WAAW,IAAI/B,MAAnB,EAA2B;AAC1BW,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKJ,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNhB,YAAAA,IAAI,oBACAgB,SAAS,CAAChB,IADV,CADE;AAKNO,YAAAA,MAAM,oBACFS,SAAS,CAACT,MADR,EAEFA,MAFE;AAGLuB,cAAAA,aAAa,EAAEQ;AAHV;AALA,WAAP;AAWA,SAZD;AAaA,OAfD,MAeO,IAAI/B,MAAJ,EAAY;AAClBW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,aAAKQ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd;AACA,OAHM,MAGA,IAAI+B,WAAJ,EAAiB;AACvBpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,WAAZ;AACA,aAAKvB,QAAL,CAAcC,SAAS,IAAI;AAC1B,iBAAO;AACNhB,YAAAA,IAAI,oBACAgB,SAAS,CAAChB,IADV,CADE;AAKNO,YAAAA,MAAM,oBACFS,SAAS,CAACT,MADR;AAGLuB,cAAAA,aAAa,EAAEQ;AAHV;AALA,WAAP;AAWA,SAZD;AAaA,OAfM,MAeA;AACNpB,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,YAAI,KAAKvB,KAAL,CAAWG,QAAX,IAAuB,MAA3B,EAAmC;AAClC,eAAKd,WAAL;AACA,SAFD,MAEO;AACN,eAAKG,WAAL,CAAiB,KAAKiD,KAAL,CAAWrC,IAAX,CAAgBwC,EAAjC;AACA;AACD;AACD,KAhNkB;;AAAA,SAkNnBvD,WAlNmB,GAkNL,MAAM;AACnB,UAAIwD,MAAM,GAAG,KAAKJ,KAAL,CAAWrC,IAAX,CAAgBK,UAAhB,CAA2BQ,GAA3B,CAA+B6B,SAAS,IAAI;AACxD,YAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAV;AAEA,eAAO;AACNtC,UAAAA,IAAI,EAAEuC,GAAG,CAACvC,IADJ;AAENoC,UAAAA,EAAE,EAAEG,GAAG,CAACH;AAFF,SAAP;AAIA,OAPY,CAAb;AAQAtB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AAEA,UAAIK,IAAI,GAAG,IAAIC,QAAJ,EAAX;AAEAD,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBC,KAArC;AACA6C,MAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2B,KAAKX,KAAL,CAAWrC,IAAX,CAAgBE,WAA3C;AACA4C,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBI,IAApC;AACA0C,MAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBG,GAAnC;AACA2C,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBM,IAApC;AACAwC,MAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBJ,IAAI,CAACK,SAAL,CAAeR,MAAf,CAAtB;AAEAxD,MAAAA,WAAW,CAAC,KAAKW,KAAL,CAAWa,KAAZ,EAAmBqC,IAAnB,CAAX,CACEpC,IADF,CACOwC,QAAQ,IAAI;AACjBhC,QAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AACA1D,QAAAA,IAAI,CAAC;AACJS,UAAAA,KAAK,EAAE,YAAY,6BADf;AAGJkD,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAJ;AAMA,aAAKvD,KAAL,CAAWwD,mBAAX,CAA+BF,QAAQ,CAACG,IAAxC;AACA,OAVF,EAWEpC,KAXF,CAWQqC,KAAK,IAAI;AACfpC,QAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAK,CAACJ,QAAN,CAAelD,IAA3B;AACA,OAbF;AAcA,KApPkB;;AAAA,SAsPnBZ,WAtPmB,GAsPLmE,SAAS,IAAI;AAC1BrC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAI2B,IAAI,GAAG,IAAIC,QAAJ,EAAX;AAEAD,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBC,KAArC;AACA6C,MAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2B,KAAKX,KAAL,CAAWrC,IAAX,CAAgBE,WAA3C;AACA4C,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBI,IAApC;AACA0C,MAAAA,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBG,GAAnC;AACA2C,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWrC,IAAX,CAAgBM,IAApC;AAEAlB,MAAAA,WAAW,CAAC,KAAKQ,KAAL,CAAWa,KAAZ,EAAmBqC,IAAnB,EAAyBS,SAAzB,CAAX,CACE7C,IADF,CACOwC,QAAQ,IAAI;AACjBhC,QAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AACA1D,QAAAA,IAAI,CAAC;AACJS,UAAAA,KAAK,EAAE,YAAY,+BADf;AAGJkD,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAJ;AAMA,aAAKvD,KAAL,CAAW4D,sBAAX,CAAkCN,QAAQ,CAACG,IAA3C;AACA,OAVF,EAWEpC,KAXF,CAWQqC,KAAK,IAAI;AACfpC,QAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACA,OAbF;AAcA,KA9QkB;;AAElBpC,IAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAK,CAACG,QAAlB;AACA,SAAKsC,KAAL,GAAa,KAAKvC,eAAL,CAAqBF,MAArB,CAAb;AACA;;AAwCD6D,EAAAA,iBAAiB,GAAG;AACnB,SAAKjD,cAAL;AACA;;AAkODkD,EAAAA,MAAM,GAAG;AACRxC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWG,QAAvB;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACA,WACC,oBAAC,WAAD;AACC,MAAA,IAAI,EAAE,KAAKA,KAAL,CAAW+D,IADlB;AAEC,MAAA,eAAe,EAAE,KAAKrC,eAFvB;AAGC,MAAA,mBAAmB,EAAE,KAAKK,mBAH3B;AAIC,MAAA,QAAQ,EAAE,KAAKK,eAJhB;AAKC,MAAA,MAAM,EAAE,KAAKK,KAAL,CAAW9B,MALpB;AAMC,MAAA,IAAI,EAAE,KAAK8B,KAAL,CAAWrC,IANlB;AAOC,MAAA,UAAU,EAAE,KAAKqC,KAAL,CAAWhC,UAPxB;AAQC,MAAA,KAAK,EAAE,KAAKR,KARb;AASC,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWgE,WATzB;AAUC,MAAA,qBAAqB,EAAE,KAAK7B,qBAV7B;AAWC,MAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWG,QAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAeA;;AAnSkC;;AAA9BL,W,CASEmE,Y,GAAe;AACrB9D,EAAAA,QAAQ,EAAE;AADW,C;;AA6RvB,MAAM+D,eAAe,GAAGzB,KAAK,IAAI;AAChC,SAAO;AACN5B,IAAAA,KAAK,EAAE4B,KAAK,CAAC0B,IAAN,CAAWtD;AADZ,GAAP;AAGA,CAJD;;AAMA,eAAelB,OAAO,CACrBuE,eADqB,EAErB,IAFqB,CAAP,CAGbpE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport {\n\tsendContent,\n\tloadStudentGroups,\n\tloadLectures,\n\teditContent\n} from \"api/contents\";\nimport { StudentGroup, Lecture } from \"serializers/content\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport { CodeSharp } from \"@material-ui/icons\";\n\nclass SendContent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconsole.log(props.openMode);\n\t\tthis.state = this.getInitialState(props);\n\t}\n\n\ttypes = [\"article\", \"video\", \"research_paper\", \"assignment\"];\n\n\tstatic defaultProps = {\n\t\topenMode: \"Send\"\n\t};\n\n\tgetInitialState = props => {\n\t\tif (props.openMode === \"Edit\") {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\turl: \"\",\n\t\t\t\t\ttype: \"\",\n\t\t\t\t\treceipents: [],\n\t\t\t\t\tfile: null,\n\t\t\t\t\t...props.data\n\t\t\t\t},\n\t\t\t\treceipents: [],\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t} else {\n\t\t\t// default mode is assumed to be Send\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\turl: \"\",\n\t\t\t\t\ttype: \"\",\n\t\t\t\t\treceipents: [],\n\t\t\t\t\tfile: null\n\t\t\t\t},\n\t\t\t\treceipents: [],\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadreceipents();\n\t}\n\n\tloadreceipents = () => {\n\t\tloadStudentGroups(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet studentgroups = data.groups.map(group => {\n\t\t\t\t\treturn new StudentGroup(group);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...studentgroups]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\n\t\tloadLectures(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.lectures);\n\t\t\t\tlet lectures = data.lectures.map(lecture => {\n\t\t\t\t\treturn new Lecture(lecture);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...lectures]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\t};\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\t[name]: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t[name]: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\tonfileChangeHandler = event => {\n\t\tlet file = event.target.files[0];\n\t\tconsole.log(file);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, file: file },\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\tfile: null,\n\t\t\t\t\tfilesizeError: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSelectChangeHandler = e => {\n\t\tlet receipents = [...e.target.value];\n\n\t\tconsole.log(receipents);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\treceipents: receipents\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\treceipents: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSubmitHandler = () => {\n\t\tconsole.log(\"submission handler\");\n\t\t//validation\n\t\tlet validationObj =\n\t\t\tthis.props.openMode == \"Send\"\n\t\t\t\t? {\n\t\t\t\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: { url: true },\n\t\t\t\t\t\ttype: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\treceipents: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"are required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: { url: true },\n\t\t\t\t\t\ttype: { presence: { allowEmpty: false, message: \"is required\" } },\n\n\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t}\n\t\t\t\t  };\n\t\tlet errors = validate(this.state.data, validationObj);\n\t\tlet filesizeErr = \"\";\n\t\tif (this.state.data.file) {\n\t\t\tfilesizeErr =\n\t\t\t\tthis.state.data.file.size > 2 * 1024 * 1024\n\t\t\t\t\t? \"File is too large\"\n\t\t\t\t\t: null;\n\t\t}\n\t\tif (filesizeErr && errors) {\n\t\t\tconsole.log(\"many eroora\");\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t\t...errors,\n\t\t\t\t\t\tfilesizeError: filesizeErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else if (errors) {\n\t\t\tconsole.log(errors);\n\t\t\tthis.setState({ errors });\n\t\t} else if (filesizeErr) {\n\t\t\tconsole.log(filesizeErr);\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\n\t\t\t\t\t\tfilesizeError: filesizeErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"Submit handler no error\");\n\t\t\tif (this.props.openMode == \"Send\") {\n\t\t\t\tthis.sendContent();\n\t\t\t} else {\n\t\t\t\tthis.editContent(this.state.data.id);\n\t\t\t}\n\t\t}\n\t};\n\n\tsendContent = () => {\n\t\tlet sendTO = this.state.data.receipents.map(receipent => {\n\t\t\tlet obj = JSON.parse(receipent);\n\n\t\t\treturn {\n\t\t\t\ttype: obj.type,\n\t\t\t\tid: obj.id\n\t\t\t};\n\t\t});\n\t\tconsole.log(sendTO);\n\n\t\tvar form = new FormData();\n\n\t\tform.append(\"title\", this.state.data.title);\n\t\tform.append(\"description\", this.state.data.description);\n\t\tform.append(\"type\", this.state.data.type);\n\t\tform.append(\"url\", this.state.data.url);\n\t\tform.append(\"file\", this.state.data.file);\n\t\tform.append(\"sendTo\", JSON.stringify(sendTO));\n\n\t\tsendContent(this.props.token, form)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Content\" + \" has been sent successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\n\t\t\t\tthis.props.AddContentTableData(response.task);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error.response.data);\n\t\t\t});\n\t};\n\n\teditContent = contentID => {\n\t\tconsole.log(\"hey there edit content\");\n\t\tvar form = new FormData();\n\n\t\tform.append(\"title\", this.state.data.title);\n\t\tform.append(\"description\", this.state.data.description);\n\t\tform.append(\"type\", this.state.data.type);\n\t\tform.append(\"url\", this.state.data.url);\n\t\tform.append(\"file\", this.state.data.file);\n\n\t\teditContent(this.props.token, form, contentID)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Content\" + \" has been edited successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\n\t\t\t\tthis.props.updateContentTableData(response.task);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconsole.log(this.props.openMode);\n\t\tconsole.log(this.props);\n\t\treturn (\n\t\t\t<ContentForm\n\t\t\t\topen={this.props.open}\n\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\tonfileChangeHandler={this.onfileChangeHandler}\n\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\terrors={this.state.errors}\n\t\t\t\tdata={this.state.data}\n\t\t\t\treceipents={this.state.receipents}\n\t\t\t\ttypes={this.types}\n\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\tonSelectChangeHandler={this.onSelectChangeHandler}\n\t\t\t\tmode={this.props.openMode}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tnull\n)(SendContent);\n"]},"metadata":{},"sourceType":"module"}