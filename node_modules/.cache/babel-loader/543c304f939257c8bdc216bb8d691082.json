{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\nimport { sendScheduledata } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { loadStudentGroups, loadLectures } from \"api/quizzes\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass schedulequiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadreceipents = () => {\n      loadStudentGroups(this.props.token).then(data => {\n        let studentgroups = data.groups.map(group => {\n          return new StudentGroup(group);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...studentgroups]\n          };\n        });\n      }).catch();\n      loadLectures(this.props.token).then(data => {\n        console.log(data.lectures);\n        let lectures = data.lectures.map(lecture => {\n          return new Lecture(lecture);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...lectures]\n          };\n        });\n      }).catch();\n    };\n\n    this.startdateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            startdate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            startdate: \"\"\n          })\n        };\n      });\n    };\n\n    this.enddateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            enddate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            enddate: \"\"\n          })\n        };\n      });\n    };\n\n    this.timelimitHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            timelimit: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            timelimit: \"\"\n          })\n        };\n      });\n    };\n\n    this.schedulequizHandler = () => {\n      // validation of user input\n      let errors = validate(this.state.data, {\n        startdate: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            dateOnly: true,\n            earliest: moment.utc(),\n            message: \"Cannot be before Today's date\"\n          }\n        },\n        enddate: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            dateOnly: true,\n            earliest: this.state.data.startdate,\n            message: \"Cannot be before Start date\"\n          }\n        },\n        timelimit: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      });\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        this.sendScheduledata();\n      }\n    };\n\n    this.sendScheduledata = () => {\n      sendScheduledata(this.props.token).then().catch();\n    };\n\n    this.state = {\n      data: {\n        startdate: \"\",\n        enddate: \"\",\n        timelimit: \"\"\n      },\n      receipents: [],\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadreceipents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.quiztitle), React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Scheduling Status: \", this.props.schedulingStatus), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: this.props.classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(TextField, {\n      type: \"date\",\n      onChange: this.startdateHandler,\n      value: this.state.data.startdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Day when quiz begins\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.errors.startdate && this.state.errors.startdate[0])), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(TextField, {\n      type: \"date\",\n      onChange: this.enddateHandler,\n      value: this.state.data.enddate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Last day to give quiz\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.errors.enddate && this.state.errors.enddate[0])), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Time limit\"), React.createElement(TextField, {\n      label: \"Number\",\n      type: \"number\",\n      onChange: this.timelimitHandler,\n      value: this.state.data.timelimit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"(in seconds)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.errors.timelimit && this.state.errors.timelimit[0])), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Participants of Quiz\"), React.createElement(Select, {\n      multiple: true,\n      value: this.state.receipents,\n      name: \"receipents\",\n      error: props.errors.receipents,\n      onChange: props.onSelectChangeHandler,\n      input: React.createElement(OutlinedInput, {\n        name: \"receipents\",\n        labelWidth: 120,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }),\n      renderValue: selected => \"Sending to \" + selected.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, props.receipents.map(receipent => {\n      return React.createElement(MenuItem, {\n        key: receipent.id,\n        value: JSON.stringify(receipent),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, receipent.name);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.errors.timelimit && this.state.errors.timelimit[0]))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.schedulequizHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Schedule Quiz\"));\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  let title = \"\";\n  state.quiz.quizlistTabledata.map(quiz => {\n    if (quiz.id == props.match.params.quizId) {\n      title = quiz.title;\n    }\n  });\n  let schedulingStatus = \"\";\n  state.quiz.quizlistTabledata.map(quiz => {\n    if (quiz.id == props.match.params.quizId) {\n      switch (quiz.schedulingStatus) {\n        case 0:\n          schedulingStatus = \"Not Scheduled\";\n          break;\n\n        case 1:\n          schedulingStatus = \"Scheduled\";\n          break;\n\n        case 2:\n          schedulingStatus = \"Disabled\";\n          break;\n\n        case 3:\n          schedulingStatus = \"Expired\";\n          break;\n\n        default:\n          schedulingStatus = \"Default case\";\n      }\n    }\n  });\n  return {\n    token: state.auth.token,\n    quiztitle: title,\n    schedulingStatus: schedulingStatus\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(schedulequiz));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx"],"names":["React","Component","Grid","Typography","TextField","Button","Select","moment","styles","withStyles","validate","sendScheduledata","connect","loadStudentGroups","loadLectures","extend","validators","datetime","parse","value","options","utc","format","dateOnly","schedulequiz","constructor","props","loadreceipents","token","then","data","studentgroups","groups","map","group","StudentGroup","setState","prevState","receipents","catch","console","log","lectures","lecture","Lecture","startdateHandler","e","target","startdate","errors","enddateHandler","enddate","timelimitHandler","timelimit","schedulequizHandler","state","presence","allowEmpty","message","earliest","componentDidMount","render","classes","root","textAlign","quiztitle","schedulingStatus","content","onSelectChangeHandler","selected","length","receipent","id","JSON","stringify","name","mapStateToProps","title","quiz","quizlistTabledata","match","params","quizId","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\nimport { sendScheduledata } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { loadStudentGroups, loadLectures } from \"api/quizzes\";\n\nvalidate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nclass schedulequiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tstartdate: \"\",\n\t\t\t\tenddate: \"\",\n\t\t\t\ttimelimit: \"\"\n\t\t\t},\n\t\t\treceipents: [],\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadreceipents();\n\t}\n\n\tloadreceipents = () => {\n\t\tloadStudentGroups(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet studentgroups = data.groups.map(group => {\n\t\t\t\t\treturn new StudentGroup(group);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...studentgroups]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\n\t\tloadLectures(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data.lectures);\n\t\t\t\tlet lectures = data.lectures.map(lecture => {\n\t\t\t\t\treturn new Lecture(lecture);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...lectures]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch();\n\t};\n\n\tstartdateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, startdate: value },\n\t\t\t\terrors: { ...prevState.errors, startdate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tenddateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, enddate: value },\n\t\t\t\terrors: { ...prevState.errors, enddate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\ttimelimitHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, timelimit: value },\n\t\t\t\terrors: { ...prevState.errors, timelimit: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tschedulequizHandler = () => {\n\t\t// validation of user input\n\t\tlet errors = validate(this.state.data, {\n\t\t\tstartdate: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tdateOnly: true,\n\t\t\t\t\tearliest: moment.utc(),\n\t\t\t\t\tmessage: \"Cannot be before Today's date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tenddate: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tdateOnly: true,\n\t\t\t\t\tearliest: this.state.data.startdate,\n\t\t\t\t\tmessage: \"Cannot be before Start date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\ttimelimit: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t}\n\t\t});\n\n\t\tif (errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors\n\t\t\t});\n\t\t} else {\n\t\t\tthis.sendScheduledata();\n\t\t}\n\t};\n\n\tsendScheduledata = () => {\n\t\tsendScheduledata(this.props.token)\n\t\t\t.then()\n\t\t\t.catch();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.classes.root}>\n\t\t\t\t<Typography style={{ textAlign: \"center\" }} variant=\"h3\">\n\t\t\t\t\t{this.props.quiztitle}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography style={{ textAlign: \"center\" }} variant=\"subtitle1\">\n\t\t\t\t\tScheduling Status: {this.props.schedulingStatus}\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={2} className={this.props.classes.content}>\n\t\t\t\t\t<Grid item md={3}>\n\t\t\t\t\t\t<Typography>Start Date</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tonChange={this.startdateHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.startdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">Day when quiz begins</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.startdate && this.state.errors.startdate[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={3}>\n\t\t\t\t\t\t<Typography>End Date</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tonChange={this.enddateHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.enddate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">Last day to give quiz</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.enddate && this.state.errors.enddate[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={3}>\n\t\t\t\t\t\t<Typography>Time limit</Typography>\n\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Number\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={this.timelimitHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.timelimit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">(in seconds)</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.timelimit && this.state.errors.timelimit[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={3}>\n\t\t\t\t\t\t<Typography>Participants of Quiz</Typography>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={this.state.receipents}\n\t\t\t\t\t\t\tname=\"receipents\"\n\t\t\t\t\t\t\terror={props.errors.receipents}\n\t\t\t\t\t\t\tonChange={props.onSelectChangeHandler}\n\t\t\t\t\t\t\tinput={<OutlinedInput name=\"receipents\" labelWidth={120} />}\n\t\t\t\t\t\t\trenderValue={selected => \"Sending to \" + selected.length}>\n\t\t\t\t\t\t\t{props.receipents.map(receipent => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tkey={receipent.id}\n\t\t\t\t\t\t\t\t\t\tvalue={JSON.stringify(receipent)}>\n\t\t\t\t\t\t\t\t\t\t{receipent.name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.timelimit && this.state.errors.timelimit[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={this.schedulequizHandler}>\n\t\t\t\t\tSchedule Quiz\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, props) => {\n\tlet title = \"\";\n\tstate.quiz.quizlistTabledata.map(quiz => {\n\t\tif (quiz.id == props.match.params.quizId) {\n\t\t\ttitle = quiz.title;\n\t\t}\n\t});\n\n\tlet schedulingStatus = \"\";\n\tstate.quiz.quizlistTabledata.map(quiz => {\n\t\tif (quiz.id == props.match.params.quizId) {\n\t\t\tswitch (quiz.schedulingStatus) {\n\t\t\t\tcase 0:\n\t\t\t\t\tschedulingStatus = \"Not Scheduled\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tschedulingStatus = \"Scheduled\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tschedulingStatus = \"Disabled\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tschedulingStatus = \"Expired\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tschedulingStatus = \"Default case\";\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tquiztitle: title,\n\t\tschedulingStatus: schedulingStatus\n\t};\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(schedulequiz));\n"]},"metadata":{},"sourceType":"module"}