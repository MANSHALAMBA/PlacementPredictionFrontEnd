{"ast":null,"code":"import cloneDeep from \"lodash/cloneDeep\";\nimport { default as extend } from \"lodash/assignIn\";\nconst initialState = {\n  isSolved: false,\n  isEdited: false\n};\n\nconst reducer = (state = cloneDeep(initialState), action = {}) => {\n  switch (action.type) {\n    case \"INPUT_VALUE\":\n      return extend({}, state, {\n        isEdited: true\n      });\n\n    case \"SOLVE\":\n      return extend({}, state, {\n        isSolved: true,\n        isEdited: true\n      });\n\n    case \"CLEAR\":\n      return extend({}, state, {\n        isSolved: false,\n        isEdited: false\n      });\n\n    case \"UNDO\":\n      if (!window.gridHistory.length) {\n        return extend({}, state, {\n          isEdited: false\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/store/reducers/sudokustatus.js"],"names":["cloneDeep","default","extend","initialState","isSolved","isEdited","reducer","state","action","type","window","gridHistory","length"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,iBAAlC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,SAAS,CAACG,YAAD,CAAlB,EAAkCK,MAAM,GAAG,EAA3C,KAAkD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOP,MAAM,CAAC,EAAD,EAAKK,KAAL,EAAY;AAAEF,QAAAA,QAAQ,EAAE;AAAZ,OAAZ,CAAb;;AACF,SAAK,OAAL;AACE,aAAOH,MAAM,CAAC,EAAD,EAAKK,KAAL,EAAY;AAAEH,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAZ,CAAb;;AACF,SAAK,OAAL;AACE,aAAOH,MAAM,CAAC,EAAD,EAAKK,KAAL,EAAY;AAAEH,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAZ,CAAb;;AACF,SAAK,MAAL;AACE,UAAI,CAACK,MAAM,CAACC,WAAP,CAAmBC,MAAxB,EAAgC;AAC9B,eAAOV,MAAM,CAAC,EAAD,EAAKK,KAAL,EAAY;AAAEF,UAAAA,QAAQ,EAAE;AAAZ,SAAZ,CAAb;AACD;;AACD,aAAOE,KAAP;;AACF;AACE,aAAOA,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["import cloneDeep from \"lodash/cloneDeep\";\nimport { default as extend } from \"lodash/assignIn\";\n\nconst initialState = {\n  isSolved: false,\n  isEdited: false\n};\n\nconst reducer = (state = cloneDeep(initialState), action = {}) => {\n  switch (action.type) {\n    case \"INPUT_VALUE\":\n      return extend({}, state, { isEdited: true });\n    case \"SOLVE\":\n      return extend({}, state, { isSolved: true, isEdited: true });\n    case \"CLEAR\":\n      return extend({}, state, { isSolved: false, isEdited: false });\n    case \"UNDO\":\n      if (!window.gridHistory.length) {\n        return extend({}, state, { isEdited: false });\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}