{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport EditToolbar from \"./components/EditToolbar\";\nimport Header from \"./components/header\";\nimport { Typography } from \"@material-ui/core\";\nimport Visualization from \"./components/Visualization\";\nimport MaterialTable from \"material-table\";\n\nclass EditQuiz extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"Question\",\n      field: \"question\"\n    }, {\n      title: \"Options\",\n      field: \"options\",\n      render: rowData => rowData.options.map(option => {\n        if (option == \"a\") {\n          React.createElement(\"li\", {\n            style: {\n              color: \"green\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, option);\n        } else React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, option);\n      })\n    }, {\n      title: \"Difficulty Level\",\n      field: \"difficultyLevel\"\n    }, {\n      title: \"Skills\",\n      field: \"skills\",\n      render: rowData => rowData.skills.map(skill => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, skill);\n      })\n    }, {\n      title: \"Id\",\n      field: \"id\",\n      hidden: true\n    }, {\n      title: \"Correct Option\",\n      field: \"correctOption\",\n      hidden: true\n    }];\n    this.data = this.state.data.Questions;\n    this.state = {\n      data: {\n        title: \"Python\",\n        skills: [\"ds\", \"algo\"],\n        numberOfQuestions: 5,\n        Questions: [{\n          question: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: \"a\",\n          difficultyLevel: \"easy\",\n          skills: [\"ds\"],\n          id: \"1\"\n        }, {\n          question: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: [\"b\"],\n          difficultyLevel: \"hard\",\n          skills: [\"algo\"],\n          id: \"2\"\n        }, {\n          question: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: [\"a\"],\n          difficultyLevel: \"medium\",\n          skills: [\"ds\"],\n          id: \"3\"\n        }],\n        estimatedTime: 160\n      }\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.data.title)), React.createElement(EditToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Header, {\n      numberOfQuestions: this.state.data.numberOfQuestions,\n      estimatedTime: this.state.data.estimatedTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Visualization, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      columns: this.columns,\n      data: this.data,\n      options: {\n        filtering: true,\n        actionsColumnIndex: -1\n      },\n      actions: this.actions,\n      title: \"Questions List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(EditQuiz);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/index.jsx"],"names":["React","Component","styles","withStyles","EditToolbar","Header","Typography","Visualization","MaterialTable","EditQuiz","constructor","props","columns","title","field","render","rowData","options","map","option","color","skills","skill","hidden","data","state","Questions","numberOfQuestions","question","correctOption","difficultyLevel","id","estimatedTime","classes","root","heading","content","filtering","actionsColumnIndex","actions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport EditToolbar from \"./components/EditToolbar\";\nimport Header from \"./components/header\";\nimport { Typography } from \"@material-ui/core\";\nimport Visualization from \"./components/Visualization\";\nimport MaterialTable from \"material-table\";\n\nclass EditQuiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\ttitle: \"Python\",\n\t\t\t\tskills: [\"ds\", \"algo\"],\n\t\t\t\tnumberOfQuestions: 5,\n\t\t\t\tQuestions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tquestion: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: \"a\",\n\t\t\t\t\t\tdifficultyLevel: \"easy\",\n\t\t\t\t\t\tskills: [\"ds\"],\n\t\t\t\t\t\tid: \"1\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tquestion: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: [\"b\"],\n\t\t\t\t\t\tdifficultyLevel: \"hard\",\n\t\t\t\t\t\tskills: [\"algo\"],\n\t\t\t\t\t\tid: \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tquestion: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: [\"a\"],\n\t\t\t\t\t\tdifficultyLevel: \"medium\",\n\t\t\t\t\t\tskills: [\"ds\"],\n\t\t\t\t\t\tid: \"3\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\testimatedTime: 160\n\t\t\t}\n\t\t};\n\t}\n\tcolumns = [\n\t\t{ title: \"Question\", field: \"question\" },\n\t\t{\n\t\t\ttitle: \"Options\",\n\t\t\tfield: \"options\",\n\t\t\trender: rowData =>\n\t\t\t\trowData.options.map(option => {\n\t\t\t\t\tif (option == \"a\") {\n\t\t\t\t\t\t<li style={{ color: \"green\" }}>{option}</li>;\n\t\t\t\t\t} else <li>{option}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\ttitle: \"Difficulty Level\",\n\t\t\tfield: \"difficultyLevel\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Skills\",\n\t\t\tfield: \"skills\",\n\t\t\trender: rowData =>\n\t\t\t\trowData.skills.map(skill => {\n\t\t\t\t\treturn <li>{skill}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\ttitle: \"Id\",\n\t\t\tfield: \"id\",\n\t\t\thidden: true\n\t\t},\n\t\t{\n\t\t\ttitle: \"Correct Option\",\n\t\t\tfield: \"correctOption\",\n\t\t\thidden: true\n\t\t}\n\t];\n\n\tdata = this.state.data.Questions;\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.heading}>\n\t\t\t\t\t<Typography align=\"center\" variant=\"h3\">\n\t\t\t\t\t\t{this.state.data.title}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<EditToolbar />\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumberOfQuestions={this.state.data.numberOfQuestions}\n\t\t\t\t\t\testimatedTime={this.state.data.estimatedTime}\n\t\t\t\t\t/>\n\t\t\t\t\t<Visualization />\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\tdata={this.data}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\tactionsColumnIndex: -1\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tactions={this.actions}\n\t\t\t\t\t\ttitle=\"Questions List\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withStyles(styles)(EditQuiz);\n"]},"metadata":{},"sourceType":"module"}