{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portaldev/src/views/Quiz/components/EditQuiz/components/QuestionsForm/Form/index.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  splitFormSpacing: {\n    marginTop: \"16px\",\n    marginBottom: \"8px\"\n  },\n  alignSpacing: {\n    marginTop: \"8px\"\n  }\n}));\n\nconst QuestionForm = props => {\n  const classes = useStyles();\n  return React.createElement(Dialog, {\n    onClose: props.handleClose,\n    open: props.open,\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", props.mode, \" QUESTION\"), React.createElement(IconButton, {\n    className: classes.closeButton,\n    onClick: props.handleCloseForm,\n    disabled: props.isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.isLoading ? React.createElement(LinearProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : null, React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: props.data.questiontitle,\n    label: \"Question\",\n    variant: \"outlined\",\n    fullWidth: true,\n    name: \"questiontitle\",\n    onChange: props.onChangeHandler,\n    required: true,\n    error: props.errors.questiontitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"error\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.errors.questiontitle && props.errors.questiontitle[0])), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \", React.createElement(Grid, {\n    container: true,\n    spacing: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Options:\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.onaddOption,\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"ADD\"))), props.data.options.map((option, index) => {\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      key: \"option_checkbox\" + index,\n      xs: 1,\n      className: classes.alignSpacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: e => props.OnCorrectOptionChange(e, index),\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      checked: option === props.data.correctOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      key: \"option_textfield\" + index,\n      xs: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"option\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      style: {\n        width: \"100%\"\n      },\n      name: \"option\",\n      value: props.data.options[index],\n      onChange: e => props.onOptionChange(e, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      color: \"error\",\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, props.errors.options && props.errors.options[index] && props.errors.options[index].Option)), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      key: \"option_closebutton\" + index,\n      className: classes.alignSpacing,\n      style: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        alignitems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: e => props.ondeleteOption(e, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))));\n  }), React.createElement(Typography, {\n    color: \"error\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, props.errors.correctOption && props.errors.correctOption[0])), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Difficulty level Of Question\"), React.createElement(Select, {\n    value: props.data.difficultyLevel,\n    name: \"difficultyLevel\",\n    onChange: props.onChangeHandler,\n    error: props.errors.type,\n    input: React.createElement(OutlinedInput, {\n      name: \"difficultyLevel\",\n      labelWidth: 160,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    error: props.errors.difficultyLevel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    key: \"easy\",\n    value: \"easy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Easy\"), React.createElement(MenuItem, {\n    key: \"medium\",\n    value: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Medium\"), React.createElement(MenuItem, {\n    key: \"hard\",\n    value: \"hard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Hard\"))), React.createElement(Typography, {\n    color: \"error\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, props.errors.difficultyLevel && props.errors.difficultyLevel[0])), React.createElement(Grid, {\n    className: classes.splitFormSpacing,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Skills Being Tested:\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, props.skills.map((skill, index) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onChange: e => props.skillChange(e, skill),\n      checked: props.data.skills.indexOf(skill) != -1,\n      inputProps: {\n        \"aria-label\": \"primary checkbox\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.alignSpacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"  \" + skill)));\n  })), React.createElement(Typography, {\n    color: \"error\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, props.errors.skills && props.errors.skills[0])), props.isLoading ? React.createElement(LinearProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }) : null), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.onSubmit,\n    disabled: props.isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, props.mode, \" Question\")));\n};\n\nexport default QuestionForm;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portaldev/src/views/Quiz/components/EditQuiz/components/QuestionsForm/Form/index.jsx"],"names":["React","Grid","Typography","TextField","Button","DialogActions","DialogContent","Dialog","DialogTitle","FormControl","Select","OutlinedInput","InputLabel","MenuItem","IconButton","CloseIcon","DeleteIcon","makeStyles","Checkbox","LinearProgress","useStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","splitFormSpacing","marginTop","marginBottom","alignSpacing","QuestionForm","props","classes","handleClose","open","mode","handleCloseForm","isLoading","data","questiontitle","onChangeHandler","errors","onaddOption","float","options","map","option","index","e","OnCorrectOptionChange","correctOption","width","onOptionChange","Option","justifyContent","display","alignitems","ondeleteOption","difficultyLevel","type","flexWrap","skills","skill","flexDirection","margin","skillChange","indexOf","paddingLeft","onSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles(theme => ({\n\tcloseButton: {\n\t\tposition: \"absolute\",\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500]\n\t},\n\tsplitFormSpacing: {\n\t\tmarginTop: \"16px\",\n\t\tmarginBottom: \"8px\"\n\t},\n\talignSpacing: {\n\t\tmarginTop: \"8px\"\n\t}\n}));\n\nconst QuestionForm = props => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Dialog\n\t\t\tonClose={props.handleClose}\n\t\t\topen={props.open}\n\t\t\tfullWidth\n\t\t\tmaxWidth=\"md\"\n\t\t\tdisableBackdropClick={true}>\n\t\t\t<DialogTitle>\n\t\t\t\t<Typography variant=\"h3\"> {props.mode} QUESTION</Typography>\n\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={classes.closeButton}\n\t\t\t\t\tonClick={props.handleCloseForm}\n\t\t\t\t\tdisabled={props.isLoading}>\n\t\t\t\t\t<CloseIcon />\n\t\t\t\t</IconButton>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t{props.isLoading ? <LinearProgress /> : null}\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvalue={props.data.questiontitle}\n\t\t\t\t\t\tlabel=\"Question\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"questiontitle\"\n\t\t\t\t\t\tonChange={props.onChangeHandler}\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\terror={props.errors.questiontitle}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography color=\"error\" variant=\"caption\">\n\t\t\t\t\t\t{props.errors.questiontitle && props.errors.questiontitle[0]}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<Grid container spacing={12}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography color=\"primary\" variant=\"h4\">\n\t\t\t\t\t\t\t\tOptions:\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={props.onaddOption}\n\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}>\n\t\t\t\t\t\t\t\tADD\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{props.data.options.map((option, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\tkey={\"option_checkbox\" + index}\n\t\t\t\t\t\t\t\t\txs={1}\n\t\t\t\t\t\t\t\t\tclassName={classes.alignSpacing}>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tonChange={e => props.OnCorrectOptionChange(e, index)}\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"primary checkbox\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tchecked={option === props.data.correctOption}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item key={\"option_textfield\" + index} xs={9}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tlabel=\"option\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\tname=\"option\"\n\t\t\t\t\t\t\t\t\t\tvalue={props.data.options[index]}\n\t\t\t\t\t\t\t\t\t\tonChange={e => props.onOptionChange(e, index)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography color=\"error\" variant=\"caption\">\n\t\t\t\t\t\t\t\t\t\t{props.errors.options &&\n\t\t\t\t\t\t\t\t\t\t\tprops.errors.options[index] &&\n\t\t\t\t\t\t\t\t\t\t\tprops.errors.options[index].Option}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs={1}\n\t\t\t\t\t\t\t\t\tkey={\"option_closebutton\" + index}\n\t\t\t\t\t\t\t\t\tclassName={classes.alignSpacing}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\talignitems: \"center\"\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<IconButton onClick={e => props.ondeleteOption(e, index)}>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<Typography color=\"error\" variant=\"caption\">\n\t\t\t\t\t\t{props.errors.correctOption && props.errors.correctOption[0]}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t\t\t\t<InputLabel>Difficulty level Of Question</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={props.data.difficultyLevel}\n\t\t\t\t\t\t\tname=\"difficultyLevel\"\n\t\t\t\t\t\t\tonChange={props.onChangeHandler}\n\t\t\t\t\t\t\terror={props.errors.type}\n\t\t\t\t\t\t\tinput={<OutlinedInput name=\"difficultyLevel\" labelWidth={160} />}\n\t\t\t\t\t\t\terror={props.errors.difficultyLevel}>\n\t\t\t\t\t\t\t<MenuItem key=\"easy\" value=\"easy\">\n\t\t\t\t\t\t\t\tEasy\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"medium\" value=\"medium\">\n\t\t\t\t\t\t\t\tMedium\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem key=\"hard\" value=\"hard\">\n\t\t\t\t\t\t\t\tHard\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<Typography color=\"error\" variant=\"caption\">\n\t\t\t\t\t\t{props.errors.difficultyLevel && props.errors.difficultyLevel[0]}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className={classes.splitFormSpacing} item xs={12}>\n\t\t\t\t\t<Typography>Skills Being Tested:</Typography>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexWrap: \"wrap\",\n\t\t\t\t\t\t\tjustifyContent: \"space-between\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{props.skills.map((skill, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\tmargin: \"5px\"\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => props.skillChange(e, skill)}\n\t\t\t\t\t\t\t\t\t\t\tchecked={props.data.skills.indexOf(skill) != -1}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"primary checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div style={{ paddingLeft: \"10px\" }}>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.alignSpacing}>\n\t\t\t\t\t\t\t\t\t\t\t{\"  \" + skill}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography color=\"error\" variant=\"caption\">\n\t\t\t\t\t\t{props.errors.skills && props.errors.skills[0]}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t{props.isLoading ? <LinearProgress /> : null}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={props.onSubmit}\n\t\t\t\t\tdisabled={props.isLoading}>\n\t\t\t\t\t{props.mode} Question\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nexport default QuestionForm;\n"]},"metadata":{},"sourceType":"module"}