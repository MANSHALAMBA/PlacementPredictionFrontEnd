{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ScheduleQuiz from \"./components/ScheduleQuiz/index\";\nimport EditQuiz from \"./components/EditQuiz/index\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { QUIZ } from \"../../constants\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // check for project in redux\n    let outcome = \"FAILURE\";\n    this.props.quizlist.forEach(element => {\n      if (element.id = this.props.match.params.quizId) {\n        outcome = \"SUCCESS\";\n      }\n    });\n\n    if (outcome === \"SUCCESS\") {\n      this.setState({\n        isLoading: false\n      });\n    } else if (outcome === \"FAILURE\") {\n      fetchQuizdata(this.props.token, this.props.match.params.quizId).then(data => {\n        this.props.pushQuiztoQuizList(new Quiz(data.quiz));\n        this.setState({\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(DashboardLayout, {\n      mode: QUIZ,\n      title: \"Quiz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.isLoading && React.createElement(Route, {\n      component: Loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/quiz/:quizId/schedule-quiz\",\n      component: ScheduleQuiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/quiz/:quizId/edit-quiz\",\n      component: EditQuiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushProjecttoProjectList: project => dispatch({\n      type: \"PUSH PROJECT TO PROJECT LIST\",\n      project: project\n    })\n  };\n};\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    projectlist: state.project.projectlistTabledata\n  };\n};\n\nexport default compose(withStyles(styles))(Quiz);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/index.jsx"],"names":["React","Component","Route","Switch","compose","Dashboard","DashboardLayout","ScheduleQuiz","EditQuiz","styles","withStyles","QUIZ","Quiz","constructor","props","state","isLoading","componentDidMount","outcome","quizlist","forEach","element","id","match","params","quizId","setState","fetchQuizdata","token","then","data","pushQuiztoQuizList","quiz","catch","error","console","log","render","Loader","mapDispatchToProps","dispatch","pushProjecttoProjectList","project","type","mapStatetoProps","auth","projectlist","projectlistTabledata"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,SAA7C;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAC5BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB;AACA,QAAIC,OAAO,GAAG,SAAd;AACA,SAAKJ,KAAL,CAAWK,QAAX,CAAoBC,OAApB,CAA4BC,OAAO,IAAI;AACtC,UAAKA,OAAO,CAACC,EAAR,GAAa,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,MAA1C,EAAmD;AAClDP,QAAAA,OAAO,GAAG,SAAV;AACA;AACD,KAJD;;AAMA,QAAIA,OAAO,KAAK,SAAhB,EAA2B;AAC1B,WAAKQ,QAAL,CAAc;AACbV,QAAAA,SAAS,EAAE;AADE,OAAd;AAGA,KAJD,MAIO,IAAIE,OAAO,KAAK,SAAhB,EAA2B;AACjCS,MAAAA,aAAa,CAAC,KAAKb,KAAL,CAAWc,KAAZ,EAAmB,KAAKd,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,MAA3C,CAAb,CACEI,IADF,CACOC,IAAI,IAAI;AACb,aAAKhB,KAAL,CAAWiB,kBAAX,CAA8B,IAAInB,IAAJ,CAASkB,IAAI,CAACE,IAAd,CAA9B;AACA,aAAKN,QAAL,CAAc;AACbV,UAAAA,SAAS,EAAE;AADE,SAAd;AAGA,OANF,EAOEiB,KAPF,CAOQC,KAAK,IAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,OATF;AAUA;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1B,IAAvB;AAA6B,MAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKI,KAAL,CAAWC,SAAX,IAAwB,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEsB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,EAEC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,6BAFN;AAGC,MAAA,SAAS,EAAE/B,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAOC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,yBAAlB;AAA4C,MAAA,SAAS,EAAEC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,CAFF,CADD;AAeA;;AAnD2B;;AAqD7B,MAAM+B,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNC,IAAAA,wBAAwB,EAAEC,OAAO,IAChCF,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,8BADE;AAERD,MAAAA,OAAO,EAAEA;AAFD,KAAD;AAFH,GAAP;AAOA,CARD;;AASA,MAAME,eAAe,GAAG7B,KAAK,IAAI;AAChC,SAAO;AACNa,IAAAA,KAAK,EAAEb,KAAK,CAAC8B,IAAN,CAAWjB,KADZ;AAENkB,IAAAA,WAAW,EAAE/B,KAAK,CAAC2B,OAAN,CAAcK;AAFrB,GAAP;AAIA,CALD;;AAOA,eAAe3C,OAAO,CAACM,UAAU,CAACD,MAAD,CAAX,CAAP,CAA4BG,IAA5B,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ScheduleQuiz from \"./components/ScheduleQuiz/index\";\nimport EditQuiz from \"./components/EditQuiz/index\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { QUIZ } from \"../../constants\";\n\nclass Quiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// check for project in redux\n\t\tlet outcome = \"FAILURE\";\n\t\tthis.props.quizlist.forEach(element => {\n\t\t\tif ((element.id = this.props.match.params.quizId)) {\n\t\t\t\toutcome = \"SUCCESS\";\n\t\t\t}\n\t\t});\n\n\t\tif (outcome === \"SUCCESS\") {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false\n\t\t\t});\n\t\t} else if (outcome === \"FAILURE\") {\n\t\t\tfetchQuizdata(this.props.token, this.props.match.params.quizId)\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis.props.pushQuiztoQuizList(new Quiz(data.quiz));\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<DashboardLayout mode={QUIZ} title=\"Quiz\">\n\t\t\t\t{\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{this.state.isLoading && <Route component={Loader} />}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/quiz/:quizId/schedule-quiz\"\n\t\t\t\t\t\t\tcomponent={ScheduleQuiz}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route exact path=\"/quiz/:quizId/edit-quiz\" component={EditQuiz} />\n\t\t\t\t\t</Switch>\n\t\t\t\t}\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tpushProjecttoProjectList: project =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"PUSH PROJECT TO PROJECT LIST\",\n\t\t\t\tproject: project\n\t\t\t})\n\t};\n};\nconst mapStatetoProps = state => {\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tprojectlist: state.project.projectlistTabledata\n\t};\n};\n\nexport default compose(withStyles(styles))(Quiz);\n"]},"metadata":{},"sourceType":"module"}