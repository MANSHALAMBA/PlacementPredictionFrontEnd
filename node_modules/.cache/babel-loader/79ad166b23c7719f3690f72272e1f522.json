{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/Dashboard/index.jsx\";\nimport React, { Component } from \"react\"; // Externals\n\nimport PropTypes from \"prop-types\"; // Material helpers\n\nimport { withStyles } from \"@material-ui/styles\"; // Material components\n\nimport { Grid } from \"@material-ui/core\"; // Shared layouts\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { connect } from \"react-redux\";\nimport { Slider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // Custom components\n\nimport swal from \"sweetalert\"; // Component styles\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  item: {\n    height: \"100%\"\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.marks = [{\n      value: 0,\n      label: \"0\"\n    }, {\n      value: 1,\n      label: \"1\"\n    }, {\n      value: 2,\n      label: \"2\"\n    }, {\n      value: 3,\n      label: \"3\"\n    }, {\n      value: 4,\n      label: \"4\"\n    }, {\n      value: 5,\n      label: \"5\"\n    }];\n\n    this.valuetext = value => {\n      return \"\".concat(value, \"\\xB0C\");\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      defaultValue: 2,\n      getAriaValueText: this.valuetext,\n      \"aria-labelledby\": \"discrete-slider-always\",\n      step: 1,\n      max: 5,\n      marks: this.marks,\n      valueLabelDisplay: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Dashboard)); // import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import Slider from '@material-ui/core/Slider';\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: 300,\n//   },\n//   margin: {\n//     height: theme.spacing(3),\n//   },\n// }));\n// const marks = [\n//   {\n//     value: 0,\n//     label: '0',\n//   },\n//   {\n//     value: 1,\n//     label: '1',\n//   },\n//   {\n//     value: 2,\n//     label: '2',\n//   },\n//   {\n//     value: 3,\n//     label: '3',\n//   },\n//   {\n//     value: 4,\n//     label: '4',\n//   },\n//   {\n//     value: 5,\n//     label: '5',\n//   },\n// ];\n// function valuetext(value) {\n//   return `${value}°C`;\n// }\n// export default function DiscreteSlider() {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root}>\n//       <div className={classes.margin} />\n//       <Slider\n//         defaultValue={2}\n//         getAriaValueText={valuetext}\n//         aria-labelledby=\"discrete-slider-always\"\n//         step={1}\n//         max={5}\n//         marks={marks}\n//         valueLabelDisplay=\"on\"\n//       />\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/Dashboard/index.jsx"],"names":["React","Component","PropTypes","withStyles","Grid","Dashboard","DashboardLayout","connect","Slider","makeStyles","swal","styles","theme","root","padding","spacing","item","height","constructor","props","marks","value","label","valuetext","state","render","classes","propTypes","object","isRequired","mapStateToProps","token","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Externals\nimport PropTypes from \"prop-types\";\n\n// Material helpers\nimport { withStyles } from \"@material-ui/styles\";\n\n// Material components\nimport { Grid } from \"@material-ui/core\";\n\n// Shared layouts\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport { connect } from \"react-redux\";\nimport { Slider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Custom components\n\nimport swal from \"sweetalert\";\n\n// Component styles\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  item: {\n    height: \"100%\"\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  marks = [\n    {\n      value: 0,\n      label: \"0\"\n    },\n    {\n      value: 1,\n      label: \"1\"\n    },\n    {\n      value: 2,\n      label: \"2\"\n    },\n    {\n      value: 3,\n      label: \"3\"\n    },\n    {\n      value: 4,\n      label: \"4\"\n    },\n    {\n      value: 5,\n      label: \"5\"\n    }\n  ];\n\n  valuetext = value => {\n    return `${value}°C`;\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout title=\"Dashboard\">\n        <div className={classes.root}>\n          <Slider\n            defaultValue={2}\n            getAriaValueText={this.valuetext}\n            aria-labelledby=\"discrete-slider-always\"\n            step={1}\n            max={5}\n            marks={this.marks}\n            valueLabelDisplay=\"on\"\n          />\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Dashboard));\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import Slider from '@material-ui/core/Slider';\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: 300,\n//   },\n//   margin: {\n//     height: theme.spacing(3),\n//   },\n// }));\n\n// const marks = [\n//   {\n//     value: 0,\n//     label: '0',\n//   },\n//   {\n//     value: 1,\n//     label: '1',\n//   },\n//   {\n//     value: 2,\n//     label: '2',\n//   },\n//   {\n//     value: 3,\n//     label: '3',\n//   },\n//   {\n//     value: 4,\n//     label: '4',\n//   },\n//   {\n//     value: 5,\n//     label: '5',\n//   },\n// ];\n\n// function valuetext(value) {\n//   return `${value}°C`;\n// }\n\n// export default function DiscreteSlider() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n\n//       <div className={classes.margin} />\n\n//       <Slider\n//         defaultValue={2}\n//         getAriaValueText={valuetext}\n//         aria-labelledby=\"discrete-slider-always\"\n//         step={1}\n//         max={5}\n//         marks={marks}\n//         valueLabelDisplay=\"on\"\n//       />\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}