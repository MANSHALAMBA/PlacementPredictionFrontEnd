{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx\";\nimport React, { Component, PureComponent } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Typography } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\"; // styles\n\nimport styles from \"./styles\";\nimport style from \"./style.module.css\";\nimport { withStyles } from \"@material-ui/styles\";\nimport sampleSize from \"lodash.samplesize\";\n\nconst randomNumberBetween = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nclass Number extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      if (this.props.clickable) {\n        this.props.onClick(this.props.id);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"number\",\n      style: {\n        opacity: this.props.clickable ? 1 : 0.3\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.challengeNumbers = Array.from({\n      length: this.props.challengeSize\n    }).map(() => randomNumberBetween(...this.props.challengeRange));\n    this.target = sampleSize(this.challengeNumbers, this.props.challengeSize - 2).reduce((acc, curr) => acc + curr, 0);\n\n    this.startGame = () => {\n      this.setState({\n        gameStatus: \"playing\"\n      }, () => {\n        this.intervalId = setInterval(() => {\n          this.setState(prevState => {\n            const newRemainingSeconds = prevState.remainingSeconds - 1;\n\n            if (newRemainingSeconds === 0) {\n              clearInterval(this.intervalId);\n              return {\n                gameStatus: \"lost\",\n                remainingSeconds: 0\n              };\n            }\n\n            return {\n              remainingSeconds: newRemainingSeconds\n            };\n          });\n        }, 1000);\n      });\n    };\n\n    this.isNumberAvailable = numberIndex => this.state.selectedIds.indexOf(numberIndex) === -1;\n\n    this.selectNumber = numberIndex => {\n      if (this.state.gameStatus !== \"playing\") {\n        return;\n      }\n\n      this.setState(prevState => ({\n        selectedIds: [...prevState.selectedIds, numberIndex],\n        gameStatus: this.calcGameStatus([...prevState.selectedIds, numberIndex])\n      }), () => {\n        if (this.state.gameStatus !== \"playing\") {\n          clearInterval(this.intervalId);\n        }\n      });\n    };\n\n    this.calcGameStatus = selectedIds => {\n      const sumSelected = selectedIds.reduce((acc, curr) => acc + this.challengeNumbers[curr], 0);\n\n      if (sumSelected < this.target) {\n        return \"playing\";\n      }\n\n      return sumSelected === this.target ? \"won\" : \"lost\";\n    };\n\n    this.state = {\n      gameStatus: \"new\",\n      remainingSeconds: this.props.initialSeconds,\n      selectedIds: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoPlay) {\n      this.startGame();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const _this$state = this.state,\n          gameStatus = _this$state.gameStatus,\n          remainingSeconds = _this$state.remainingSeconds;\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"target\",\n      style: {\n        backgroundColor: Game.bgColors[gameStatus]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, gameStatus === \"new\" ? \"?\" : this.target), React.createElement(\"div\", {\n      className: \"challenge-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.challengeNumbers.map((value, index) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Number, {\n      key: index,\n      id: index,\n      value: gameStatus === \"new\" ? \"?\" : value,\n      clickable: this.isNumberAvailable(index),\n      onClick: this.selectNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, gameStatus === \"new\" ? React.createElement(\"button\", {\n      onClick: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Start\") : React.createElement(\"div\", {\n      className: \"timer-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, remainingSeconds), [\"won\", \"lost\"].includes(gameStatus) && React.createElement(\"button\", {\n      onClick: this.props.onPlayAgain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Play Again\")));\n  }\n\n}\n\nGame.bgColors = {\n  playing: \"#ccc\",\n  won: \"green\",\n  lost: \"red\"\n};\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetGame = () => this.setState(prevState => ({\n      gameId: prevState.gameId + 1\n    }));\n\n    this.state = {\n      gameId: 1\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Quizzes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Game, {\n      key: this.state.gameId,\n      autoPlay: this.state.gameId > 1,\n      challengeSize: 6,\n      challengeRange: [2, 9],\n      initialSeconds: 10,\n      onPlayAgain: this.resetGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(Sudoku);","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx"],"names":["React","Component","PureComponent","Dashboard","DashboardLayout","connect","APTITUDE","Typography","Grid","styles","style","withStyles","sampleSize","randomNumberBetween","min","max","Math","floor","random","Number","handleClick","props","clickable","onClick","id","render","opacity","value","Game","constructor","challengeNumbers","Array","from","length","challengeSize","map","challengeRange","target","reduce","acc","curr","startGame","setState","gameStatus","intervalId","setInterval","prevState","newRemainingSeconds","remainingSeconds","clearInterval","isNumberAvailable","numberIndex","state","selectedIds","indexOf","selectNumber","calcGameStatus","sumSelected","initialSeconds","componentDidMount","autoPlay","componentWillUnmount","backgroundColor","bgColors","index","includes","onPlayAgain","playing","won","lost","Sudoku","resetGame","gameId","classes","root"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\n\nimport { Typography } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// styles\nimport styles from \"./styles\";\nimport style from \"./style.module.css\";\nimport { withStyles } from \"@material-ui/styles\";\nimport sampleSize from \"lodash.samplesize\";\nconst randomNumberBetween = (min, max) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n\nclass Number extends PureComponent {\n  handleClick = () => {\n    if (this.props.clickable) {\n      this.props.onClick(this.props.id);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"number\"\n        style={{ opacity: this.props.clickable ? 1 : 0.3 }}\n        onClick={this.handleClick}\n      >\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: \"new\",\n      remainingSeconds: this.props.initialSeconds,\n      selectedIds: []\n    };\n  }\n\n  static bgColors = {\n    playing: \"#ccc\",\n    won: \"green\",\n    lost: \"red\"\n  };\n\n  challengeNumbers = Array.from({ length: this.props.challengeSize }).map(() =>\n    randomNumberBetween(...this.props.challengeRange)\n  );\n\n  target = sampleSize(\n    this.challengeNumbers,\n    this.props.challengeSize - 2\n  ).reduce((acc, curr) => acc + curr, 0);\n\n  componentDidMount() {\n    if (this.props.autoPlay) {\n      this.startGame();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  startGame = () => {\n    this.setState({ gameStatus: \"playing\" }, () => {\n      this.intervalId = setInterval(() => {\n        this.setState(prevState => {\n          const newRemainingSeconds = prevState.remainingSeconds - 1;\n          if (newRemainingSeconds === 0) {\n            clearInterval(this.intervalId);\n            return { gameStatus: \"lost\", remainingSeconds: 0 };\n          }\n          return { remainingSeconds: newRemainingSeconds };\n        });\n      }, 1000);\n    });\n  };\n\n  isNumberAvailable = numberIndex =>\n    this.state.selectedIds.indexOf(numberIndex) === -1;\n\n  selectNumber = numberIndex => {\n    if (this.state.gameStatus !== \"playing\") {\n      return;\n    }\n    this.setState(\n      prevState => ({\n        selectedIds: [...prevState.selectedIds, numberIndex],\n        gameStatus: this.calcGameStatus([...prevState.selectedIds, numberIndex])\n      }),\n      () => {\n        if (this.state.gameStatus !== \"playing\") {\n          clearInterval(this.intervalId);\n        }\n      }\n    );\n  };\n\n  calcGameStatus = selectedIds => {\n    const sumSelected = selectedIds.reduce(\n      (acc, curr) => acc + this.challengeNumbers[curr],\n      0\n    );\n    if (sumSelected < this.target) {\n      return \"playing\";\n    }\n    return sumSelected === this.target ? \"won\" : \"lost\";\n  };\n\n  render() {\n    const { gameStatus, remainingSeconds } = this.state;\n    return (\n      <div className=\"game\">\n        <div\n          className=\"target\"\n          style={{ backgroundColor: Game.bgColors[gameStatus] }}\n        >\n          {gameStatus === \"new\" ? \"?\" : this.target}\n        </div>\n        <div className=\"challenge-numbers\">\n          <Grid container spacing={2}>\n            {this.challengeNumbers.map((value, index) => (\n              <Grid item xs={12}>\n                <Number\n                  key={index}\n                  id={index}\n                  value={gameStatus === \"new\" ? \"?\" : value}\n                  clickable={this.isNumberAvailable(index)}\n                  onClick={this.selectNumber}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n        <div className=\"footer\">\n          {gameStatus === \"new\" ? (\n            <button onClick={this.startGame}>Start</button>\n          ) : (\n            <div className=\"timer-value\">{remainingSeconds}</div>\n          )}\n          {[\"won\", \"lost\"].includes(gameStatus) && (\n            <button onClick={this.props.onPlayAgain}>Play Again</button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { gameId: 1 };\n  }\n\n  resetGame = () =>\n    this.setState(prevState => ({\n      gameId: prevState.gameId + 1\n    }));\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Quizzes\">\n        <div className={classes.root}>\n          <Game\n            key={this.state.gameId}\n            autoPlay={this.state.gameId > 1}\n            challengeSize={6}\n            challengeRange={[2, 9]}\n            initialSeconds={10}\n            onPlayAgain={this.resetGame}\n          />\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Sudoku);\n"]},"metadata":{},"sourceType":"module"}