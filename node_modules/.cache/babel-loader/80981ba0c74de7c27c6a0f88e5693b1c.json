{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/EditEndDate/index.jsx\";\nimport React, { Component } from \"react\";\nimport EditdateForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { editEndDate } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport moment from \"moment\";\n\nclass EditEndDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: {\n            enddate: value\n          },\n          errors: {\n            enddate: null\n          }\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      //validation\n      let errors = validate(this.state.data, {\n        enddate: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          },\n          datetime: {\n            earliest: this.props.startdate,\n            message: \"Cannot be before Start date\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        let data = {\n          expiry: this.state.data.enddate\n        };\n        editEndDate(this.props.token, this.props.quizid, data).then(data => {\n          // update data in redux\n          console.log(data);\n          this.props.updateEndDate(moment(data.enddate).format(\"D/M/YYYY\"), this.props.quizid);\n          this.props.handleClose();\n        }).catch(error => {\n          swal({\n            title: \"Error\",\n            text: error.response.data.message,\n            button: \"Ok\"\n          });\n          this.setState({\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    this.state = {\n      data: {\n        enddate: \"\"\n      },\n      isLoading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(EditdateForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      handleClose: this.props.handleClose,\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateEndDate: (enddate, quizid) => dispatch({\n      type: \"UPDATE END DATE\",\n      updatedDate: enddate,\n      quizid: quizid\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEndDate);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/EditEndDate/index.jsx"],"names":["React","Component","EditdateForm","validate","editEndDate","connect","swal","moment","EditEndDate","constructor","props","onChangeHandler","e","target","name","value","setState","prevState","data","enddate","errors","onSubmitHandler","state","presence","allowEmpty","message","datetime","earliest","startdate","isLoading","expiry","token","quizid","then","console","log","updateEndDate","format","handleClose","catch","error","title","text","response","button","render","open","mapStateToProps","auth","mapDispatchToProps","dispatch","type","updatedDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport EditdateForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { editEndDate } from \"api/quizzes\";\n\nimport { connect } from \"react-redux\";\n\nimport swal from \"sweetalert\";\nimport moment from \"moment\";\n\nclass EditEndDate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tenddate: \"\"\n\t\t\t},\n\t\t\tisLoading: false,\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\tenddate: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\tenddate: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSubmitHandler = () => {\n\t\t//validation\n\t\tlet errors = validate(this.state.data, {\n\t\t\tenddate: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" },\n\t\t\t\tdatetime: {\n\t\t\t\t\tearliest: this.props.startdate,\n\t\t\t\t\tmessage: \"Cannot be before Start date\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// check for errors\n\t\tif (errors) {\n\t\t\tthis.setState({ errors });\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t});\n\t\t\tlet data = {\n\t\t\t\texpiry: this.state.data.enddate\n\t\t\t};\n\t\t\teditEndDate(this.props.token, this.props.quizid, data)\n\t\t\t\t.then(data => {\n\t\t\t\t\t// update data in redux\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tthis.props.updateEndDate(\n\t\t\t\t\t\tmoment(data.enddate).format(\"D/M/YYYY\"),\n\t\t\t\t\t\tthis.props.quizid\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.props.handleClose();\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<EditdateForm\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\t\terrors={this.state.errors}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tupdateEndDate: (enddate, quizid) =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"UPDATE END DATE\",\n\t\t\t\tupdatedDate: enddate,\n\t\t\t\tquizid: quizid\n\t\t\t})\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(EditEndDate);\n"]},"metadata":{},"sourceType":"module"}