{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport Grid from \"./components/Grid\";\nimport { solver, isSolvable, isComplete } from \"./utils/sudoku\";\nimport { solve, clear, undo } from \"./actions/grid\";\nimport { Typography } from \"@material-ui/core\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.props.store.subscribe(() => {\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const store = this.props.store;\n\n    const _store$getState = store.getState(),\n          grid = _store$getState.grid,\n          status = _store$getState.status;\n\n    const isSolved = status.isSolved,\n          isEdited = status.isEdited;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Quizzes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"undo\",\n      disabled: window.gridHistory && !window.gridHistory.length,\n      onClick: () => store.dispatch(undo()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\u293A Undo\"), React.createElement(\"button\", {\n      className: \"clear\",\n      disabled: !isEdited,\n      onClick: () => store.dispatch(clear()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u27F2 Clear\"), React.createElement(Grid, Object.assign({\n      grid: grid,\n      status: status\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"check\",\n      disabled: isSolved,\n      onClick: () => {\n        if (isSolvable(grid)) {\n          if (isComplete(grid)) {\n            return alert(\"Congratulations, you solved it!!\");\n          }\n\n          alert(\"This Sudoku is solvable, keep going !!\");\n        } else {\n          alert(\"This Sudoku is NOT solvable\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Check\"), React.createElement(\"button\", {\n      className: \"solve\",\n      onClick: () => store.dispatch(solve()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Solve\"), React.createElement(\"div\", {\n      className: \"footnote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"by \", React.createElement(\"a\", {\n      href: \"http://danialk.github.io/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Danial Khosravi \"), \" \")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    quizlistTabledata: state.quiz.quizlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushQuizListdata: data => dispatch({\n      type: \"PUSH QUIZLIST DATA\",\n      data: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Sudoku));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/QuizList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","connect","APTITUDE","Grid","solver","isSolvable","isComplete","solve","clear","undo","Typography","styles","withStyles","Sudoku","constructor","props","state","componentDidMount","unsubscribe","store","subscribe","forceUpdate","componentWillUnmount","render","classes","getState","grid","status","isSolved","isEdited","root","window","gridHistory","length","dispatch","alert","mapStateToProps","token","auth","quizlistTabledata","quiz","mapDispatchToProps","pushQuizListdata","data","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,SAA7C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA+C,gBAA/C;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAmC,gBAAnC;AAEA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAC7BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL,GAAmB,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,SAAjB,CAA2B,MAAM;AAClD,WAAKC,WAAL;AACD,KAFkB,CAAnB;AAGD;;AACDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,WAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKT,KADlB,CACCS,OADD;AAAA,UAECL,KAFD,GAEW,KAAKJ,KAFhB,CAECI,KAFD;;AAAA,4BAGkBA,KAAK,CAACM,QAAN,EAHlB;AAAA,UAGCC,IAHD,mBAGCA,IAHD;AAAA,UAGOC,MAHP,mBAGOA,MAHP;;AAAA,UAICC,QAJD,GAIwBD,MAJxB,CAICC,QAJD;AAAA,UAIWC,QAJX,GAIwBF,MAJxB,CAIWE,QAJX;AAKP,WACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE3B,QAAvB;AAAiC,MAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEsB,OAAO,CAACM,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,QAAQ,EAAEC,MAAM,CAACC,WAAP,IAAsB,CAACD,MAAM,CAACC,WAAP,CAAmBC,MAFtD;AAGE,MAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,QAAN,CAAezB,IAAI,EAAnB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAQE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,QAAQ,EAAE,CAACoB,QAFb;AAGE,MAAA,OAAO,EAAE,MAAMV,KAAK,CAACe,QAAN,CAAe1B,KAAK,EAApB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,EAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEkB,IAAZ;AAAkB,MAAA,MAAM,EAAEC;AAA1B,OAAsC,KAAKZ,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBF,EAkBE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,QAAQ,EAAEa,QAFZ;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIvB,UAAU,CAACqB,IAAD,CAAd,EAAsB;AACpB,cAAIpB,UAAU,CAACoB,IAAD,CAAd,EAAsB;AACpB,mBAAOS,KAAK,CAAC,kCAAD,CAAZ;AACD;;AACDA,UAAAA,KAAK,CAAC,wCAAD,CAAL;AACD,SALD,MAKO;AACLA,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,EAkCE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE,MAAMhB,KAAK,CAACe,QAAN,CAAe3B,KAAK,EAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlCF,EAqCE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACK;AAAG,MAAA,IAAI,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADL,EAC+D,GAD/D,CADF,CArCF,CADF,CADF,CADF;AAiDD;;AArE4B;;AAuE/B,MAAM6B,eAAe,GAAGpB,KAAK,IAAI;AAC/B,SAAO;AACLqB,IAAAA,KAAK,EAAErB,KAAK,CAACsB,IAAN,CAAWD,KADb;AAELE,IAAAA,iBAAiB,EAAEvB,KAAK,CAACwB,IAAN,CAAWD;AAFzB,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAGP,QAAQ,IAAI;AACrC,SAAO;AACLQ,IAAAA,gBAAgB,EAAEC,IAAI,IACpBT,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,oBAAR;AAA8BD,MAAAA,IAAI,EAAEA;AAApC,KAAD;AAFL,GAAP;AAID,CALD;;AAOA,eAAe1C,OAAO,CACpBmC,eADoB,EAEpBK,kBAFoB,CAAP,CAGb7B,UAAU,CAACD,MAAD,CAAV,CAAmBE,MAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport Grid from \"./components/Grid\";\nimport { solver, isSolvable, isComplete } from \"./utils/sudoku\";\nimport { solve, clear, undo } from \"./actions/grid\";\n\nimport { Typography } from \"@material-ui/core\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Sudoku extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.props.store.subscribe(() => {\n      this.forceUpdate();\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { store } = this.props;\n    const { grid, status } = store.getState();\n    const { isSolved, isEdited } = status;\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Quizzes\">\n        <div className={classes.root}>\n          <div>\n            <button\n              className=\"undo\"\n              disabled={window.gridHistory && !window.gridHistory.length}\n              onClick={() => store.dispatch(undo())}\n            >\n              ⤺ Undo\n            </button>\n            <button\n              className=\"clear\"\n              disabled={!isEdited}\n              onClick={() => store.dispatch(clear())}\n            >\n              ⟲ Clear\n            </button>\n\n            <Grid grid={grid} status={status} {...this.props} />\n\n            <button\n              className=\"check\"\n              disabled={isSolved}\n              onClick={() => {\n                if (isSolvable(grid)) {\n                  if (isComplete(grid)) {\n                    return alert(\"Congratulations, you solved it!!\");\n                  }\n                  alert(\"This Sudoku is solvable, keep going !!\");\n                } else {\n                  alert(\"This Sudoku is NOT solvable\");\n                }\n              }}\n            >\n              Check\n            </button>\n            <button className=\"solve\" onClick={() => store.dispatch(solve())}>\n              Solve\n            </button>\n            <div className=\"footnote\">\n              <p>\n                by <a href=\"http://danialk.github.io/\"> Danial Khosravi </a>{\" \"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    quizlistTabledata: state.quiz.quizlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushQuizListdata: data =>\n      dispatch({ type: \"PUSH QUIZLIST DATA\", data: data })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Sudoku));\n"]},"metadata":{},"sourceType":"module"}