{"ast":null,"code":"import _toArray from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, id) => {\n      console.log(e.target.value);\n      console.log(id);\n\n      let _this$state$questions = _toArray(this.state.questions),\n          questions = _this$state$questions.slice(0); //console.log(questions);\n\n\n      questions = questions.map(ques => {\n        if (ques.id == id) {\n          // update isCorrect\n          ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n        }\n\n        return ques;\n      });\n      this.setState(questions);\n    };\n\n    this.state = {\n      questions: [{\n        id: \"1\",\n        question: \"what is pointer\",\n        options: [\"refernce\", \"object\"],\n        correct: \"refernce\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"2\",\n        question: \"what is pointer\",\n        options: [\"refernce\", \"object\"],\n        correct: \"refernce\",\n        isCorrect: \"NA\"\n      }]\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Core Subjects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.questions.map(ques => {\n      let id = ques.id;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, ques.question), React.createElement(RadioGroup, {\n        onChange: (e, id) => this.handleChange(e, id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, ques.options.map(option => {\n        return React.createElement(FormControlLabel, {\n          value: option,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }),\n          label: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      })));\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(CoreSubjects);","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","APTITUDE","style","styles","withStyles","Typography","Radio","RadioGroup","FormControlLabel","CoreSubjects","constructor","props","handleChange","e","id","console","log","target","value","state","questions","map","ques","isCorrect","correct","setState","question","options","render","classes","root","option"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: [\n        {\n          id: \"1\",\n          question: \"what is pointer\",\n          options: [\"refernce\", \"object\"],\n          correct: \"refernce\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"2\",\n          question: \"what is pointer\",\n          options: [\"refernce\", \"object\"],\n          correct: \"refernce\",\n          isCorrect: \"NA\"\n        }\n      ]\n    };\n  }\n\n  handleChange = (e, id) => {\n    console.log(e.target.value);\n    console.log(id);\n    let [...questions] = this.state.questions;\n    //console.log(questions);\n    questions = questions.map(ques => {\n      if (ques.id == id) {\n        // update isCorrect\n        ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n      }\n      return ques;\n    });\n\n    this.setState(questions);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Core Subjects\">\n        <div className={classes.root}>\n          {this.state.questions.map(ques => {\n            let id = ques.id;\n            return (\n              <div>\n                <Typography>{ques.question}</Typography>\n\n                <RadioGroup onChange={(e, id) => this.handleChange(e, id)}>\n                  {ques.options.map(option => {\n                    return (\n                      <FormControlLabel\n                        value={option}\n                        control={<Radio />}\n                        label={option}\n                      />\n                    );\n                  })}\n                </RadioGroup>\n              </div>\n            );\n          })}\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(CoreSubjects);\n"]},"metadata":{},"sourceType":"module"}