{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/Visualization/components/Bydifficultylevel/index.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport palette from \"theme/palette\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Portlet, PortletHeader, PortletLabel, PortletContent } from \"components\";\n\nclass Bydifficultylevel extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = Bydifficultylevel.getVisualizationData(props.questions);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //check if props.questions has changed\n    let data = Bydifficultylevel.getVisualizationData(props.questions);\n\n    if (data.easy === state.easy && data.medium === state.medium && data.hard === state.hard) {\n      return null;\n    } else {\n      return data;\n    }\n  }\n\n  render() {\n    let data = {\n      datasets: [{\n        data: [this.state.easy, this.state.medium, this.state.hard],\n        backgroundColor: [palette.primary.main, palette.danger.main, palette.warning.main],\n        borderWidth: 8,\n        borderColor: palette.common.white,\n        hoverBorderColor: palette.common.white\n      }],\n      labels: [\"Easy\", \"Medium\", \"Hard\"]\n    };\n    let options = {\n      legend: {\n        display: false\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: false,\n      cutoutPercentage: 80,\n      layout: {\n        padding: 0\n      },\n      tooltips: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        borderWidth: 1,\n        borderColor: palette.border,\n        backgroundColor: palette.common.white,\n        titleFontColor: palette.text.primary,\n        bodyFontColor: palette.text.secondary,\n        footerFontColor: palette.text.secondary\n      }\n    };\n    return React.createElement(\"div\", {\n      className: this.props.classes.chartWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Portlet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(PortletHeader, {\n      noDivider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      title: \"Questions By Difficulty Level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(PortletContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: data,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.classes.stats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(Typography, {\n      style: {\n        color: palette.primary.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.easy)), React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(Typography, {\n      style: {\n        color: palette.danger.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.medium)), React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Hard\"), React.createElement(Typography, {\n      style: {\n        color: palette.warning.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.hard))))));\n  }\n\n}\n\nBydifficultylevel.getVisualizationData = questions => {\n  let easy = 0;\n  let medium = 0;\n  let hard = 0;\n  questions.map(question => {\n    switch (question.difficultyLevel) {\n      case \"easy\":\n        ++easy;\n        break;\n\n      case \"medium\":\n        ++medium;\n        break;\n\n      case \"hard\":\n        ++hard;\n    }\n  });\n  return {\n    easy,\n    medium,\n    hard\n  };\n};\n\nexport default withStyles(styles)(Bydifficultylevel);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/Visualization/components/Bydifficultylevel/index.jsx"],"names":["React","PureComponent","Pie","styles","withStyles","palette","Typography","Portlet","PortletHeader","PortletLabel","PortletContent","Bydifficultylevel","constructor","props","state","getVisualizationData","questions","getDerivedStateFromProps","data","easy","medium","hard","render","datasets","backgroundColor","primary","main","danger","warning","borderWidth","borderColor","common","white","hoverBorderColor","labels","options","legend","display","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","padding","tooltips","enabled","mode","intersect","border","titleFontColor","text","bodyFontColor","secondary","footerFontColor","classes","chartWrapper","stats","label","color","map","question","difficultyLevel"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport palette from \"theme/palette\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n\tPortlet,\n\tPortletHeader,\n\tPortletLabel,\n\tPortletContent\n} from \"components\";\n\nclass Bydifficultylevel extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = Bydifficultylevel.getVisualizationData(props.questions);\n\t}\n\tstatic getVisualizationData = questions => {\n\t\tlet easy = 0;\n\t\tlet medium = 0;\n\t\tlet hard = 0;\n\n\t\tquestions.map(question => {\n\t\t\tswitch (question.difficultyLevel) {\n\t\t\t\tcase \"easy\":\n\t\t\t\t\t++easy;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"medium\":\n\t\t\t\t\t++medium;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hard\":\n\t\t\t\t\t++hard;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\teasy,\n\t\t\tmedium,\n\t\t\thard\n\t\t};\n\t};\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\t//check if props.questions has changed\n\t\tlet data = Bydifficultylevel.getVisualizationData(props.questions);\n\t\tif (\n\t\t\tdata.easy === state.easy &&\n\t\t\tdata.medium === state.medium &&\n\t\t\tdata.hard === state.hard\n\t\t) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t}\n\n\trender() {\n\t\tlet data = {\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: [this.state.easy, this.state.medium, this.state.hard],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\tpalette.primary.main,\n\t\t\t\t\t\tpalette.danger.main,\n\t\t\t\t\t\tpalette.warning.main\n\t\t\t\t\t],\n\t\t\t\t\tborderWidth: 8,\n\t\t\t\t\tborderColor: palette.common.white,\n\t\t\t\t\thoverBorderColor: palette.common.white\n\t\t\t\t}\n\t\t\t],\n\t\t\tlabels: [\"Easy\", \"Medium\", \"Hard\"]\n\t\t};\n\n\t\tlet options = {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tanimation: false,\n\t\t\tcutoutPercentage: 80,\n\t\t\tlayout: { padding: 0 },\n\t\t\ttooltips: {\n\t\t\t\tenabled: true,\n\t\t\t\tmode: \"index\",\n\t\t\t\tintersect: false,\n\t\t\t\tborderWidth: 1,\n\t\t\t\tborderColor: palette.border,\n\t\t\t\tbackgroundColor: palette.common.white,\n\t\t\t\ttitleFontColor: palette.text.primary,\n\t\t\t\tbodyFontColor: palette.text.secondary,\n\t\t\t\tfooterFontColor: palette.text.secondary\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<div className={this.props.classes.chartWrapper}>\n\t\t\t\t<Portlet>\n\t\t\t\t\t<PortletHeader noDivider>\n\t\t\t\t\t\t<PortletLabel title=\"Questions By Difficulty Level\" />\n\t\t\t\t\t</PortletHeader>\n\t\t\t\t\t<PortletContent>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Pie data={data} options={options} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={this.props.classes.stats}>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Easy</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: palette.primary.main }}\n\t\t\t\t\t\t\t\t\tvariant=\"h2\">\n\t\t\t\t\t\t\t\t\t{this.state.easy}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Medium</Typography>\n\t\t\t\t\t\t\t\t<Typography style={{ color: palette.danger.main }} variant=\"h2\">\n\t\t\t\t\t\t\t\t\t{this.state.medium}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Hard</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: palette.warning.main }}\n\t\t\t\t\t\t\t\t\tvariant=\"h2\">\n\t\t\t\t\t\t\t\t\t{this.state.hard}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PortletContent>\n\t\t\t\t</Portlet>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Bydifficultylevel);\n"]},"metadata":{},"sourceType":"module"}