{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../config\";\nexport const fetchContents = token => axios.get(\"\".concat(API_URL, \"/task/list\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const loadStudentGroups = token => axios.get(\"\".concat(API_URL, \"/student/groups\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const loadLectures = token => axios.get(\"\".concat(API_URL, \"/faculty/lectures\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/api/contents.js"],"names":["axios","API_URL","fetchContents","token","get","headers","Authorization","then","response","data","loadStudentGroups","loadLectures"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IACjCH,KAAK,CACHI,GADF,WACSH,OADT,iBAC8B;AAC5BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADmB,CAD9B,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAMP,OAAO,MAAMC,iBAAiB,GAAGP,KAAK,IACrCH,KAAK,CACHI,GADF,WACSH,OADT,sBACmC;AACjCI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADwB,CADnC,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAME,YAAY,GAAGR,KAAK,IAChCH,KAAK,CACHI,GADF,WACSH,OADT,wBACqC;AACnCI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AAD0B,CADrC,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM","sourcesContent":["import axios from \"axios\";\nimport { API_URL } from \"../config\";\n\nexport const fetchContents = token =>\n\taxios\n\t\t.get(`${API_URL}/task/list`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\nexport const loadStudentGroups = token =>\n\taxios\n\t\t.get(`${API_URL}/student/groups`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const loadLectures = token =>\n\taxios\n\t\t.get(`${API_URL}/faculty/lectures`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n"]},"metadata":{},"sourceType":"module"}