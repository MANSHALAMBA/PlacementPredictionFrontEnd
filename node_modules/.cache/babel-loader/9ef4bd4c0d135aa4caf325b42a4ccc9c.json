{"ast":null,"code":"validate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\nexport class Quiz {\n  constructor(quiz) {\n    this.id = quiz.id;\n    this.title = quiz.title;\n    this.skills = quiz.id;\n    this.numberOfQuestions = Number(quiz.noOfQuestions);\n    this.schedulingStatus = this.getSchedulingStatus(quiz);\n    this.sechedule = quiz.id;\n  }\n\n  getSchedulingStatus(quiz) {\n    let a = 0;\n\n    if (quiz.isActive && quiz.schedule) {\n      a = 1;\n      return a;\n    } else if (!quiz.isActive && quiz.schedule) {\n      a = 2;\n      return a;\n    } else if (!quiz.expiry) {\n      a = 0;\n      return a;\n    } else if (quiz.isActive && quiz.schedule && validate(quiz.expiry, {\n      expiry: {\n        datetime: {\n          earliest: moment.utc(),\n          message: \"Expired\"\n        }\n      }\n    })) {\n      a = 3;\n      return a;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/serializers/quiz.js"],"names":["validate","extend","validators","datetime","parse","value","options","moment","utc","format","dateOnly","Quiz","constructor","quiz","id","title","skills","numberOfQuestions","Number","noOfQuestions","schedulingStatus","getSchedulingStatus","sechedule","a","isActive","schedule","expiry","earliest","message"],"mappings":"AAAAA,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,CAACE,UAAT,CAAoBC,QAApC,EAA8C;AAC7C;AACA;AACAC,EAAAA,KAAK,EAAE,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC/B,WAAO,CAACC,MAAM,CAACC,GAAP,CAAWH,KAAX,CAAR;AACA,GAL4C;AAM7C;AACAI,EAAAA,MAAM,EAAE,UAASJ,KAAT,EAAgBC,OAAhB,EAAyB;AAChC,QAAIG,MAAM,GAAGH,OAAO,CAACI,QAAR,GAAmB,YAAnB,GAAkC,qBAA/C;AACA,WAAOH,MAAM,CAACC,GAAP,CAAWH,KAAX,EAAkBI,MAAlB,CAAyBA,MAAzB,CAAP;AACA;AAV4C,CAA9C;AAaA,OAAO,MAAME,IAAN,CAAW;AACjBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,SAAKC,EAAL,GAAUD,IAAI,CAACC,EAAf;AACA,SAAKC,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,SAAKC,MAAL,GAAcH,IAAI,CAACC,EAAnB;AACA,SAAKG,iBAAL,GAAyBC,MAAM,CAACL,IAAI,CAACM,aAAN,CAA/B;AACA,SAAKC,gBAAL,GAAwB,KAAKC,mBAAL,CAAyBR,IAAzB,CAAxB;AAEA,SAAKS,SAAL,GAAiBT,IAAI,CAACC,EAAtB;AACA;;AAEDO,EAAAA,mBAAmB,CAACR,IAAD,EAAO;AACzB,QAAIU,CAAC,GAAG,CAAR;;AACA,QAAIV,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACY,QAA1B,EAAoC;AACnCF,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHD,MAGO,IAAI,CAACV,IAAI,CAACW,QAAN,IAAkBX,IAAI,CAACY,QAA3B,EAAqC;AAC3CF,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHM,MAGA,IAAI,CAACV,IAAI,CAACa,MAAV,EAAkB;AACxBH,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHM,MAGA,IACNV,IAAI,CAACW,QAAL,IACAX,IAAI,CAACY,QADL,IAEAzB,QAAQ,CAACa,IAAI,CAACa,MAAN,EAAc;AACrBA,MAAAA,MAAM,EAAE;AACPvB,QAAAA,QAAQ,EAAE;AACTwB,UAAAA,QAAQ,EAAEpB,MAAM,CAACC,GAAP,EADD;AAEToB,UAAAA,OAAO,EAAE;AAFA;AADH;AADa,KAAd,CAHF,EAWL;AACDL,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA;AACD;;AArCgB","sourcesContent":["validate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nexport class Quiz {\n\tconstructor(quiz) {\n\t\tthis.id = quiz.id;\n\t\tthis.title = quiz.title;\n\t\tthis.skills = quiz.id;\n\t\tthis.numberOfQuestions = Number(quiz.noOfQuestions);\n\t\tthis.schedulingStatus = this.getSchedulingStatus(quiz);\n\n\t\tthis.sechedule = quiz.id;\n\t}\n\n\tgetSchedulingStatus(quiz) {\n\t\tlet a = 0;\n\t\tif (quiz.isActive && quiz.schedule) {\n\t\t\ta = 1;\n\t\t\treturn a;\n\t\t} else if (!quiz.isActive && quiz.schedule) {\n\t\t\ta = 2;\n\t\t\treturn a;\n\t\t} else if (!quiz.expiry) {\n\t\t\ta = 0;\n\t\t\treturn a;\n\t\t} else if (\n\t\t\tquiz.isActive &&\n\t\t\tquiz.schedule &&\n\t\t\tvalidate(quiz.expiry, {\n\t\t\t\texpiry: {\n\t\t\t\t\tdatetime: {\n\t\t\t\t\t\tearliest: moment.utc(),\n\t\t\t\t\t\tmessage: \"Expired\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t) {\n\t\t\ta = 3;\n\t\t\treturn a;\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}