{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/CreateGroup/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport Loader from \"./components/loader\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchStudents, creategroup } from \"api/students\";\nimport { connect } from \"react-redux\";\nimport { Student } from \"serializers/student\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      fetchStudents(this.props.token).then(({\n        students\n      }) => {\n        let studentTableData = students.map(student => {\n          return new Student(student);\n        });\n        this.setState({\n          studentTableData: studentTableData,\n          isloading: false\n        });\n      });\n    };\n\n    this.sendData = groupname => {\n      this.setState({\n        isLoadingChildClass: true\n      });\n      let studentList = this.state.data.selectedStudents.map(id => {\n        return id;\n      });\n      let data = {\n        name: groupname,\n        studentList\n      };\n      creategroup(this.props.token, data).then(response => {\n        swal({\n          title: \"Success\",\n          text: \"Group \" + response.group.name + \" has been created successfully\",\n          button: \"Ok\"\n        });\n        this.handleClose();\n        this.setState({\n          isLoadingChildClass: false\n        });\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: error.response.data.message,\n          button: \"Ok\"\n        });\n        this.setState({\n          isLoadingChildClass: false\n        });\n      });\n    };\n\n    this.columns = [{\n      field: \"name\",\n      title: \"Name\"\n    }, {\n      field: \"rollNumber\",\n      title: \"Roll Number\",\n      type: \"numeric\"\n    }, {\n      field: \"department\",\n      title: \"Department\"\n    }, {\n      field: \"year\",\n      title: \"Year\",\n      type: \"numeric\"\n    }, {\n      field: \"section\",\n      title: \"Section\"\n    }, {\n      field: \"Id\",\n      title: \"Id\",\n      hidden: true\n    }];\n\n    this.handleSelection = rows => {\n      console.log(rows);\n      let selectedStudents = rows.map(row => {\n        return row.Id;\n      });\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            selectedStudents: [...selectedStudents]\n          })\n        };\n      });\n    };\n\n    this.handleOpenForm = () => {\n      this.state.data.selectedStudents.length >= 2 ? this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: true\n          })\n        };\n      }) : swal({\n        title: \"Error\",\n        text: \"Select Atleast Two Students\",\n        icon: \"error\",\n        button: \"Ok\"\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState(prevState => {\n        return {\n          form: _objectSpread({}, prevState.form, {\n            open: false\n          })\n        };\n      });\n    };\n\n    this.state = {\n      data: {\n        selectedStudents: []\n      },\n      studentTableData: [],\n      form: {\n        open: false\n      },\n      isloading: true,\n      isLoadingChildClass: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Create Group\",\n      mode: CREATEGROUP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(CreateGroupToolbar, {\n      handleOpenForm: this.handleOpenForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.form.open && React.createElement(CreateGroup, {\n      open: this.state.form.open,\n      handleClose: this.handleClose,\n      numberOfStudents: this.state.data.selectedStudents.length,\n      sendData: this.sendData,\n      isloading: this.state.isLoadingChildClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), !this.state.isloading ? React.createElement(MaterialTable, {\n      title: \"Student  List\",\n      data: this.state.studentTableData,\n      columns: this.columns,\n      onSelectionChange: this.handleSelection,\n      options: {\n        filtering: true,\n        selection: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: classes.alignCenter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/CreateGroup/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","CreateGroupToolbar","CreateGroup","Loader","MaterialTable","CREATEGROUP","fetchStudents","creategroup","connect","Student","styles","withStyles","swal","Creategroup","constructor","props","loadData","token","then","students","studentTableData","map","student","setState","isloading","sendData","groupname","isLoadingChildClass","studentList","state","data","selectedStudents","id","name","response","title","text","group","button","handleClose","catch","error","message","columns","field","type","hidden","handleSelection","rows","console","log","row","Id","prevState","handleOpenForm","length","form","open","icon","componentDidMount","render","classes","root","content","filtering","selection","alignCenter","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport CreateGroupToolbar from \"./components/CreateGroupToolbar\";\nimport CreateGroup from \"./components/CreateGroup\";\nimport Loader from \"./components/loader\";\nimport MaterialTable from \"material-table\";\nimport { CREATEGROUP } from \"../../constants\";\nimport { fetchStudents, creategroup } from \"api/students\";\nimport { connect } from \"react-redux\";\nimport { Student } from \"serializers/student\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport swal from \"sweetalert\";\n\nclass Creategroup extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: { selectedStudents: [] },\n\t\t\tstudentTableData: [],\n\t\t\tform: { open: false },\n\t\t\tisloading: true,\n\t\t\tisLoadingChildClass: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadData();\n\t}\n\n\tloadData = () => {\n\t\tfetchStudents(this.props.token).then(({ students }) => {\n\t\t\tlet studentTableData = students.map(student => {\n\t\t\t\treturn new Student(student);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tstudentTableData: studentTableData,\n\t\t\t\tisloading: false\n\t\t\t});\n\t\t});\n\t};\n\n\tsendData = groupname => {\n\t\tthis.setState({\n\t\t\tisLoadingChildClass: true\n\t\t});\n\t\tlet studentList = this.state.data.selectedStudents.map(id => {\n\t\t\treturn id;\n\t\t});\n\t\tlet data = {\n\t\t\tname: groupname,\n\t\t\tstudentList\n\t\t};\n\n\t\tcreategroup(this.props.token, data)\n\t\t\t.then(response => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext:\n\t\t\t\t\t\t\"Group \" + response.group.name + \" has been created successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.handleClose();\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoadingChildClass: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoadingChildClass: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: \"name\",\n\t\t\ttitle: \"Name\"\n\t\t},\n\t\t{\n\t\t\tfield: \"rollNumber\",\n\t\t\ttitle: \"Roll Number\",\n\t\t\ttype: \"numeric\"\n\t\t},\n\t\t{\n\t\t\tfield: \"department\",\n\t\t\ttitle: \"Department\"\n\t\t},\n\t\t{\n\t\t\tfield: \"year\",\n\t\t\ttitle: \"Year\",\n\t\t\ttype: \"numeric\"\n\t\t},\n\t\t{\n\t\t\tfield: \"section\",\n\t\t\ttitle: \"Section\"\n\t\t},\n\t\t{\n\t\t\tfield: \"Id\",\n\t\t\ttitle: \"Id\",\n\t\t\thidden: true\n\t\t}\n\t];\n\n\thandleSelection = rows => {\n\t\tconsole.log(rows);\n\n\t\tlet selectedStudents = rows.map(row => {\n\t\t\treturn row.Id;\n\t\t});\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\tselectedStudents: [...selectedStudents]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\thandleOpenForm = () => {\n\t\tthis.state.data.selectedStudents.length >= 2\n\t\t\t? this.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tform: {\n\t\t\t\t\t\t\t...prevState.form,\n\t\t\t\t\t\t\topen: true\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t  })\n\t\t\t: swal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: \"Select Atleast Two Students\",\n\n\t\t\t\t\ticon: \"error\",\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t  });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tform: {\n\t\t\t\t\t...prevState.form,\n\t\t\t\t\topen: false\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout title=\"Create Group\" mode={CREATEGROUP}>\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<CreateGroupToolbar handleOpenForm={this.handleOpenForm} />\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t{this.state.form.open && (\n\t\t\t\t\t\t\t<CreateGroup\n\t\t\t\t\t\t\t\topen={this.state.form.open}\n\t\t\t\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\t\t\t\tnumberOfStudents={this.state.data.selectedStudents.length}\n\t\t\t\t\t\t\t\tsendData={this.sendData}\n\t\t\t\t\t\t\t\tisloading={this.state.isLoadingChildClass}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!this.state.isloading ? (\n\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\ttitle={\"Student  List\"}\n\t\t\t\t\t\t\t\tdata={this.state.studentTableData}\n\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\tonSelectionChange={this.handleSelection}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\t\tselection: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className={classes.alignCenter}>\n\t\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Creategroup));\n"]},"metadata":{},"sourceType":"module"}