{"ast":null,"code":"import moment from \"moment\";\nexport class Project {\n  constructor(project) {\n    this.serializeSubmissions = submissions => {\n      let Submissions = submissions.map(submission => {\n        return {\n          id: submission.id,\n          summary: submission.summary,\n          status: submission.status,\n          remark: submission.remark,\n          file: submission.file,\n          url: submission.url\n        };\n      });\n      return Submissions;\n    };\n\n    this.id = project.id;\n    this.title = project.title;\n    this.description = project.description;\n    this.skills = project.tags.map(tag => {\n      return {\n        id: tag.id,\n        skill: tag.tag\n      };\n    });\n    this.faculties = project.faculties;\n    this.teamMembers = project.users;\n    this.team = project.users.map(user => {\n      return {\n        name: user.firstName + \" \" + user.lastName,\n        id: user.id\n      };\n    });\n    this.milestones = project.milestones.map(milestone => {\n      return {\n        id: milestone.id,\n        title: milestone.title,\n        description: milestone.description,\n        deadline: moment(milestone.deadline).calendar(),\n        submissions: this.serializeSubmissions(milestone.milestoneSubmissions)\n      };\n    });\n  }\n\n}\nexport class Message {\n  constructor(message) {\n    this.resolveSender = (creator, faculty, user) => {\n      switch (creator) {\n        case \"user\":\n          return user.firstName + \" \" + user.lastName;\n          break;\n\n        case \"faculty\":\n          return faculty.title + faculty.firstName + \" \" + faculty.lastName;\n      }\n    };\n\n    this.text = message.text;\n    this.createdAt = moment(message.createdAt).calendar();\n    this.senderId = message.creatorId;\n    this.sender = this.resolveSender(message.creator, message.faculty, message.user);\n  }\n\n}","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/serializers/projects.js"],"names":["moment","Project","constructor","project","serializeSubmissions","submissions","Submissions","map","submission","id","summary","status","remark","file","url","title","description","skills","tags","tag","skill","faculties","teamMembers","users","team","user","name","firstName","lastName","milestones","milestone","deadline","calendar","milestoneSubmissions","Message","message","resolveSender","creator","faculty","text","createdAt","senderId","creatorId","sender"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,OAAN,CAAc;AACpBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA,SA6BrBC,oBA7BqB,GA6BEC,WAAW,IAAI;AACrC,UAAIC,WAAW,GAAGD,WAAW,CAACE,GAAZ,CAAgBC,UAAU,IAAI;AAC/C,eAAO;AACNC,UAAAA,EAAE,EAAED,UAAU,CAACC,EADT;AAENC,UAAAA,OAAO,EAAEF,UAAU,CAACE,OAFd;AAGNC,UAAAA,MAAM,EAAEH,UAAU,CAACG,MAHb;AAINC,UAAAA,MAAM,EAAEJ,UAAU,CAACI,MAJb;AAKNC,UAAAA,IAAI,EAAEL,UAAU,CAACK,IALX;AAMNC,UAAAA,GAAG,EAAEN,UAAU,CAACM;AANV,SAAP;AAQA,OATiB,CAAlB;AAUA,aAAOR,WAAP;AACA,KAzCoB;;AACpB,SAAKG,EAAL,GAAUN,OAAO,CAACM,EAAlB;AACA,SAAKM,KAAL,GAAaZ,OAAO,CAACY,KAArB;AACA,SAAKC,WAAL,GAAmBb,OAAO,CAACa,WAA3B;AACA,SAAKC,MAAL,GAAcd,OAAO,CAACe,IAAR,CAAaX,GAAb,CAAiBY,GAAG,IAAI;AACrC,aAAO;AACNV,QAAAA,EAAE,EAAEU,GAAG,CAACV,EADF;AAENW,QAAAA,KAAK,EAAED,GAAG,CAACA;AAFL,OAAP;AAIA,KALa,CAAd;AAMA,SAAKE,SAAL,GAAiBlB,OAAO,CAACkB,SAAzB;AACA,SAAKC,WAAL,GAAmBnB,OAAO,CAACoB,KAA3B;AACA,SAAKC,IAAL,GAAYrB,OAAO,CAACoB,KAAR,CAAchB,GAAd,CAAkBkB,IAAI,IAAI;AACrC,aAAO;AACNC,QAAAA,IAAI,EAAED,IAAI,CAACE,SAAL,GAAiB,GAAjB,GAAuBF,IAAI,CAACG,QAD5B;AAENnB,QAAAA,EAAE,EAAEgB,IAAI,CAAChB;AAFH,OAAP;AAIA,KALW,CAAZ;AAMA,SAAKoB,UAAL,GAAkB1B,OAAO,CAAC0B,UAAR,CAAmBtB,GAAnB,CAAuBuB,SAAS,IAAI;AACrD,aAAO;AACNrB,QAAAA,EAAE,EAAEqB,SAAS,CAACrB,EADR;AAENM,QAAAA,KAAK,EAAEe,SAAS,CAACf,KAFX;AAGNC,QAAAA,WAAW,EAAEc,SAAS,CAACd,WAHjB;AAINe,QAAAA,QAAQ,EAAE/B,MAAM,CAAC8B,SAAS,CAACC,QAAX,CAAN,CAA2BC,QAA3B,EAJJ;AAKN3B,QAAAA,WAAW,EAAE,KAAKD,oBAAL,CAA0B0B,SAAS,CAACG,oBAApC;AALP,OAAP;AAOA,KARiB,CAAlB;AASA;;AA5BmB;AA6CrB,OAAO,MAAMC,OAAN,CAAc;AACpBhC,EAAAA,WAAW,CAACiC,OAAD,EAAU;AAAA,SAWrBC,aAXqB,GAWL,CAACC,OAAD,EAAUC,OAAV,EAAmBb,IAAnB,KAA4B;AAC3C,cAAQY,OAAR;AACC,aAAK,MAAL;AACC,iBAAOZ,IAAI,CAACE,SAAL,GAAiB,GAAjB,GAAuBF,IAAI,CAACG,QAAnC;AACA;;AACD,aAAK,SAAL;AACC,iBAAOU,OAAO,CAACvB,KAAR,GAAgBuB,OAAO,CAACX,SAAxB,GAAoC,GAApC,GAA0CW,OAAO,CAACV,QAAzD;AALF;AAOA,KAnBoB;;AACpB,SAAKW,IAAL,GAAYJ,OAAO,CAACI,IAApB;AACA,SAAKC,SAAL,GAAiBxC,MAAM,CAACmC,OAAO,CAACK,SAAT,CAAN,CAA0BR,QAA1B,EAAjB;AACA,SAAKS,QAAL,GAAgBN,OAAO,CAACO,SAAxB;AACA,SAAKC,MAAL,GAAc,KAAKP,aAAL,CACbD,OAAO,CAACE,OADK,EAEbF,OAAO,CAACG,OAFK,EAGbH,OAAO,CAACV,IAHK,CAAd;AAKA;;AAVmB","sourcesContent":["import moment from \"moment\";\n\nexport class Project {\n\tconstructor(project) {\n\t\tthis.id = project.id;\n\t\tthis.title = project.title;\n\t\tthis.description = project.description;\n\t\tthis.skills = project.tags.map(tag => {\n\t\t\treturn {\n\t\t\t\tid: tag.id,\n\t\t\t\tskill: tag.tag\n\t\t\t};\n\t\t});\n\t\tthis.faculties = project.faculties;\n\t\tthis.teamMembers = project.users;\n\t\tthis.team = project.users.map(user => {\n\t\t\treturn {\n\t\t\t\tname: user.firstName + \" \" + user.lastName,\n\t\t\t\tid: user.id\n\t\t\t};\n\t\t});\n\t\tthis.milestones = project.milestones.map(milestone => {\n\t\t\treturn {\n\t\t\t\tid: milestone.id,\n\t\t\t\ttitle: milestone.title,\n\t\t\t\tdescription: milestone.description,\n\t\t\t\tdeadline: moment(milestone.deadline).calendar(),\n\t\t\t\tsubmissions: this.serializeSubmissions(milestone.milestoneSubmissions)\n\t\t\t};\n\t\t});\n\t}\n\n\tserializeSubmissions = submissions => {\n\t\tlet Submissions = submissions.map(submission => {\n\t\t\treturn {\n\t\t\t\tid: submission.id,\n\t\t\t\tsummary: submission.summary,\n\t\t\t\tstatus: submission.status,\n\t\t\t\tremark: submission.remark,\n\t\t\t\tfile: submission.file,\n\t\t\t\turl: submission.url\n\t\t\t};\n\t\t});\n\t\treturn Submissions;\n\t};\n}\n\nexport class Message {\n\tconstructor(message) {\n\t\tthis.text = message.text;\n\t\tthis.createdAt = moment(message.createdAt).calendar();\n\t\tthis.senderId = message.creatorId;\n\t\tthis.sender = this.resolveSender(\n\t\t\tmessage.creator,\n\t\t\tmessage.faculty,\n\t\t\tmessage.user\n\t\t);\n\t}\n\n\tresolveSender = (creator, faculty, user) => {\n\t\tswitch (creator) {\n\t\t\tcase \"user\":\n\t\t\t\treturn user.firstName + \" \" + user.lastName;\n\t\t\t\tbreak;\n\t\t\tcase \"faculty\":\n\t\t\t\treturn faculty.title + faculty.firstName + \" \" + faculty.lastName;\n\t\t}\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}