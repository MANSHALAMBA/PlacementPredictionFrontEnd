{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/ProjectList/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Route, Switch, Redirect } from \"react-router-dom\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\nimport { Typography } from \"@material-ui/core\";\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      loadProjectList(this.props.token).then(data => {\n        let projects = data.projects.map(project => {\n          return new Project(project);\n        }); // push data to redux\n\n        this.props.pushProjectListdata(projects);\n        this.setState(prevState => {\n          return {\n            isLoading: false\n          };\n        });\n      }).catch(error => {\n        swal({\n          title: \"Internal  Server Error\",\n          text: \"Please Try Refreshing Page\",\n          button: \"Ok\"\n        });\n      });\n    };\n\n    this.columns = [{\n      field: \"id\",\n      title: \"id\",\n      hidden: true,\n      options: {\n        filter: true,\n        sort: true\n      }\n    }, {\n      field: \"title\",\n      title: \"Title\",\n      options: {\n        filter: true,\n        sort: true\n      },\n      cellStyle: {\n        \"font-size\": \"15px\"\n      }\n    }, {\n      field: \"skills\",\n      title: \"Skills\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      render: rowData => rowData.skills.map(skill => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, skill.skill);\n      }),\n      cellStyle: {\n        \"font-size\": \"15px\"\n      }\n    }, {\n      field: \"team\",\n      title: \"Team\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      cellStyle: {\n        \"font-size\": \"15px\"\n      },\n      render: rowData => rowData.team.map(student => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, student.name);\n      })\n    }, {\n      field: \"milestones\",\n      title: \"milestones\",\n      hidden: true\n    }, {\n      title: \"View\",\n      cellStyle: {\n        \"font-size\": \"15px\"\n      },\n      render: rowData => React.createElement(IconButton, {\n        onClick: () => this.handleViewProject(rowData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(ViewIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))\n    }];\n\n    this.handleViewProject = id => {\n      console.log(id);\n      this.props.history.push(\"/project/\" + id);\n    };\n\n    this.data = [{\n      id: \"dsfsd\",\n      title: \"Joe James\",\n      skills: \"Test Corp\",\n      team: \"Yonkers\"\n    }, {\n      id: \"desd\",\n      title: \"John Walsh\",\n      skills: \"Test Corp\",\n      team: \"Hartford\"\n    }, {\n      id: \"wfsd\",\n      title: \"Bob Herm\",\n      skills: \"Test Corp\",\n      team: \"Tampa\"\n    }, {\n      id: \"dsxcsfsd\",\n      title: \"James Houston\",\n      skills: \"Test Corp\",\n      team: \"Dallas\"\n    }];\n\n    this.handleSelection = rows => {\n      this.setState({\n        selectedRows: rows\n      });\n    };\n\n    this.handleClickOpen = formName => {\n      switch (formName) {\n        case \"Event\":\n          this.setState({\n            open: formName\n          });\n          break;\n\n        case \"Group\":\n          this.state.selectedRows.length < 2 ? swal({\n            title: \"Error\",\n            text: \"Select Atleast Two Projects\",\n            icon: \"error\",\n            button: \"Ok\"\n          }) : this.setState({\n            open: formName\n          });\n          break;\n\n        case \"Milestone\":\n          this.state.selectedRows.length < 1 ? swal({\n            title: \"Error\",\n            text: \"Select Atleast one Project\",\n            icon: \"error\",\n            button: \"Ok\"\n          }) : this.setState({\n            open: formName\n          });\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: null\n      });\n    };\n\n    this.state = {\n      data: {},\n      isLoading: true,\n      open: null,\n      selectedRows: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"APTITUDE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.isLoading && React.createElement(Route, {\n      component: Loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/projects/puzzlegame\",\n      component: CreateEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/projects/sudoku\",\n      component: CreateEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/projects/puzzlegame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    projectlistTabledata: state.project.projectlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushProjectListdata: data => dispatch({\n      type: \"PUSH PROJECTLIST DATA\",\n      data: data\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(withStyles(styles)(ProjectList));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/ProjectList/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","ProjectToolbar","MaterialTable","IconButton","ViewIcon","Loader","connect","APTITUDE","Route","Switch","Redirect","styles","withStyles","loadProjectList","Project","CreateEvent","Milestone","Projectgroup","swal","Typography","ProjectList","constructor","props","loadData","token","then","data","projects","map","project","pushProjectListdata","setState","prevState","isLoading","catch","error","title","text","button","columns","field","hidden","options","filter","sort","cellStyle","render","rowData","skills","skill","team","student","name","handleViewProject","id","console","log","history","push","handleSelection","rows","selectedRows","handleClickOpen","formName","open","state","length","icon","handleClose","componentDidMount","classes","root","mapStatetoProps","auth","projectlistTabledata","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\n\nimport ProjectToolbar from \"./components/ProjectToolbar\";\nimport MaterialTable from \"material-table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewIcon from \"@material-ui/icons/Visibility\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\nimport { APTITUDE } from \"../../constants\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { loadProjectList } from \"api/projects\";\nimport { Project } from \"serializers/projects\";\nimport CreateEvent from \"./components/CreateEvent\";\nimport Milestone from \"./components/Milestone\";\nimport Projectgroup from \"./components/Projectgroup\";\nimport swal from \"sweetalert\";\nimport { Typography } from \"@material-ui/core\";\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      isLoading: true,\n      open: null,\n      selectedRows: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    loadProjectList(this.props.token)\n      .then(data => {\n        let projects = data.projects.map(project => {\n          return new Project(project);\n        });\n        // push data to redux\n        this.props.pushProjectListdata(projects);\n        this.setState(prevState => {\n          return {\n            isLoading: false\n          };\n        });\n      })\n      .catch(error => {\n        swal({\n          title: \"Internal  Server Error\",\n          text: \"Please Try Refreshing Page\",\n\n          button: \"Ok\"\n        });\n      });\n  };\n\n  columns = [\n    {\n      field: \"id\",\n      title: \"id\",\n      hidden: true,\n      options: {\n        filter: true,\n        sort: true\n      }\n    },\n    {\n      field: \"title\",\n      title: \"Title\",\n      options: {\n        filter: true,\n        sort: true\n      },\n      cellStyle: {\n        \"font-size\": \"15px\"\n      }\n    },\n    {\n      field: \"skills\",\n      title: \"Skills\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      render: rowData =>\n        rowData.skills.map(skill => {\n          return <li>{skill.skill}</li>;\n        }),\n      cellStyle: {\n        \"font-size\": \"15px\"\n      }\n    },\n    {\n      field: \"team\",\n      title: \"Team\",\n      options: {\n        filter: true,\n        sort: false\n      },\n      cellStyle: {\n        \"font-size\": \"15px\"\n      },\n      render: rowData =>\n        rowData.team.map(student => {\n          return <li>{student.name}</li>;\n        })\n    },\n    {\n      field: \"milestones\",\n      title: \"milestones\",\n      hidden: true\n    },\n    {\n      title: \"View\",\n      cellStyle: {\n        \"font-size\": \"15px\"\n      },\n      render: rowData => (\n        <IconButton onClick={() => this.handleViewProject(rowData.id)}>\n          <ViewIcon />\n        </IconButton>\n      )\n    }\n  ];\n\n  handleViewProject = id => {\n    console.log(id);\n    this.props.history.push(\"/project/\" + id);\n  };\n\n  data = [\n    { id: \"dsfsd\", title: \"Joe James\", skills: \"Test Corp\", team: \"Yonkers\" },\n    {\n      id: \"desd\",\n      title: \"John Walsh\",\n      skills: \"Test Corp\",\n      team: \"Hartford\"\n    },\n    { id: \"wfsd\", title: \"Bob Herm\", skills: \"Test Corp\", team: \"Tampa\" },\n    {\n      id: \"dsxcsfsd\",\n      title: \"James Houston\",\n      skills: \"Test Corp\",\n      team: \"Dallas\"\n    }\n  ];\n\n  handleSelection = rows => {\n    this.setState({\n      selectedRows: rows\n    });\n  };\n\n  handleClickOpen = formName => {\n    switch (formName) {\n      case \"Event\":\n        this.setState({\n          open: formName\n        });\n        break;\n      case \"Group\":\n        this.state.selectedRows.length < 2\n          ? swal({\n              title: \"Error\",\n              text: \"Select Atleast Two Projects\",\n\n              icon: \"error\",\n              button: \"Ok\"\n            })\n          : this.setState({\n              open: formName\n            });\n        break;\n\n      case \"Milestone\":\n        this.state.selectedRows.length < 1\n          ? swal({\n              title: \"Error\",\n              text: \"Select Atleast one Project\",\n\n              icon: \"error\",\n              button: \"Ok\"\n            })\n          : this.setState({\n              open: formName\n            });\n    }\n  };\n  handleClose = () => {\n    this.setState({\n      open: null\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"APTITUDE\">\n        <div className={classes.root}>\n          <Switch>\n            {this.state.isLoading && <Route component={Loader} />}\n            <Route exact path=\"/projects/puzzlegame\" component={CreateEvent} />\n\n            <Route exact path=\"/projects/sudoku\" component={CreateEvent} />\n            <Redirect to=\"/projects/puzzlegame\" />\n          </Switch>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    projectlistTabledata: state.project.projectlistTabledata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushProjectListdata: data =>\n      dispatch({ type: \"PUSH PROJECTLIST DATA\", data: data })\n  };\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(withStyles(styles)(ProjectList));\n"]},"metadata":{},"sourceType":"module"}