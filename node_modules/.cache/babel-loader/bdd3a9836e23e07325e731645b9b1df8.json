{"ast":null,"code":"import validate from \"validate.js\";\nimport moment from \"moment\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\nexport class Quiz {\n  constructor(quiz) {\n    this.id = quiz.id;\n    this.title = quiz.title;\n    this.skills = quiz.tags;\n    this.numberOfQuestions = Number(quiz.noOfQuestions);\n    this.schedulingStatus = this.getSchedulingStatus(quiz);\n    this.schedule = quiz.sechedule;\n  }\n\n  getSchedulingStatus(quiz) {\n    console.log(\"qwer\");\n    let a = 0;\n\n    if (quiz.isActive && quiz.schedule) {\n      a = 1;\n      return a;\n    } else if (!quiz.isActive && quiz.schedule) {\n      a = 2;\n      return a;\n    } else if (!quiz.expiry) {\n      a = 0;\n      return a;\n    } else if (quiz.isActive && quiz.schedule && validate(quiz.expiry, {\n      expiry: {\n        datetime: {\n          earliest: moment.utc(),\n          message: \"Expired\"\n        }\n      }\n    })) {\n      a = 3;\n      return a;\n    } else {\n      return a;\n    }\n  }\n\n}\nexport class Quizdetail {\n  constructor(quiz) {\n    this.title = quiz.title;\n    this.skills = quiz.tags.map(tag => {\n      return tag.tag;\n    });\n    this.numberOfQuestions = quiz.questions.length;\n    this.estimatedTime = quiz.timeToComplete;\n  }\n\n}","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/serializers/quiz.js"],"names":["validate","moment","extend","validators","datetime","parse","value","options","utc","format","dateOnly","Quiz","constructor","quiz","id","title","skills","tags","numberOfQuestions","Number","noOfQuestions","schedulingStatus","getSchedulingStatus","schedule","sechedule","console","log","a","isActive","expiry","earliest","message","Quizdetail","map","tag","questions","length","estimatedTime","timeToComplete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEAD,QAAQ,CAACE,MAAT,CAAgBF,QAAQ,CAACG,UAAT,CAAoBC,QAApC,EAA8C;AAC7C;AACA;AACAC,EAAAA,KAAK,EAAE,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC/B,WAAO,CAACN,MAAM,CAACO,GAAP,CAAWF,KAAX,CAAR;AACA,GAL4C;AAM7C;AACAG,EAAAA,MAAM,EAAE,UAASH,KAAT,EAAgBC,OAAhB,EAAyB;AAChC,QAAIE,MAAM,GAAGF,OAAO,CAACG,QAAR,GAAmB,YAAnB,GAAkC,qBAA/C;AACA,WAAOT,MAAM,CAACO,GAAP,CAAWF,KAAX,EAAkBG,MAAlB,CAAyBA,MAAzB,CAAP;AACA;AAV4C,CAA9C;AAaA,OAAO,MAAME,IAAN,CAAW;AACjBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,SAAKC,EAAL,GAAUD,IAAI,CAACC,EAAf;AACA,SAAKC,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,SAAKC,MAAL,GAAcH,IAAI,CAACI,IAAnB;AACA,SAAKC,iBAAL,GAAyBC,MAAM,CAACN,IAAI,CAACO,aAAN,CAA/B;AACA,SAAKC,gBAAL,GAAwB,KAAKC,mBAAL,CAAyBT,IAAzB,CAAxB;AAEA,SAAKU,QAAL,GAAgBV,IAAI,CAACW,SAArB;AACA;;AAEDF,EAAAA,mBAAmB,CAACT,IAAD,EAAO;AACzBY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,QAAId,IAAI,CAACe,QAAL,IAAiBf,IAAI,CAACU,QAA1B,EAAoC;AACnCI,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHD,MAGO,IAAI,CAACd,IAAI,CAACe,QAAN,IAAkBf,IAAI,CAACU,QAA3B,EAAqC;AAC3CI,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHM,MAGA,IAAI,CAACd,IAAI,CAACgB,MAAV,EAAkB;AACxBF,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAHM,MAGA,IACNd,IAAI,CAACe,QAAL,IACAf,IAAI,CAACU,QADL,IAEAvB,QAAQ,CAACa,IAAI,CAACgB,MAAN,EAAc;AACrBA,MAAAA,MAAM,EAAE;AACPzB,QAAAA,QAAQ,EAAE;AACT0B,UAAAA,QAAQ,EAAE7B,MAAM,CAACO,GAAP,EADD;AAETuB,UAAAA,OAAO,EAAE;AAFA;AADH;AADa,KAAd,CAHF,EAWL;AACDJ,MAAAA,CAAC,GAAG,CAAJ;AACA,aAAOA,CAAP;AACA,KAdM,MAcA;AACN,aAAOA,CAAP;AACA;AACD;;AAxCgB;AA2ClB,OAAO,MAAMK,UAAN,CAAiB;AACvBpB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,SAAKE,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,SAAKC,MAAL,GAAcH,IAAI,CAACI,IAAL,CAAUgB,GAAV,CAAcC,GAAG,IAAI;AAClC,aAAOA,GAAG,CAACA,GAAX;AACA,KAFa,CAAd;AAGA,SAAKhB,iBAAL,GAAyBL,IAAI,CAACsB,SAAL,CAAeC,MAAxC;AACA,SAAKC,aAAL,GAAqBxB,IAAI,CAACyB,cAA1B;AACA;;AARsB","sourcesContent":["import validate from \"validate.js\";\n\nimport moment from \"moment\";\n\nvalidate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nexport class Quiz {\n\tconstructor(quiz) {\n\t\tthis.id = quiz.id;\n\t\tthis.title = quiz.title;\n\t\tthis.skills = quiz.tags;\n\t\tthis.numberOfQuestions = Number(quiz.noOfQuestions);\n\t\tthis.schedulingStatus = this.getSchedulingStatus(quiz);\n\n\t\tthis.schedule = quiz.sechedule;\n\t}\n\n\tgetSchedulingStatus(quiz) {\n\t\tconsole.log(\"qwer\");\n\t\tlet a = 0;\n\t\tif (quiz.isActive && quiz.schedule) {\n\t\t\ta = 1;\n\t\t\treturn a;\n\t\t} else if (!quiz.isActive && quiz.schedule) {\n\t\t\ta = 2;\n\t\t\treturn a;\n\t\t} else if (!quiz.expiry) {\n\t\t\ta = 0;\n\t\t\treturn a;\n\t\t} else if (\n\t\t\tquiz.isActive &&\n\t\t\tquiz.schedule &&\n\t\t\tvalidate(quiz.expiry, {\n\t\t\t\texpiry: {\n\t\t\t\t\tdatetime: {\n\t\t\t\t\t\tearliest: moment.utc(),\n\t\t\t\t\t\tmessage: \"Expired\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t) {\n\t\t\ta = 3;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn a;\n\t\t}\n\t}\n}\n\nexport class Quizdetail {\n\tconstructor(quiz) {\n\t\tthis.title = quiz.title;\n\t\tthis.skills = quiz.tags.map(tag => {\n\t\t\treturn tag.tag;\n\t\t});\n\t\tthis.numberOfQuestions = quiz.questions.length;\n\t\tthis.estimatedTime = quiz.timeToComplete;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}