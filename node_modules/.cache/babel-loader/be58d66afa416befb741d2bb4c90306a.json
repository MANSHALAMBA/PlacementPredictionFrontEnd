{"ast":null,"code":"var _jsxFileName = \"/media/lambamansha/Seagate Expansion Drive/minorproject/src/views/Project/components/Chat/index.jsx\";\nimport React, { Component } from \"react\"; // import { GiftedChat } from \"react-web-gifted-chat\";\n// styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\"; // components\n\nimport InputBar from \"./InputBar\";\nimport MessageContainer from \"./MessageContainer\";\nimport MessageBubble from \"./MessageBubble\";\nimport { Loader } from \"components\";\nimport { fetchMessages } from \"api/projects\";\nimport { Message } from \"serializers/projects\";\nimport swal from \"sweetalert\";\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadMessages = () => {\n      fetchMessages(this.props.token, this.props.match.params.projectId).then(data => {\n        let messages = data.messages.map(message => {\n          return new Message(message);\n        });\n        this.setState({\n          messages,\n          isLoading: false\n        });\n      }).catch(error => swal({\n        title: \"Error\",\n        text: error.response.data.message,\n        button: \"Ok\"\n      }));\n    };\n\n    this.checkUser = senderId => {\n      if (senderId === this.props.loggedInId) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.addMessage = newMessage => {\n      let newmessage = new Message(newMessage);\n      let messages = [...this.state.messages];\n      messages.push(newmessage);\n      this.setState({\n        messages\n      });\n    };\n\n    this.state = {\n      messages: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.loadMessages();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MessageContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"overflow-y\": \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.messages.map(message => {\n      let isRight = this.checkUser(message.senderId);\n      return React.createElement(MessageBubble, {\n        message: message.text,\n        sender: message.sender,\n        sentAt: message.createdAt,\n        isRight: isRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }))), React.createElement(InputBar, {\n      projectid: this.props.match.params.projectId,\n      addMessage: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    token: state.auth.token,\n    loggedInId: state.auth.user.id\n  };\n};\n\nexport default compose(connect(mapStatetoProps), withStyles(styles))(Chat);","map":{"version":3,"sources":["/media/lambamansha/Seagate Expansion Drive/minorproject/src/views/Project/components/Chat/index.jsx"],"names":["React","Component","styles","withStyles","InputBar","MessageContainer","MessageBubble","Loader","fetchMessages","Message","swal","compose","connect","Chat","constructor","props","loadMessages","token","match","params","projectId","then","data","messages","map","message","setState","isLoading","catch","error","title","text","response","button","checkUser","senderId","loggedInId","addMessage","newMessage","newmessage","state","push","componentDidMount","render","classes","root","isRight","sender","createdAt","mapStatetoProps","auth","user","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { GiftedChat } from \"react-web-gifted-chat\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\n// components\nimport InputBar from \"./InputBar\";\nimport MessageContainer from \"./MessageContainer\";\nimport MessageBubble from \"./MessageBubble\";\nimport { Loader } from \"components\";\nimport { fetchMessages } from \"api/projects\";\nimport { Message } from \"serializers/projects\";\nimport swal from \"sweetalert\";\n\nimport compose from \"recompose/compose\";\n\nimport { connect } from \"react-redux\";\n\nclass Chat extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [],\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadMessages();\n\t}\n\n\tloadMessages = () => {\n\t\tfetchMessages(this.props.token, this.props.match.params.projectId)\n\t\t\t.then(data => {\n\t\t\t\tlet messages = data.messages.map(message => {\n\t\t\t\t\treturn new Message(message);\n\t\t\t\t});\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessages,\n\t\t\t\t\tisLoading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error =>\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t})\n\t\t\t);\n\t};\n\n\tcheckUser = senderId => {\n\t\tif (senderId === this.props.loggedInId) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\taddMessage = newMessage => {\n\t\tlet newmessage = new Message(newMessage);\n\t\tlet messages = [...this.state.messages];\n\t\tmessages.push(newmessage);\n\t\tthis.setState({\n\t\t\tmessages\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MessageContainer>\n\t\t\t\t\t\t\t<div style={{ \"overflow-y\": \"scroll\" }}>\n\t\t\t\t\t\t\t\t{this.state.messages.map(message => {\n\t\t\t\t\t\t\t\t\tlet isRight = this.checkUser(message.senderId);\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MessageBubble\n\t\t\t\t\t\t\t\t\t\t\tmessage={message.text}\n\t\t\t\t\t\t\t\t\t\t\tsender={message.sender}\n\t\t\t\t\t\t\t\t\t\t\tsentAt={message.createdAt}\n\t\t\t\t\t\t\t\t\t\t\tisRight={isRight}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</MessageContainer>\n\t\t\t\t\t\t<InputBar\n\t\t\t\t\t\t\tprojectid={this.props.match.params.projectId}\n\t\t\t\t\t\t\taddMessage={this.addMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStatetoProps = state => {\n\treturn {\n\t\ttoken: state.auth.token,\n\t\tloggedInId: state.auth.user.id\n\t};\n};\n\nexport default compose(\n\tconnect(mapStatetoProps),\n\twithStyles(styles)\n)(Chat);\n"]},"metadata":{},"sourceType":"module"}