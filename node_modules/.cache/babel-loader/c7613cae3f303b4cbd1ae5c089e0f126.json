{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"components\";\nimport { OverviewTab, ChatTab, TeamTab, MilestonesTab, ReviewsTab } from \"./components\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    // check for project in redux\n    this.props.checkForCurrentProject(this.props.match.params.projectId);\n  }\n\n  render() {\n    // const { classes } = this.props;\n    return React.createElement(DashboardLayout, {\n      mode: PROJECT,\n      title: \"Project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      component: Loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/overview\",\n      component: OverviewTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/chat\",\n      component: ChatTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/milestones\",\n      component: MilestonesTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/team\",\n      component: TeamTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/project/:projectId/reviews\",\n      component: ReviewsTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/project/:projectId/overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkForCurrentProject: projectId => dispatch({\n      type: \"CHECK FOR CURRENT PROJECT\",\n      projectId: projectId\n    })\n  };\n};\n\nexport default compose(connect(mapDispatchToProps), withStyles(styles))(Project); // isloading true\n// check for project in redux\n// if found isloading false\n// if not found fetch project and push to redux project list , set isloading false","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Project/index.jsx"],"names":["React","Component","Route","Switch","Redirect","compose","Dashboard","DashboardLayout","PROJECT","connect","Loader","OverviewTab","ChatTab","TeamTab","MilestonesTab","ReviewsTab","styles","withStyles","Project","constructor","props","state","isLoading","componentDidMount","checkForCurrentProject","match","params","projectId","render","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,SAA7C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,SACCC,WADD,EAECC,OAFD,EAGCC,OAHD,EAICC,aAJD,EAKCC,UALD,QAMO,cANP,C,CAQA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,OAAN,SAAsBjB,SAAtB,CAAgC;AAC/BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB;AACA,SAAKH,KAAL,CAAWI,sBAAX,CAAkC,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,SAA1D;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR;AAEA,WACC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpB,OAAvB;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,8BAFN;AAGC,MAAA,SAAS,EAAEC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAOC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,0BAAlB;AAA6C,MAAA,SAAS,EAAEC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,EAQC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,gCAFN;AAGC,MAAA,SAAS,EAAEE,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAaC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,0BAAlB;AAA6C,MAAA,SAAS,EAAED,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAcC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,6BAFN;AAGC,MAAA,SAAS,EAAEE,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdD,EAmBC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBD,CADD,CADD;AAyBA;;AAxC8B;;AA0ChC,MAAMc,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNN,IAAAA,sBAAsB,EAAEG,SAAS,IAChCG,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAE,2BADE;AAERJ,MAAAA,SAAS,EAAEA;AAFH,KAAD;AAFH,GAAP;AAOA,CARD;;AAUA,eAAetB,OAAO,CACrBI,OAAO,CAACoB,kBAAD,CADc,EAErBZ,UAAU,CAACD,MAAD,CAFW,CAAP,CAGbE,OAHa,CAAf,C,CAIA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport compose from \"recompose/compose\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { PROJECT } from \"../../constants\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"components\";\n\nimport {\n\tOverviewTab,\n\tChatTab,\n\tTeamTab,\n\tMilestonesTab,\n\tReviewsTab\n} from \"./components\";\n\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\n\nclass Project extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// check for project in redux\n\t\tthis.props.checkForCurrentProject(this.props.match.params.projectId);\n\t}\n\trender() {\n\t\t// const { classes } = this.props;\n\n\t\treturn (\n\t\t\t<DashboardLayout mode={PROJECT} title=\"Project\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route component={Loader} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/overview\"\n\t\t\t\t\t\tcomponent={OverviewTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/chat\" component={ChatTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/milestones\"\n\t\t\t\t\t\tcomponent={MilestonesTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/project/:projectId/team\" component={TeamTab} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/project/:projectId/reviews\"\n\t\t\t\t\t\tcomponent={ReviewsTab}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to=\"/project/:projectId/overview\" />\n\t\t\t\t</Switch>\n\t\t\t</DashboardLayout>\n\t\t);\n\t}\n}\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tcheckForCurrentProject: projectId =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"CHECK FOR CURRENT PROJECT\",\n\t\t\t\tprojectId: projectId\n\t\t\t})\n\t};\n};\n\nexport default compose(\n\tconnect(mapDispatchToProps),\n\twithStyles(styles)\n)(Project);\n// isloading true\n// check for project in redux\n// if found isloading false\n// if not found fetch project and push to redux project list , set isloading false\n"]},"metadata":{},"sourceType":"module"}