{"ast":null,"code":"import _objectWithoutProperties from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Dashboard/components/SkillComposition/index.jsx\";\nimport React, { Component } from \"react\"; // Externals\n\nimport classNames from \"classnames\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport PropTypes, { element } from \"prop-types\";\nimport { IconButton, Typography } from \"@material-ui/core\"; // Material helpers\n\nimport { withStyles } from \"@material-ui/styles\"; // Shared services\n\nimport { getOrders } from \"services/order\"; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletToolbar, PortletContent, Status } from \"components\"; // Component styles\n\nimport styles from \"./styles\"; // Palette\n\nimport palette from \"theme/palette\";\nconst statusColors = {\n  delivered: \"success\",\n  pending: \"info\",\n  refund: \"danger\"\n};\n\nclass SkillComposition extends Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      legend: {\n        display: false\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: false,\n      cutoutPercentage: 80,\n      layout: {\n        padding: 0\n      },\n      tooltips: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        borderWidth: 1,\n        borderColor: palette.border,\n        backgroundColor: palette.common.white,\n        titleFontColor: palette.text.primary,\n        bodyFontColor: palette.text.secondary,\n        footerFontColor: palette.text.secondary\n      }\n    };\n    this.state = {};\n  } // Chart options\n\n\n  render() {\n    let data = {\n      datasets: [{\n        data: this.props.data,\n        backgroundColor: this.props.data.map(element => {\n          let r = Math.floor(Math.random() * 200);\n          let g = Math.floor(Math.random() * 200);\n          let b = Math.floor(Math.random() * 200);\n          let color = \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n          return color;\n        }),\n        borderWidth: 8,\n        borderColor: palette.common.white,\n        hoverBorderColor: palette.common.white\n      }],\n      labels: this.props.labels\n    };\n\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"className\"]);\n\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, Object.assign({}, rest, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(PortletHeader, {\n      noDivider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      title: \"Content Categorization By SkillSet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(PortletContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.chartWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: data,\n      options: this.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.stats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.labels.map((label, index) => {\n      return React.createElement(\"div\", {\n        className: classes.device,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, label), React.createElement(Typography, {\n        style: {\n          color: data.datasets[0].backgroundColor[index]\n        },\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.data[index]));\n    }))));\n  }\n\n}\n\nSkillComposition.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SkillComposition);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Dashboard/components/SkillComposition/index.jsx"],"names":["React","Component","classNames","Doughnut","PropTypes","element","IconButton","Typography","withStyles","getOrders","Portlet","PortletHeader","PortletLabel","PortletToolbar","PortletContent","Status","styles","palette","statusColors","delivered","pending","refund","SkillComposition","constructor","props","options","legend","display","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","padding","tooltips","enabled","mode","intersect","borderWidth","borderColor","border","backgroundColor","common","white","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","state","render","data","datasets","map","r","Math","floor","random","g","b","color","hoverBorderColor","labels","classes","className","rest","rootClassName","root","chartWrapper","stats","label","index","device","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// Externals\nimport classNames from \"classnames\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport PropTypes, { element } from \"prop-types\";\nimport { IconButton, Typography } from \"@material-ui/core\";\n\n// Material helpers\nimport { withStyles } from \"@material-ui/styles\";\n\n// Shared services\nimport { getOrders } from \"services/order\";\n\n// Shared components\nimport {\n\tPortlet,\n\tPortletHeader,\n\tPortletLabel,\n\tPortletToolbar,\n\tPortletContent,\n\tStatus\n} from \"components\";\n\n// Component styles\nimport styles from \"./styles\";\n// Palette\nimport palette from \"theme/palette\";\n\nconst statusColors = {\n\tdelivered: \"success\",\n\tpending: \"info\",\n\trefund: \"danger\"\n};\n\nclass SkillComposition extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\t// Chart options\n\toptions = {\n\t\tlegend: {\n\t\t\tdisplay: false\n\t\t},\n\t\tresponsive: true,\n\t\tmaintainAspectRatio: false,\n\t\tanimation: false,\n\t\tcutoutPercentage: 80,\n\t\tlayout: { padding: 0 },\n\t\ttooltips: {\n\t\t\tenabled: true,\n\t\t\tmode: \"index\",\n\t\t\tintersect: false,\n\t\t\tborderWidth: 1,\n\t\t\tborderColor: palette.border,\n\t\t\tbackgroundColor: palette.common.white,\n\t\t\ttitleFontColor: palette.text.primary,\n\t\t\tbodyFontColor: palette.text.secondary,\n\t\t\tfooterFontColor: palette.text.secondary\n\t\t}\n\t};\n\trender() {\n\t\tlet data = {\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: this.props.data,\n\t\t\t\t\tbackgroundColor: this.props.data.map(element => {\n\t\t\t\t\t\tlet r = Math.floor(Math.random() * 200);\n\t\t\t\t\t\tlet g = Math.floor(Math.random() * 200);\n\t\t\t\t\t\tlet b = Math.floor(Math.random() * 200);\n\t\t\t\t\t\tlet color = \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n\t\t\t\t\t\treturn color;\n\t\t\t\t\t}),\n\t\t\t\t\tborderWidth: 8,\n\t\t\t\t\tborderColor: palette.common.white,\n\t\t\t\t\thoverBorderColor: palette.common.white\n\t\t\t\t}\n\t\t\t],\n\t\t\tlabels: this.props.labels\n\t\t};\n\n\t\tconst { classes, className, ...rest } = this.props;\n\n\t\tconst rootClassName = classNames(classes.root, className);\n\n\t\treturn (\n\t\t\t<Portlet {...rest} className={rootClassName}>\n\t\t\t\t<PortletHeader noDivider>\n\t\t\t\t\t<PortletLabel title=\"Content Categorization By SkillSet\" />\n\t\t\t\t</PortletHeader>\n\t\t\t\t<PortletContent>\n\t\t\t\t\t<div className={classes.chartWrapper}>\n\t\t\t\t\t\t<Doughnut data={data} options={this.options} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.stats}>\n\t\t\t\t\t\t{this.props.labels.map((label, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={classes.device}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{label}</Typography>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: data.datasets[0].backgroundColor[index] }}\n\t\t\t\t\t\t\t\t\t\tvariant=\"h2\">\n\t\t\t\t\t\t\t\t\t\t{this.props.data[index]}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</PortletContent>\n\t\t\t</Portlet>\n\t\t);\n\t}\n}\n\nSkillComposition.propTypes = {\n\tclassName: PropTypes.string,\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SkillComposition);\n"]},"metadata":{},"sourceType":"module"}