{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/layouts/Dashboard/index.jsx\";\nimport React, { Component, Fragment } from \"react\"; // Externals\n\nimport classNames from \"classnames\";\nimport compose from \"recompose/compose\";\nimport PropTypes from \"prop-types\"; // Material helpers\n\nimport { withWidth } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\"; // Material components\n\nimport { Drawer } from \"@material-ui/core\"; // Custom components\n\nimport { Sidebar, ProjectSidebar, Topbar } from \"./components\"; // redux\n\nimport { connect } from \"react-redux\";\nimport { onLogOut } from \"store/actions/auth\"; // Component styles\n\nimport styles from \"./styles\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleToggleOpen = () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n\n    const isMobile = [\"xs\", \"sm\", \"md\"].includes(props.width);\n    this.state = {\n      isOpen: !isMobile\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          width = _this$props.width,\n          title = _this$props.title,\n          children = _this$props.children,\n          project = _this$props.project;\n    const isOpen = this.state.isOpen;\n    const isMobile = [\"xs\", \"sm\", \"md\"].includes(width);\n    const shiftTopbar = isOpen && !isMobile;\n    const shiftContent = isOpen && !isMobile;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Topbar, {\n      className: classNames(classes.topbar, {\n        [classes.topbarShift]: shiftTopbar\n      }),\n      isSidebarOpen: isOpen,\n      onLogOut: this.props.onLogOut,\n      onToggleSidebar: this.handleToggleOpen,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Drawer, {\n      anchor: \"left\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      onClose: this.handleClose,\n      open: isOpen,\n      variant: isMobile ? \"temporary\" : \"persistent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, project ? React.createElement(ProjectSidebar, {\n      me: this.props.me,\n      className: classes.sidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : React.createElement(Sidebar, {\n      me: this.props.me,\n      className: classes.sidebar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: shiftContent\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, children));\n  }\n\n}\n\nDashboard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    me: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = {\n  onLogOut: onLogOut\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withWidth())(Dashboard);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/layouts/Dashboard/index.jsx"],"names":["React","Component","Fragment","classNames","compose","PropTypes","withWidth","withStyles","Drawer","Sidebar","ProjectSidebar","Topbar","connect","onLogOut","styles","Dashboard","constructor","props","handleClose","setState","isOpen","handleToggleOpen","prevState","isMobile","includes","width","state","render","classes","title","children","project","shiftTopbar","shiftContent","topbar","topbarShift","paper","drawerPaper","me","sidebar","content","contentShift","propTypes","node","className","string","object","isRequired","mapStateToProps","auth","user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\n// Externals\nimport classNames from \"classnames\";\nimport compose from \"recompose/compose\";\nimport PropTypes from \"prop-types\";\n\n// Material helpers\nimport { withWidth } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\n\n// Material components\nimport { Drawer } from \"@material-ui/core\";\n\n// Custom components\nimport { Sidebar, ProjectSidebar, Topbar } from \"./components\";\n\n// redux\nimport { connect } from \"react-redux\";\n\nimport { onLogOut } from \"store/actions/auth\";\n\n// Component styles\nimport styles from \"./styles\";\n\nclass Dashboard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst isMobile = [\"xs\", \"sm\", \"md\"].includes(props.width);\n\n\t\tthis.state = {\n\t\t\tisOpen: !isMobile\n\t\t};\n\t}\n\n\thandleClose = () => {\n\t\tthis.setState({ isOpen: false });\n\t};\n\n\thandleToggleOpen = () => {\n\t\tthis.setState(prevState => ({\n\t\t\tisOpen: !prevState.isOpen\n\t\t}));\n\t};\n\n\trender() {\n\t\tconst { classes, width, title, children, project } = this.props;\n\t\tconst { isOpen } = this.state;\n\n\t\tconst isMobile = [\"xs\", \"sm\", \"md\"].includes(width);\n\t\tconst shiftTopbar = isOpen && !isMobile;\n\t\tconst shiftContent = isOpen && !isMobile;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Topbar\n\t\t\t\t\tclassName={classNames(classes.topbar, {\n\t\t\t\t\t\t[classes.topbarShift]: shiftTopbar\n\t\t\t\t\t})}\n\t\t\t\t\tisSidebarOpen={isOpen}\n\t\t\t\t\tonLogOut={this.props.onLogOut}\n\t\t\t\t\tonToggleSidebar={this.handleToggleOpen}\n\t\t\t\t\ttitle={title}\n\t\t\t\t/>\n\t\t\t\t<Drawer\n\t\t\t\t\tanchor=\"left\"\n\t\t\t\t\tclasses={{ paper: classes.drawerPaper }}\n\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\topen={isOpen}\n\t\t\t\t\tvariant={isMobile ? \"temporary\" : \"persistent\"}>\n\t\t\t\t\t{project ? (\n\t\t\t\t\t\t<ProjectSidebar me={this.props.me} className={classes.sidebar} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Sidebar me={this.props.me} className={classes.sidebar} />\n\t\t\t\t\t)}\n\t\t\t\t</Drawer>\n\t\t\t\t<main\n\t\t\t\t\tclassName={classNames(classes.content, {\n\t\t\t\t\t\t[classes.contentShift]: shiftContent\n\t\t\t\t\t})}>\n\t\t\t\t\t{children}\n\t\t\t\t\t{/*<Footer />*/}\n\t\t\t\t</main>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nDashboard.propTypes = {\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string,\n\tclasses: PropTypes.object.isRequired,\n\ttitle: PropTypes.string,\n\twidth: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tme: state.auth.user\n\t};\n};\n\nconst mapDispatchToProps = {\n\tonLogOut: onLogOut\n};\n\nexport default compose(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t),\n\twithStyles(styles),\n\twithWidth()\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}