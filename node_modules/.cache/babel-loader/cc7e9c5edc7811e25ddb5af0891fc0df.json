{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../config\";\nexport const loadProjectList = token => axios.get(\"\".concat(API_URL, \"/project/list\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const CreateProjectGroup = (token, data) => axios.post(\"\".concat(API_URL, \"/project/group/create\"), data, {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const CreateMilestone = (token, data) => axios.post(\"\".concat(API_URL, \"/project/milestones/create\"), data, {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const fetchFacultyGroups = token => axios.get(\"\".concat(API_URL, \"/faculty/groups\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const fetchProjectGroups = token => axios.get(\"\".concat(API_URL, \"/project/groups\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const CreateReviewEvent = (token, data) => axios.post(\"\".concat(API_URL, \"/project/review/event/create\"), data, {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const sendMessage = (token, data, projectID) => axios.post(\"\".concat(API_URL, \"/project/\").concat(projectID, \"/message/send\"), data, {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);\nexport const fetchMessages = (token, projectID) => axios.get(\"\".concat(API_URL, \"/project/\").concat(projectID, \"/messages\"), {\n  headers: {\n    Authorization: \"Bearer \".concat(token)\n  }\n}).then(response => response.data);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/api/projects.js"],"names":["axios","API_URL","loadProjectList","token","get","headers","Authorization","then","response","data","CreateProjectGroup","post","CreateMilestone","fetchFacultyGroups","fetchProjectGroups","CreateReviewEvent","sendMessage","projectID","fetchMessages"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,eAAe,GAAGC,KAAK,IACnCH,KAAK,CACHI,GADF,WACSH,OADT,oBACiC;AAC/BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADsB,CADjC,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMC,kBAAkB,GAAG,CAACP,KAAD,EAAQM,IAAR,KACjCT,KAAK,CACHW,IADF,WACUV,OADV,4BAC0CQ,IAD1C,EACgD;AAC9CJ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADqC,CADhD,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMG,eAAe,GAAG,CAACT,KAAD,EAAQM,IAAR,KAC9BT,KAAK,CACHW,IADF,WACUV,OADV,iCAC+CQ,IAD/C,EACqD;AACnDJ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AAD0C,CADrD,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMI,kBAAkB,GAAGV,KAAK,IACtCH,KAAK,CACHI,GADF,WACSH,OADT,sBACmC;AACjCI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADwB,CADnC,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMK,kBAAkB,GAAGX,KAAK,IACtCH,KAAK,CACHI,GADF,WACSH,OADT,sBACmC;AACjCI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADwB,CADnC,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMM,iBAAiB,GAAG,CAACZ,KAAD,EAAQM,IAAR,KAChCT,KAAK,CACHW,IADF,WACUV,OADV,mCACiDQ,IADjD,EACuD;AACrDJ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AAD4C,CADvD,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMO,WAAW,GAAG,CAACb,KAAD,EAAQM,IAAR,EAAcQ,SAAd,KAC1BjB,KAAK,CACHW,IADF,WACUV,OADV,sBAC6BgB,SAD7B,oBACuDR,IADvD,EAC6D;AAC3DJ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADkD,CAD7D,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM;AAOP,OAAO,MAAMS,aAAa,GAAG,CAACf,KAAD,EAAQc,SAAR,KAC5BjB,KAAK,CACHI,GADF,WACSH,OADT,sBAC4BgB,SAD5B,gBACkD;AAChDZ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,aAAa,mBAAYH,KAAZ;AAAf;AADuC,CADlD,EAIEI,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAJ5B,CADM","sourcesContent":["import axios from \"axios\";\nimport { API_URL } from \"../config\";\n\nexport const loadProjectList = token =>\n\taxios\n\t\t.get(`${API_URL}/project/list`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const CreateProjectGroup = (token, data) =>\n\taxios\n\t\t.post(`${API_URL}/project/group/create`, data, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const CreateMilestone = (token, data) =>\n\taxios\n\t\t.post(`${API_URL}/project/milestones/create`, data, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const fetchFacultyGroups = token =>\n\taxios\n\t\t.get(`${API_URL}/faculty/groups`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const fetchProjectGroups = token =>\n\taxios\n\t\t.get(`${API_URL}/project/groups`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const CreateReviewEvent = (token, data) =>\n\taxios\n\t\t.post(`${API_URL}/project/review/event/create`, data, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const sendMessage = (token, data, projectID) =>\n\taxios\n\t\t.post(`${API_URL}/project/${projectID}/message/send`, data, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n\nexport const fetchMessages = (token, projectID) =>\n\taxios\n\t\t.get(`${API_URL}/project/${projectID}/messages`, {\n\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t})\n\t\t.then(response => response.data);\n"]},"metadata":{},"sourceType":"module"}