{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/Visualization/components/BySkillSet/index.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport palette from \"theme/palette\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Portlet, PortletHeader, PortletLabel, PortletToolbar, PortletContent } from \"components\";\n\nclass BySkillSet extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = BySkillSet.getVisualizationData(props.questions, props.skills);\n  }\n\n  // static getDerivedStateFromProps(props, state) {\n  // \t//check if props.questions has changed\n  // \tlet data = BySkillSet.getVisualizationData(props.questions, props.skills);\n  // \tif (\n  // \t\tdata.easy === state.easy &&\n  // \t\tdata.medium === state.medium &&\n  // \t\tdata.hard === state.hard\n  // \t) {\n  // \t\treturn null;\n  // \t} else {\n  // \t\treturn data;\n  // \t}\n  // }\n  render() {\n    console.log(this.state.skillsByPercent);\n    let data = {\n      datasets: [{\n        data: [...this.state.skillsByPercent],\n        backgroundColor: [palette.primary.main, palette.danger.main, palette.warning.main],\n        borderWidth: 8,\n        borderColor: palette.common.white,\n        hoverBorderColor: palette.common.white\n      }],\n      labels: [\"Easy\", \"Medium\", \"Hard\"]\n    };\n    let options = {\n      legend: {\n        display: false\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: false,\n      cutoutPercentage: 80,\n      layout: {\n        padding: 0\n      },\n      tooltips: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        borderWidth: 1,\n        borderColor: palette.border,\n        backgroundColor: palette.common.white,\n        titleFontColor: palette.text.primary,\n        bodyFontColor: palette.text.secondary,\n        footerFontColor: palette.text.secondary\n      }\n    };\n    return React.createElement(\"div\", {\n      className: this.props.classes.chartWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Portlet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(PortletHeader, {\n      noDivider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      title: \"Questions By Difficulty Level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(PortletContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: data,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.classes.stats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(Typography, {\n      style: {\n        color: palette.primary.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(Typography, {\n      style: {\n        color: palette.danger.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: this.props.classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Hard\"), React.createElement(Typography, {\n      style: {\n        color: palette.warning.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nBySkillSet.getVisualizationData = (questions, quizskills) => {\n  console.log(\"am settting state\");\n  let numberOfquestions = questions.length;\n  let lengthofquizskills = quizskills.length;\n  console.log(lengthofquizskills);\n  let skillsByPercent = new Array(lengthofquizskills);\n  console.log(skillsByPercent);\n  skillsByPercent = skillsByPercent.map(skillpercent => {\n    skillpercent = 0;\n    return skillpercent;\n  });\n  console.log(skillsByPercent);\n  questions.map(question => {\n    question.skills.map(skill => {\n      let index = quizskills.indexOf(skill);\n      ++skillsByPercent[index];\n    });\n  });\n  skillsByPercent.map(skillpercent => {\n    skillpercent = skillpercent / numberOfquestions * 100;\n  });\n  return {\n    skillsByPercent\n  };\n};\n\nexport default withStyles(styles)(BySkillSet);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/Visualization/components/BySkillSet/index.jsx"],"names":["React","PureComponent","Pie","styles","withStyles","palette","Typography","Grid","Portlet","PortletHeader","PortletLabel","PortletToolbar","PortletContent","BySkillSet","constructor","props","state","getVisualizationData","questions","skills","render","console","log","skillsByPercent","data","datasets","backgroundColor","primary","main","danger","warning","borderWidth","borderColor","common","white","hoverBorderColor","labels","options","legend","display","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","padding","tooltips","enabled","mode","intersect","border","titleFontColor","text","bodyFontColor","secondary","footerFontColor","classes","chartWrapper","stats","label","color","quizskills","numberOfquestions","length","lengthofquizskills","Array","map","skillpercent","question","skill","index","indexOf"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport palette from \"theme/palette\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n\tPortlet,\n\tPortletHeader,\n\tPortletLabel,\n\tPortletToolbar,\n\tPortletContent\n} from \"components\";\nclass BySkillSet extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = BySkillSet.getVisualizationData(props.questions, props.skills);\n\t}\n\tstatic getVisualizationData = (questions, quizskills) => {\n\t\tconsole.log(\"am settting state\");\n\t\tlet numberOfquestions = questions.length;\n\t\tlet lengthofquizskills = quizskills.length;\n\t\tconsole.log(lengthofquizskills);\n\t\tlet skillsByPercent = new Array(lengthofquizskills);\n\t\tconsole.log(skillsByPercent);\n\t\tskillsByPercent = skillsByPercent.map(skillpercent => {\n\t\t\tskillpercent = 0;\n\t\t\treturn skillpercent;\n\t\t});\n\t\tconsole.log(skillsByPercent);\n\n\t\tquestions.map(question => {\n\t\t\tquestion.skills.map(skill => {\n\t\t\t\tlet index = quizskills.indexOf(skill);\n\t\t\t\t++skillsByPercent[index];\n\t\t\t});\n\t\t});\n\n\t\tskillsByPercent.map(skillpercent => {\n\t\t\tskillpercent = (skillpercent / numberOfquestions) * 100;\n\t\t});\n\n\t\treturn {\n\t\t\tskillsByPercent\n\t\t};\n\t};\n\n\t// static getDerivedStateFromProps(props, state) {\n\t// \t//check if props.questions has changed\n\t// \tlet data = BySkillSet.getVisualizationData(props.questions, props.skills);\n\t// \tif (\n\t// \t\tdata.easy === state.easy &&\n\t// \t\tdata.medium === state.medium &&\n\t// \t\tdata.hard === state.hard\n\t// \t) {\n\t// \t\treturn null;\n\t// \t} else {\n\t// \t\treturn data;\n\t// \t}\n\t// }\n\n\trender() {\n\t\tconsole.log(this.state.skillsByPercent);\n\t\tlet data = {\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: [...this.state.skillsByPercent],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\tpalette.primary.main,\n\t\t\t\t\t\tpalette.danger.main,\n\t\t\t\t\t\tpalette.warning.main\n\t\t\t\t\t],\n\t\t\t\t\tborderWidth: 8,\n\t\t\t\t\tborderColor: palette.common.white,\n\t\t\t\t\thoverBorderColor: palette.common.white\n\t\t\t\t}\n\t\t\t],\n\t\t\tlabels: [\"Easy\", \"Medium\", \"Hard\"]\n\t\t};\n\n\t\tlet options = {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tanimation: false,\n\t\t\tcutoutPercentage: 80,\n\t\t\tlayout: { padding: 0 },\n\t\t\ttooltips: {\n\t\t\t\tenabled: true,\n\t\t\t\tmode: \"index\",\n\t\t\t\tintersect: false,\n\t\t\t\tborderWidth: 1,\n\t\t\t\tborderColor: palette.border,\n\t\t\t\tbackgroundColor: palette.common.white,\n\t\t\t\ttitleFontColor: palette.text.primary,\n\t\t\t\tbodyFontColor: palette.text.secondary,\n\t\t\t\tfooterFontColor: palette.text.secondary\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<div className={this.props.classes.chartWrapper}>\n\t\t\t\t<Portlet>\n\t\t\t\t\t<PortletHeader noDivider>\n\t\t\t\t\t\t<PortletLabel title=\"Questions By Difficulty Level\" />\n\t\t\t\t\t</PortletHeader>\n\t\t\t\t\t<PortletContent>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Pie data={data} options={options} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={this.props.classes.stats}>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Easy</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: palette.primary.main }}\n\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Medium</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: palette.danger.main }}\n\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={this.props.classes.label}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Hard</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ color: palette.warning.main }}\n\t\t\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PortletContent>\n\t\t\t\t</Portlet>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(BySkillSet);\n"]},"metadata":{},"sourceType":"module"}