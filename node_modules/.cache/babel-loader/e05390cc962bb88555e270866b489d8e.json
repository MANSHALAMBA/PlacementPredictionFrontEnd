{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/QuestionsForm/index.jsx\";\nimport React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\n\nclass QuestionsForm extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getInitialState = props => {\n      if (props.mode === \"EDIT\") {\n        return {\n          data: _objectSpread({\n            questiontitle: \"\",\n            options: [\"\", \"\"],\n            correctOption: \"\",\n            difficultyLevel: \"\",\n            skills: []\n          }, props.data),\n          errors: {}\n        };\n      } else {\n        // default mode is assumed to be ADD\n        return {\n          data: {\n            questiontitle: \"\",\n            options: [\"\", \"\"],\n            correctOption: \"\",\n            difficultyLevel: \"\",\n            skills: []\n          },\n          errors: {}\n        };\n      }\n    };\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: null\n          })\n        };\n      });\n    };\n\n    this.onaddOption = () => {\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            options: [...prevState.data.options, \"\"]\n          })\n        };\n      });\n    };\n\n    this.ondeleteOption = (e, index) => {\n      if (this.state.data.options.length > 2) {\n        let options = this.state.data.options;\n        options = options.splice(index, 1);\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data, {\n              options: [...options]\n            })\n          };\n        });\n      }\n    };\n\n    this.onOptionChange = (e, index) => {\n      console.log(\"hey\");\n      let options = this.state.data.options;\n      options[index] = e.target.option;\n\n      if (this.state.errors.options) {\n        let optionsErr = this.state.errors.options;\n        optionsErr[index] = null;\n        this.setState(prevState => {\n          return {\n            errors: _objectSpread({}, prevState.errors, {\n              options: [...optionsErr]\n            })\n          };\n        });\n      }\n\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            options: [...options]\n          })\n        };\n      });\n    };\n\n    this.skillChange = (e, skill) => {\n      console.log(skill);\n      this.setState(prevState => {\n        return {\n          errors: _objectSpread({}, prevState.errors, {\n            skills: null\n          })\n        };\n      });\n\n      if (!this.state.data.skills.includes(skill)) {\n        let skills = this.state.data.skills;\n        skills.push(skill);\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data, {\n              skills: [...skills]\n            })\n          };\n        });\n      } else {\n        let skills = this.state.data.skills;\n        let index = skills.indexOf(skill);\n        skills = skills.splice(index, 1);\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data, {\n              skills: [...skills]\n            })\n          };\n        });\n      }\n    };\n\n    this.OnCorrectOptionChange = (e, checked, index) => {\n      this.setState(prevState => {\n        return {\n          errors: _objectSpread({}, prevState.errors, {\n            correctOption: null\n          })\n        };\n      });\n      let correctoption = this.state.data.options[index];\n\n      if (checked) {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data, {\n              correctOption: correctoption\n            })\n          };\n        });\n      } else {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data, {\n              correctOption: \"\"\n            })\n          };\n        });\n      }\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let errors = validate(this.state.data, {\n        questiontitle: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        difficultyLevel: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        skills: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        correctOption: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      });\n      let optionsErr = this.state.data.options.map(option => {\n        let error = {};\n\n        if (option === \"\") {\n          error.Option = \"*required\";\n        }\n\n        return Object.keys(error).length > 0 ? error : null;\n      }); // check for errors\n\n      if (optionsErr.some(val => val !== null) && errors) {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, errors, {\n              options: optionsErr\n            })\n          };\n        });\n      } else if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, {\n              options: optionsErr\n            })\n          };\n        });\n      }\n\n      console.log(errors);\n    };\n\n    this.state = this.getInitialState(_props);\n  }\n\n  render() {\n    return React.createElement(ContentForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      years: this.years,\n      types: this.types,\n      handleCloseForm: this.props.handleCloseForm,\n      mode: this.props.mode,\n      skills: this.props.skills,\n      onaddOption: this.onaddOption,\n      ondeleteOption: this.ondeleteOption,\n      onSkillChange: this.skillChange,\n      skillChange: this.skillChange,\n      onOptionChange: this.onOptionChange,\n      OnCorrectOptionChange: this.OnCorrectOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    });\n  }\n\n}\n\nQuestionsForm.defaultProps = {\n  mode: \"ADD\"\n};\nexport default QuestionsForm;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/components/QuestionsForm/index.jsx"],"names":["React","Component","ContentForm","validate","QuestionsForm","constructor","props","getInitialState","mode","data","questiontitle","options","correctOption","difficultyLevel","skills","errors","onChangeHandler","e","target","name","value","setState","prevState","onaddOption","ondeleteOption","index","state","length","splice","onOptionChange","console","log","option","optionsErr","skillChange","skill","includes","push","indexOf","OnCorrectOptionChange","checked","correctoption","onSubmitHandler","presence","allowEmpty","message","map","error","Option","Object","keys","some","val","render","open","years","types","handleCloseForm","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\n\nclass QuestionsForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState(props);\n\t}\n\n\tstatic defaultProps = {\n\t\tmode: \"ADD\"\n\t};\n\n\tgetInitialState = props => {\n\t\tif (props.mode === \"EDIT\") {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\tquestiontitle: \"\",\n\t\t\t\t\toptions: [\"\", \"\"],\n\t\t\t\t\tcorrectOption: \"\",\n\t\t\t\t\tdifficultyLevel: \"\",\n\t\t\t\t\tskills: [],\n\t\t\t\t\t...props.data\n\t\t\t\t},\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t} else {\n\t\t\t// default mode is assumed to be ADD\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\tquestiontitle: \"\",\n\t\t\t\t\toptions: [\"\", \"\"],\n\t\t\t\t\tcorrectOption: \"\",\n\t\t\t\t\tdifficultyLevel: \"\",\n\t\t\t\t\tskills: []\n\t\t\t\t},\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t}\n\t};\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\t[name]: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t[name]: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonaddOption = () => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\toptions: [...prevState.data.options, \"\"]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\tondeleteOption = (e, index) => {\n\t\tif (this.state.data.options.length > 2) {\n\t\t\tlet options = this.state.data.options;\n\t\t\toptions = options.splice(index, 1);\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\n\t\t\t\t\t\toptions: [...options]\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\tonOptionChange = (e, index) => {\n\t\tconsole.log(\"hey\");\n\t\tlet options = this.state.data.options;\n\t\toptions[index] = e.target.option;\n\n\t\tif (this.state.errors.options) {\n\t\t\tlet optionsErr = this.state.errors.options;\n\t\t\toptionsErr[index] = null;\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t\toptions: [...optionsErr]\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\toptions: [...options]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tskillChange = (e, skill) => {\n\t\tconsole.log(skill);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\tskills: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tif (!this.state.data.skills.includes(skill)) {\n\t\t\tlet skills = this.state.data.skills;\n\t\t\tskills.push(skill);\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\tskills: [...skills]\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tlet skills = this.state.data.skills;\n\t\t\tlet index = skills.indexOf(skill);\n\t\t\tskills = skills.splice(index, 1);\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\tskills: [...skills]\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\n\tOnCorrectOptionChange = (e, checked, index) => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\tcorrectOption: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tlet correctoption = this.state.data.options[index];\n\t\tif (checked) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: { ...prevState.data, correctOption: correctoption }\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: { ...prevState.data, correctOption: \"\" }\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\n\tonSubmitHandler = () => {\n\t\tconsole.log(\"submission handler\");\n\t\t//validation\n\t\tlet errors = validate(this.state.data, {\n\t\t\tquestiontitle: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t},\n\t\t\tdifficultyLevel: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t},\n\t\t\tskills: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t},\n\t\t\tcorrectOption: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t}\n\t\t});\n\n\t\tlet optionsErr = this.state.data.options.map(option => {\n\t\t\tlet error = {};\n\n\t\t\tif (option === \"\") {\n\t\t\t\terror.Option = \"*required\";\n\t\t\t}\n\n\t\t\treturn Object.keys(error).length > 0 ? error : null;\n\t\t});\n\n\t\t// check for errors\n\t\tif (optionsErr.some(val => val !== null) && errors) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t\t...errors,\n\t\t\t\t\t\toptions: optionsErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else if (errors) {\n\t\t\tthis.setState({ errors });\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\n\t\t\t\t\t\toptions: optionsErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tconsole.log(errors);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<ContentForm\n\t\t\t\topen={this.props.open}\n\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\terrors={this.state.errors}\n\t\t\t\tdata={this.state.data}\n\t\t\t\tyears={this.years}\n\t\t\t\ttypes={this.types}\n\t\t\t\thandleCloseForm={this.props.handleCloseForm}\n\t\t\t\tmode={this.props.mode}\n\t\t\t\tskills={this.props.skills}\n\t\t\t\tonaddOption={this.onaddOption}\n\t\t\t\tondeleteOption={this.ondeleteOption}\n\t\t\t\tonSkillChange={this.skillChange}\n\t\t\t\tskillChange={this.skillChange}\n\t\t\t\tonOptionChange={this.onOptionChange}\n\t\t\t\tOnCorrectOptionChange={this.OnCorrectOptionChange}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default QuestionsForm;\n"]},"metadata":{},"sourceType":"module"}