{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/CreateQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { createQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\n\nclass CreateQuiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: null\n          })\n        };\n      });\n    };\n\n    this.onAddHandler = e => {\n      e.preventDefault();\n      console.log(\"hey am add handler\");\n      console.log(this.state.data.skills); // check for repitition\n\n      if (this.state.data.text) {\n        var found = false;\n\n        for (var i = 0; i < this.state.data.skills.length; i++) {\n          if (this.state.data.skills[i].text === this.state.data.text) {\n            found = true;\n            break;\n          }\n        }\n\n        if (found === false) {\n          const newItem = {\n            text: this.state.data.text,\n            id: Date.now()\n          };\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              skills: prevState.data.skills.concat(newItem),\n              text: \"\",\n              warning: null\n            })\n          }));\n        } else {\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              warning: \"Already added\"\n            })\n          }));\n        }\n      }\n    };\n\n    this.OnDeleteHandler = itemid => {\n      console.log(itemid);\n      let skills = [...this.state.data.skills];\n      let idx = skills.indexOf(itemid);\n      skills.splice(idx, 1);\n      this.setState(prevState => ({\n        data: _objectSpread({}, prevState.data, {\n          skills: [...skills]\n        })\n      }));\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let errors = validate(this.state.data, {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        skills: {\n          presence: {\n            allowEmpty: false,\n            message: \"are required\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        let data = {\n          title: this.state.data.title,\n          skills: this.state.data.skills.map(skill => {\n            return skill.text;\n          })\n        };\n        createQuiz(this.props.token, data).then(data => {\n          console.log(data.quiz);\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              redirect: true\n            })\n          }));\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      console.log(errors);\n    };\n\n    this.state = {\n      data: {\n        title: \"\",\n        skills: [],\n        text: \"\",\n        warning: null,\n        redirect: false,\n        quizid: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.data.redirect) {\n      redirect = React.createElement(Redirect, {\n        to: \"/quiz/\" + this.state.data.quizid + \"/edit-quiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, redirect, React.createElement(ContentForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      onAdd: this.onAddHandler,\n      onDelete: this.OnDeleteHandler,\n      handleClose: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(CreateQuiz);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/CreateQuiz/index.jsx"],"names":["React","Component","ContentForm","validate","Redirect","createQuiz","connect","CreateQuiz","constructor","props","onChangeHandler","e","target","name","value","setState","prevState","data","errors","onAddHandler","preventDefault","console","log","state","skills","text","found","i","length","newItem","id","Date","now","concat","warning","OnDeleteHandler","itemid","idx","indexOf","splice","onSubmitHandler","title","presence","allowEmpty","message","map","skill","token","then","quiz","redirect","catch","error","quizid","render","open","handleClose","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { createQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nclass CreateQuiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\ttitle: \"\",\n\t\t\t\tskills: [],\n\t\t\t\ttext: \"\",\n\t\t\t\twarning: null,\n\t\t\t\tredirect: false,\n\t\t\t\tquizid: \"\"\n\t\t\t},\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\t[name]: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t[name]: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonAddHandler = e => {\n\t\te.preventDefault();\n\t\tconsole.log(\"hey am add handler\");\n\t\tconsole.log(this.state.data.skills);\n\n\t\t// check for repitition\n\t\tif (this.state.data.text) {\n\t\t\tvar found = false;\n\t\t\tfor (var i = 0; i < this.state.data.skills.length; i++) {\n\t\t\t\tif (this.state.data.skills[i].text === this.state.data.text) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (found === false) {\n\t\t\t\tconst newItem = {\n\t\t\t\t\ttext: this.state.data.text,\n\t\t\t\t\tid: Date.now()\n\t\t\t\t};\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\tskills: prevState.data.skills.concat(newItem),\n\t\t\t\t\t\ttext: \"\",\n\t\t\t\t\t\twarning: null\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\twarning: \"Already added\"\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t};\n\n\tOnDeleteHandler = itemid => {\n\t\tconsole.log(itemid);\n\t\tlet skills = [...this.state.data.skills];\n\t\tlet idx = skills.indexOf(itemid);\n\t\tskills.splice(idx, 1);\n\t\tthis.setState(prevState => ({\n\t\t\tdata: {\n\t\t\t\t...prevState.data,\n\t\t\t\tskills: [...skills]\n\t\t\t}\n\t\t}));\n\t};\n\n\tonSubmitHandler = () => {\n\t\tconsole.log(\"submission handler\");\n\t\t//validation\n\t\tlet errors = validate(this.state.data, {\n\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\tskills: { presence: { allowEmpty: false, message: \"are required\" } }\n\t\t});\n\n\t\t// check for errors\n\t\tif (errors) {\n\t\t\tthis.setState({ errors });\n\t\t} else {\n\t\t\tlet data = {\n\t\t\t\ttitle: this.state.data.title,\n\t\t\t\tskills: this.state.data.skills.map(skill => {\n\t\t\t\t\treturn skill.text;\n\t\t\t\t})\n\t\t\t};\n\t\t\tcreateQuiz(this.props.token, data)\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log(data.quiz);\n\t\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\t\tredirect: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(errors);\n\t};\n\n\trender() {\n\t\tlet redirect = null;\n\t\tif (this.state.data.redirect) {\n\t\t\tredirect = (\n\t\t\t\t<Redirect to={\"/quiz/\" + this.state.data.quizid + \"/edit-quiz\"} />\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{redirect}\n\t\t\t\t<ContentForm\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\t\terrors={this.state.errors}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tonAdd={this.onAddHandler}\n\t\t\t\t\tonDelete={this.OnDeleteHandler}\n\t\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(mapStateToProps)(CreateQuiz);\n"]},"metadata":{},"sourceType":"module"}