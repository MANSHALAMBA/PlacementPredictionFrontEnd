{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/QuizList/components/Box.js\";\nimport React from \"react\";\nimport ReactCSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\";\nimport { inputValue } from \"../actions/grid\";\nconst pallet = {\n  \"0\": \"#90CAF9\",\n  // Box 1\n  \"30\": \"#1DE9B6\",\n  // Box 2\n  \"60\": \"#FFAB91\",\n  // Box 3\n  \"3\": \"#D1C4E9\",\n  // Box 4\n  \"33\": \"#FFF59D\",\n  // Box 5\n  \"63\": \"#A5D6A7\",\n  // Box 6\n  \"6\": \"#80CBC4\",\n  // Box 7\n  \"36\": \"#F48FB1\",\n  // Box 8\n  \"66\": \"#81D4FA\" // Box 9\n\n};\n\nconst getBoxColor = (row, col) => {\n  let rowGroup = row - row % 3; // uppermost row index of the box\n\n  let colGroup = (col - col % 3) * 10; // leftmost col index of the box * 10\n\n  /*\n  r\\c| 0   30   60\n  ----------------\n   0 | 0   30   60\n   3 | 3   33   63\n   6 | 5   36   66\n  */\n\n  return pallet[rowGroup + colGroup];\n};\n/* Box Component */\n\n\nconst Box = React.createClass({\n  displayName: \"Box\",\n\n  componentWillMount() {\n    const val = this.props.val;\n    this.setState({\n      isFixed: val ? true : false\n    });\n  },\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.val !== this.props.val;\n  },\n\n  handleChange(e) {\n    const _this$props = this.props,\n          row = _this$props.row,\n          col = _this$props.col,\n          store = _this$props.store;\n    const range = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const val = parseInt(e.target.value);\n    const isDeleted = e.target.value === \"\";\n\n    if (range.indexOf(val) > -1 || isDeleted) {\n      store.dispatch(inputValue(row, col, isDeleted ? 0 : val));\n    }\n  },\n\n  render() {\n    const _this$props2 = this.props,\n          row = _this$props2.row,\n          col = _this$props2.col,\n          val = _this$props2.val,\n          isSolved = _this$props2.isSolved;\n    const isFixed = this.state.isFixed;\n    const input = React.createElement(\"input\", {\n      ref: \"input\",\n      style: {\n        backgroundColor: getBoxColor(row, col)\n      },\n      className: isFixed ? \"fixed\" : isSolved ? \"result\" : \"\",\n      disabled: isFixed || isSolved,\n      value: val ? val : \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n    return React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, isSolved ? React.createElement(ReactCSSTransitionGroup, {\n      transitionName: \"solved\",\n      transitionAppear: true,\n      transitionEnterTimeout: 200,\n      transitionLeaveTimeout: 200,\n      transitionAppearTimeout: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, input) : input);\n  }\n\n});\nexport default Box;","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/QuizList/components/Box.js"],"names":["React","ReactCSSTransitionGroup","inputValue","pallet","getBoxColor","row","col","rowGroup","colGroup","Box","createClass","componentWillMount","val","props","setState","isFixed","shouldComponentUpdate","nextProps","nextState","handleChange","e","store","range","parseInt","target","value","isDeleted","indexOf","dispatch","render","isSolved","state","input","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\";\nimport { inputValue } from \"../actions/grid\";\n\nconst pallet = {\n  \"0\": \"#90CAF9\", // Box 1\n  \"30\": \"#1DE9B6\", // Box 2\n  \"60\": \"#FFAB91\", // Box 3\n  \"3\": \"#D1C4E9\", // Box 4\n  \"33\": \"#FFF59D\", // Box 5\n  \"63\": \"#A5D6A7\", // Box 6\n  \"6\": \"#80CBC4\", // Box 7\n  \"36\": \"#F48FB1\", // Box 8\n  \"66\": \"#81D4FA\" // Box 9\n};\n\nconst getBoxColor = (row, col) => {\n  let rowGroup = row - (row % 3); // uppermost row index of the box\n  let colGroup = (col - (col % 3)) * 10; // leftmost col index of the box * 10\n  /*\n\t\tr\\c| 0   30   60\n\t\t----------------\n\t\t 0 | 0   30   60\n\t\t 3 | 3   33   63\n\t\t 6 | 5   36   66\n\t*/\n\n  return pallet[rowGroup + colGroup];\n};\n\n/* Box Component */\n\nconst Box = React.createClass({\n  componentWillMount() {\n    const { val } = this.props;\n    this.setState({ isFixed: val ? true : false });\n  },\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.val !== this.props.val;\n  },\n  handleChange(e) {\n    const { row, col, store } = this.props;\n    const range = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const val = parseInt(e.target.value);\n    const isDeleted = e.target.value === \"\";\n\n    if (range.indexOf(val) > -1 || isDeleted) {\n      store.dispatch(inputValue(row, col, isDeleted ? 0 : val));\n    }\n  },\n  render() {\n    const { row, col, val, isSolved } = this.props;\n    const { isFixed } = this.state;\n    const input = (\n      <input\n        ref=\"input\"\n        style={{ backgroundColor: getBoxColor(row, col) }}\n        className={isFixed ? \"fixed\" : isSolved ? \"result\" : \"\"}\n        disabled={isFixed || isSolved}\n        value={val ? val : \"\"}\n        onChange={this.handleChange}\n      />\n    );\n\n    return (\n      <td>\n        {isSolved ? (\n          <ReactCSSTransitionGroup\n            transitionName=\"solved\"\n            transitionAppear={true}\n            transitionEnterTimeout={200}\n            transitionLeaveTimeout={200}\n            transitionAppearTimeout={200}\n          >\n            {input}\n          </ReactCSSTransitionGroup>\n        ) : (\n          input\n        )}\n      </td>\n    );\n  }\n});\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}