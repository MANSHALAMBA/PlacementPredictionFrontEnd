{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/EditEndDate/index.jsx\";\nimport React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { createQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { Quiz } from \"serializers/quiz\";\nimport swal from \"sweetalert\";\n\nclass EditEndDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: {\n            enddate: value\n          },\n          errors: {\n            enddate: null\n          }\n        };\n      });\n    };\n\n    this.onAddHandler = e => {\n      e.preventDefault(); // check for repitition\n\n      if (this.state.data.text) {\n        var found = false;\n\n        for (var i = 0; i < this.state.data.skills.length; i++) {\n          if (this.state.data.skills[i].text === this.state.data.text) {\n            found = true;\n            break;\n          }\n        }\n\n        if (found === false) {\n          const newItem = {\n            text: this.state.data.text,\n            id: Date.now()\n          };\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              skills: prevState.data.skills.concat(newItem),\n              text: \"\",\n              warning: null\n            })\n          }));\n        } else {\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              warning: \"Already added\"\n            })\n          }));\n        }\n      }\n    };\n\n    this.OnDeleteHandler = itemid => {\n      let skills = [...this.state.data.skills];\n      let idx = skills.indexOf(itemid);\n      skills.splice(idx, 1);\n      this.setState(prevState => ({\n        data: _objectSpread({}, prevState.data, {\n          skills: [...skills]\n        })\n      }));\n    };\n\n    this.onSubmitHandler = () => {\n      //validation\n      let errors = validate(this.state.data, {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        skills: {\n          presence: {\n            allowEmpty: false,\n            message: \"are required\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        let data = {\n          title: this.state.data.title,\n          skills: this.state.data.skills.map(skill => {\n            return skill.text;\n          })\n        };\n        createQuiz(this.props.token, data).then(data => {\n          this.setState(prevState => ({\n            data: _objectSpread({}, prevState.data, {\n              quizid: data.quiz.id,\n              redirect: true\n            })\n          }));\n          this.props.pushNewQuiz(data.quiz);\n        }).catch(error => {\n          swal({\n            title: \"Error\",\n            text: error.response.data.message,\n            button: \"Ok\"\n          });\n          this.setState({\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    this.state = {\n      data: {\n        enddate: \"\"\n      },\n      isLoading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.data.redirect) {\n      redirect = React.createElement(Redirect, {\n        to: \"/quiz/\" + this.state.data.quizid + \"/edit-quiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, redirect, React.createElement(ContentForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      onAdd: this.onAddHandler,\n      onDelete: this.OnDeleteHandler,\n      handleClose: this.props.handleClose,\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    pushNewQuiz: Newquiz => dispatch({\n      type: \"PUSH NEW QUIZ\",\n      newquiz: new Quiz(Newquiz)\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateQuiz);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/QuizList/components/EditEndDate/index.jsx"],"names":["React","Component","ContentForm","validate","Redirect","createQuiz","connect","Quiz","swal","EditEndDate","constructor","props","onChangeHandler","e","target","name","value","setState","prevState","data","enddate","errors","onAddHandler","preventDefault","state","text","found","i","skills","length","newItem","id","Date","now","concat","warning","OnDeleteHandler","itemid","idx","indexOf","splice","onSubmitHandler","title","presence","allowEmpty","message","isLoading","map","skill","token","then","quizid","quiz","redirect","pushNewQuiz","catch","error","response","button","render","open","handleClose","mapStateToProps","auth","mapDispatchToProps","dispatch","Newquiz","type","newquiz","CreateQuiz"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { createQuiz } from \"api/quizzes\";\nimport { connect } from \"react-redux\";\nimport { Quiz } from \"serializers/quiz\";\nimport swal from \"sweetalert\";\nclass EditEndDate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tenddate: \"\"\n\t\t\t},\n\t\t\tisLoading: false,\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\tenddate: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\tenddate: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonAddHandler = e => {\n\t\te.preventDefault();\n\n\t\t// check for repitition\n\t\tif (this.state.data.text) {\n\t\t\tvar found = false;\n\t\t\tfor (var i = 0; i < this.state.data.skills.length; i++) {\n\t\t\t\tif (this.state.data.skills[i].text === this.state.data.text) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (found === false) {\n\t\t\t\tconst newItem = {\n\t\t\t\t\ttext: this.state.data.text,\n\t\t\t\t\tid: Date.now()\n\t\t\t\t};\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\tskills: prevState.data.skills.concat(newItem),\n\t\t\t\t\t\ttext: \"\",\n\t\t\t\t\t\twarning: null\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\twarning: \"Already added\"\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t};\n\n\tOnDeleteHandler = itemid => {\n\t\tlet skills = [...this.state.data.skills];\n\t\tlet idx = skills.indexOf(itemid);\n\t\tskills.splice(idx, 1);\n\t\tthis.setState(prevState => ({\n\t\t\tdata: {\n\t\t\t\t...prevState.data,\n\t\t\t\tskills: [...skills]\n\t\t\t}\n\t\t}));\n\t};\n\n\tonSubmitHandler = () => {\n\t\t//validation\n\t\tlet errors = validate(this.state.data, {\n\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\tskills: { presence: { allowEmpty: false, message: \"are required\" } }\n\t\t});\n\n\t\t// check for errors\n\t\tif (errors) {\n\t\t\tthis.setState({ errors });\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true\n\t\t\t});\n\t\t\tlet data = {\n\t\t\t\ttitle: this.state.data.title,\n\t\t\t\tskills: this.state.data.skills.map(skill => {\n\t\t\t\t\treturn skill.text;\n\t\t\t\t})\n\t\t\t};\n\t\t\tcreateQuiz(this.props.token, data)\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t...prevState.data,\n\t\t\t\t\t\t\tquizid: data.quiz.id,\n\t\t\t\t\t\t\tredirect: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tthis.props.pushNewQuiz(data.quiz);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tlet redirect = null;\n\t\tif (this.state.data.redirect) {\n\t\t\tredirect = (\n\t\t\t\t<Redirect to={\"/quiz/\" + this.state.data.quizid + \"/edit-quiz\"} />\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{redirect}\n\t\t\t\t<ContentForm\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\t\terrors={this.state.errors}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tonAdd={this.onAddHandler}\n\t\t\t\t\tonDelete={this.OnDeleteHandler}\n\t\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tpushNewQuiz: Newquiz =>\n\t\t\tdispatch({\n\t\t\t\ttype: \"PUSH NEW QUIZ\",\n\t\t\t\tnewquiz: new Quiz(Newquiz)\n\t\t\t})\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(CreateQuiz);\n"]},"metadata":{},"sourceType":"module"}