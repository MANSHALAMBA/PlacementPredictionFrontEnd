{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/StudyMaterialList/components/SendContent/index.jsx\";\nimport React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport { sendContent, loadStudentGroups, loadLectures, editContent } from \"api/contents\";\nimport { StudentGroup, Lecture } from \"serializers/content\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\n\nclass SendContent extends Component {\n  constructor(_props) {\n    super(_props);\n    this.types = [\"article\", \"video\", \"research_paper\", \"assignment\"];\n\n    this.getInitialState = props => {\n      if (props.openMode === \"Edit\") {\n        return {\n          data: _objectSpread({\n            title: \"\",\n            description: \"\",\n            url: \"\",\n            type: \"\",\n            receipents: [],\n            file: null\n          }, props.data),\n          receipents: [],\n          isLoading: false,\n          errors: {}\n        };\n      } else {\n        // default mode is assumed to be Send\n        return {\n          data: {\n            title: \"\",\n            description: \"\",\n            url: \"\",\n            type: \"\",\n            receipents: [],\n            file: null\n          },\n          receipents: [],\n          errors: {}\n        };\n      }\n    };\n\n    this.loadreceipents = () => {\n      loadStudentGroups(this.props.token).then(data => {\n        let studentgroups = data.groups.map(group => {\n          return new StudentGroup(group);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...studentgroups]\n          };\n        });\n      }).catch(error => {\n        swal({\n          title: \"Internal Server Error\",\n          text: \"Please Try Refreshing Page\",\n          button: \"Ok\"\n        });\n      });\n      loadLectures(this.props.token).then(data => {\n        let lectures = data.lectures.map(lecture => {\n          return new Lecture(lecture);\n        });\n        this.setState(prevState => {\n          return {\n            receipents: [...prevState.receipents, ...lectures]\n          };\n        });\n      }).catch(error => {\n        swal({\n          title: \"Internal Server Error\",\n          text: \"Please Try Refreshing Page\",\n          button: \"Ok\"\n        });\n      });\n    };\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: null\n          })\n        };\n      });\n    };\n\n    this.onfileChangeHandler = event => {\n      let file = event.target.files[0];\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            file: file\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            file: null,\n            filesizeError: null\n          })\n        };\n      });\n    };\n\n    this.onSelectChangeHandler = e => {\n      let receipents = [...e.target.value];\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            receipents: receipents\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            receipents: null\n          })\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      //validation\n      let validationObj = this.props.openMode == \"Send\" ? {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        url: {\n          url: true\n        },\n        type: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        receipents: {\n          presence: {\n            allowEmpty: false,\n            message: \"are required\"\n          }\n        },\n        file: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      } : {\n        title: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        description: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        },\n        url: {\n          url: true\n        },\n        type: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          } // file: {\n          // \tpresence: { allowEmpty: false, message: \"is required\" }\n          // }\n\n        }\n      };\n      let errors = validate(this.state.data, validationObj);\n      let filesizeErr = \"\";\n\n      if (this.state.data.file) {\n        filesizeErr = this.state.data.file.size > 2 * 1024 * 1024 ? \"File is too large\" : null;\n      }\n\n      if (filesizeErr && errors) {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, errors, {\n              filesizeError: filesizeErr\n            })\n          };\n        });\n      } else if (errors) {\n        this.setState({\n          errors\n        });\n      } else if (filesizeErr) {\n        this.setState(prevState => {\n          return {\n            data: _objectSpread({}, prevState.data),\n            errors: _objectSpread({}, prevState.errors, {\n              filesizeError: filesizeErr\n            })\n          };\n        });\n      } else {\n        if (this.props.openMode == \"Send\") {\n          this.sendContent();\n        } else {\n          this.editContent(this.state.data.id);\n        }\n      }\n    };\n\n    this.sendContent = () => {\n      //button dissble\n      //close button disable\n      this.setState({\n        isLoading: true\n      });\n      let sendTO = this.state.data.receipents.map(receipent => {\n        let obj = JSON.parse(receipent);\n        return {\n          type: obj.type,\n          id: obj.id\n        };\n      });\n      var form = new FormData();\n      form.append(\"title\", this.state.data.title);\n      form.append(\"description\", this.state.data.description);\n      form.append(\"type\", this.state.data.type);\n      form.append(\"url\", this.state.data.url);\n      form.append(\"file\", this.state.data.file);\n      form.append(\"sendTo\", JSON.stringify(sendTO));\n      sendContent(this.props.token, form).then(response => {\n        swal({\n          title: \"Success\",\n          text: \"Content\" + \" has been sent successfully\",\n          button: \"Ok\"\n        });\n        this.props.handleClose();\n        this.props.AddContentTableData(response.task);\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: error.response.data.message,\n          button: \"Ok\"\n        });\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.editContent = contentID => {\n      var form = new FormData();\n      form.append(\"title\", this.state.data.title);\n      form.append(\"description\", this.state.data.description);\n      form.append(\"type\", this.state.data.type);\n      form.append(\"url\", this.state.data.url);\n      form.append(\"file\", this.state.data.file);\n      editContent(this.props.token, form, contentID).then(response => {\n        swal({\n          title: \"Success\",\n          text: \"Content\" + \" has been edited successfully\",\n          button: \"Ok\"\n        });\n        this.props.handleClose();\n        this.props.updateContentTableData(response.task);\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: error.response.data.message,\n          button: \"Ok\"\n        });\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = this.getInitialState(_props);\n  }\n\n  componentDidMount() {\n    this.loadreceipents();\n  }\n\n  render() {\n    return React.createElement(ContentForm, {\n      open: this.props.open,\n      onChangeHandler: this.onChangeHandler,\n      onfileChangeHandler: this.onfileChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      data: this.state.data,\n      receipents: this.state.receipents,\n      types: this.types,\n      handleClose: this.props.handleClose,\n      onSelectChangeHandler: this.onSelectChangeHandler,\n      openMode: this.props.openMode,\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    });\n  }\n\n}\n\nSendContent.defaultProps = {\n  openMode: \"Send\"\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps, null)(SendContent);","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/StudyMaterialList/components/SendContent/index.jsx"],"names":["React","Component","ContentForm","validate","sendContent","loadStudentGroups","loadLectures","editContent","StudentGroup","Lecture","connect","swal","SendContent","constructor","props","types","getInitialState","openMode","data","title","description","url","type","receipents","file","isLoading","errors","loadreceipents","token","then","studentgroups","groups","map","group","setState","prevState","catch","error","text","button","lectures","lecture","onChangeHandler","e","target","name","value","onfileChangeHandler","event","files","filesizeError","onSelectChangeHandler","onSubmitHandler","validationObj","presence","allowEmpty","message","state","filesizeErr","size","id","sendTO","receipent","obj","JSON","parse","form","FormData","append","stringify","response","handleClose","AddContentTableData","task","contentID","updateContentTableData","componentDidMount","render","open","defaultProps","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ContentForm from \"./Form\";\nimport validate from \"validate.js\";\nimport {\n\tsendContent,\n\tloadStudentGroups,\n\tloadLectures,\n\teditContent\n} from \"api/contents\";\nimport { StudentGroup, Lecture } from \"serializers/content\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\n\nclass SendContent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState(props);\n\t}\n\n\ttypes = [\"article\", \"video\", \"research_paper\", \"assignment\"];\n\n\tstatic defaultProps = {\n\t\topenMode: \"Send\"\n\t};\n\n\tgetInitialState = props => {\n\t\tif (props.openMode === \"Edit\") {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\turl: \"\",\n\t\t\t\t\ttype: \"\",\n\t\t\t\t\treceipents: [],\n\t\t\t\t\tfile: null,\n\t\t\t\t\t...props.data\n\t\t\t\t},\n\t\t\t\treceipents: [],\n\t\t\t\tisLoading: false,\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t} else {\n\t\t\t// default mode is assumed to be Send\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\tdescription: \"\",\n\t\t\t\t\turl: \"\",\n\t\t\t\t\ttype: \"\",\n\t\t\t\t\treceipents: [],\n\t\t\t\t\tfile: null\n\t\t\t\t},\n\t\t\t\treceipents: [],\n\t\t\t\terrors: {}\n\t\t\t};\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.loadreceipents();\n\t}\n\n\tloadreceipents = () => {\n\t\tloadStudentGroups(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet studentgroups = data.groups.map(group => {\n\t\t\t\t\treturn new StudentGroup(group);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...studentgroups]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Internal Server Error\",\n\t\t\t\t\ttext: \"Please Try Refreshing Page\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t});\n\n\t\tloadLectures(this.props.token)\n\t\t\t.then(data => {\n\t\t\t\tlet lectures = data.lectures.map(lecture => {\n\t\t\t\t\treturn new Lecture(lecture);\n\t\t\t\t});\n\n\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treceipents: [...prevState.receipents, ...lectures]\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Internal Server Error\",\n\t\t\t\t\ttext: \"Please Try Refreshing Page\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tonChangeHandler = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\t[name]: value\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t[name]: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\tonfileChangeHandler = event => {\n\t\tlet file = event.target.files[0];\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, file: file },\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\tfile: null,\n\t\t\t\t\tfilesizeError: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSelectChangeHandler = e => {\n\t\tlet receipents = [...e.target.value];\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: {\n\t\t\t\t\t...prevState.data,\n\t\t\t\t\treceipents: receipents\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\t...prevState.errors,\n\t\t\t\t\treceipents: null\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tonSubmitHandler = () => {\n\t\t//validation\n\t\tlet validationObj =\n\t\t\tthis.props.openMode == \"Send\"\n\t\t\t\t? {\n\t\t\t\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: { url: true },\n\t\t\t\t\t\ttype: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\treceipents: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"are required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\ttitle: { presence: { allowEmpty: false, message: \"is required\" } },\n\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: { url: true },\n\t\t\t\t\t\ttype: { presence: { allowEmpty: false, message: \"is required\" } }\n\n\t\t\t\t\t\t// file: {\n\t\t\t\t\t\t// \tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t\t\t\t// }\n\t\t\t\t  };\n\t\tlet errors = validate(this.state.data, validationObj);\n\t\tlet filesizeErr = \"\";\n\t\tif (this.state.data.file) {\n\t\t\tfilesizeErr =\n\t\t\t\tthis.state.data.file.size > 2 * 1024 * 1024\n\t\t\t\t\t? \"File is too large\"\n\t\t\t\t\t: null;\n\t\t}\n\t\tif (filesizeErr && errors) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\t\t\t\t\t\t...errors,\n\t\t\t\t\t\tfilesizeError: filesizeErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else if (errors) {\n\t\t\tthis.setState({ errors });\n\t\t} else if (filesizeErr) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...prevState.data\n\t\t\t\t\t},\n\n\t\t\t\t\terrors: {\n\t\t\t\t\t\t...prevState.errors,\n\n\t\t\t\t\t\tfilesizeError: filesizeErr\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\tif (this.props.openMode == \"Send\") {\n\t\t\t\tthis.sendContent();\n\t\t\t} else {\n\t\t\t\tthis.editContent(this.state.data.id);\n\t\t\t}\n\t\t}\n\t};\n\n\tsendContent = () => {\n\t\t//button dissble\n\t\t//close button disable\n\t\tthis.setState({\n\t\t\tisLoading: true\n\t\t});\n\t\tlet sendTO = this.state.data.receipents.map(receipent => {\n\t\t\tlet obj = JSON.parse(receipent);\n\n\t\t\treturn {\n\t\t\t\ttype: obj.type,\n\t\t\t\tid: obj.id\n\t\t\t};\n\t\t});\n\n\t\tvar form = new FormData();\n\n\t\tform.append(\"title\", this.state.data.title);\n\t\tform.append(\"description\", this.state.data.description);\n\t\tform.append(\"type\", this.state.data.type);\n\t\tform.append(\"url\", this.state.data.url);\n\t\tform.append(\"file\", this.state.data.file);\n\t\tform.append(\"sendTo\", JSON.stringify(sendTO));\n\n\t\tsendContent(this.props.token, form)\n\t\t\t.then(response => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext: \"Content\" + \" has been sent successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.props.handleClose();\n\t\t\t\tthis.props.AddContentTableData(response.task);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\teditContent = contentID => {\n\t\tvar form = new FormData();\n\n\t\tform.append(\"title\", this.state.data.title);\n\t\tform.append(\"description\", this.state.data.description);\n\t\tform.append(\"type\", this.state.data.type);\n\t\tform.append(\"url\", this.state.data.url);\n\t\tform.append(\"file\", this.state.data.file);\n\n\t\teditContent(this.props.token, form, contentID)\n\t\t\t.then(response => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Success\",\n\t\t\t\t\ttext: \"Content\" + \" has been edited successfully\",\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.props.handleClose();\n\t\t\t\tthis.props.updateContentTableData(response.task);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: \"Error\",\n\t\t\t\t\ttext: error.response.data.message,\n\n\t\t\t\t\tbutton: \"Ok\"\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<ContentForm\n\t\t\t\topen={this.props.open}\n\t\t\t\tonChangeHandler={this.onChangeHandler}\n\t\t\t\tonfileChangeHandler={this.onfileChangeHandler}\n\t\t\t\tonSubmit={this.onSubmitHandler}\n\t\t\t\terrors={this.state.errors}\n\t\t\t\tdata={this.state.data}\n\t\t\t\treceipents={this.state.receipents}\n\t\t\t\ttypes={this.types}\n\t\t\t\thandleClose={this.props.handleClose}\n\t\t\t\tonSelectChangeHandler={this.onSelectChangeHandler}\n\t\t\t\topenMode={this.props.openMode}\n\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tnull\n)(SendContent);\n"]},"metadata":{},"sourceType":"module"}