{"ast":null,"code":"import _toArray from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, id) => {\n      // console.log(e.target.value);\n      // console.log(id);\n      let _this$state$questions = _toArray(this.state.questions),\n          questions = _this$state$questions.slice(0); //console.log(questions);\n\n\n      questions = questions.map(ques => {\n        if (ques.id == id) {\n          // update isCorrect\n          ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n        }\n\n        return ques;\n      });\n      this.setState(questions);\n    };\n\n    this.state = {\n      questions: [{\n        id: \"1\",\n        question: \"Time taken for addition of element in queue is ?\",\n        options: [\"O(1)\", \"O(n)\", \"O(log n)\", \"None of these\"],\n        correct: \"O(1)\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"2\",\n        question: \"The data structure required for Breadth First Traversal on a graph is ?\",\n        options: [\"queue\", \"stack\", \"array\", \"tree\"],\n        correct: \"queue\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"3\",\n        question: \"Which oe of the following statements about the function Process Array is CORRECT?\",\n        options: [\"It will run into an infinite loop when x is not in listA\", \"It is an implementation of binary search.\", \"It will always find the maximum element in listA.\", \"It will return -1 even when x is present in listA.\"],\n        correct: \"It will run into an infinite loop when x is not in listA\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"4\",\n        question: \"Assuming P != NP, which of the following is true ?\",\n        options: [\"NP-complete = NP\", \"NP-complete cap P = Phi\", \"NP-hard = NP\", \"P = NP-complete\"],\n        correct: \"NP-complete cap P = Phi\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"5\",\n        question: \"Let X be a problem that belongs to the class NP. Then which one of the following is TRUE?\",\n        options: [\"There is no polynomial time algorithm for X.\", \"If X can be solved deterministically in polynomial time, then P = NP\", \"If X is NP-hard, then it is NP-complete.\", \"X may be undecidable.\"],\n        correct: \"If X is NP-hard, then it is NP-complete.\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"6\",\n        question: \"Which module gives control of the CPU to the process selected by the short-term scheduler?\",\n        options: [\"dispatcher\", \"interrupt\", \"scheduler\", \"none of the mentioned\"],\n        correct: \"dispatcher\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"7\",\n        question: \"The processes that are residing in main memory and are ready and waiting to execute are kept on a list called ?\",\n        options: [\"job queue\", \"ready queue\", \"execution queue\", \"process queue\"],\n        correct: \"job queue\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"8\",\n        question: \"The request and release of resources are ___________ ?\",\n        options: [\"command line statements\", \"interrupts\", \" system calls\", \"special programs\"],\n        correct: \"interrupts\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"9\",\n        question: \" An un-interruptible unit is known as \",\n        options: [\"single\", \"atomic\", \"static\", \"none of the mentioned\"],\n        correct: \"atomic\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"10\",\n        question: \" The packet of information at the application layer is called __________?\",\n        options: [\" Packet\", \"Message\", \"segment\", \"frame\"],\n        correct: \"Message\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"11\",\n        question: \" Application layer offers _______ service. ?\",\n        options: [\"End to end\", \"Process to process\", \"Both End to end and Process to process\", \"None of the mentioned\"],\n        correct: \"End to end\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"12\",\n        question: \"For each attribute of a relation, there is a set of permitted values, called the ________ of that attribute.?\",\n        options: [\"Domain\", \"Relation\", \"Set\", \"Schema\"],\n        correct: \"Domain\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"13\",\n        question: \"Database __________ which is the logical design of the database, and the database _______ which is a snapshot of the data in the database at a given instant in time.?\",\n        options: [\"Instance, Schema\", \"Relation, Schema\", \" Relation, Domain\", \"Schema, Instance\"],\n        correct: \"Schema, Instance\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"14\",\n        question: \"A domain is atomic if elements of the domain are considered to be ____________ units.?\",\n        options: [\"Different\", \"Indivisbile\", \"Constant\", \"Divisible\"],\n        correct: \"Indivisbile\",\n        isCorrect: \"NA\"\n      }]\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Core Subjects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, this.state.questions.map(ques => {\n      let idx = ques.id;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, ques.question), React.createElement(RadioGroup, {\n        onChange: e => this.handleChange(e, ques.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, ques.options.map(option => {\n        return React.createElement(FormControlLabel, {\n          value: option,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }),\n          label: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        });\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, ques.isCorrect == \"Right\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        color: \"secondary\",\n        fontSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), ques.isCorrect == \"Wrong\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        color: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })));\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Evaluate My Result\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    ur: state.dashboard.ur,\n    cgpa: state.dashboard.cgpa\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CoreSubjects));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","APTITUDE","style","styles","withStyles","Typography","Radio","RadioGroup","FormControlLabel","Grid","CheckIcon","ClearIcon","connect","Button","CoreSubjects","constructor","props","handleChange","e","id","state","questions","map","ques","isCorrect","target","value","correct","setState","question","options","render","classes","root","idx","option","mapStateToProps","token","auth","ur","dashboard","cgpa"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: [\n        {\n          id: \"1\",\n          question: \"Time taken for addition of element in queue is ?\",\n          options: [\"O(1)\", \"O(n)\", \"O(log n)\", \"None of these\"],\n          correct: \"O(1)\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"2\",\n          question:\n            \"The data structure required for Breadth First Traversal on a graph is ?\",\n          options: [\"queue\", \"stack\", \"array\", \"tree\"],\n          correct: \"queue\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"3\",\n          question:\n            \"Which oe of the following statements about the function Process Array is CORRECT?\",\n          options: [\n            \"It will run into an infinite loop when x is not in listA\",\n            \"It is an implementation of binary search.\",\n            \"It will always find the maximum element in listA.\",\n            \"It will return -1 even when x is present in listA.\"\n          ],\n          correct: \"It will run into an infinite loop when x is not in listA\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"4\",\n          question: \"Assuming P != NP, which of the following is true ?\",\n          options: [\n            \"NP-complete = NP\",\n            \"NP-complete cap P = Phi\",\n            \"NP-hard = NP\",\n            \"P = NP-complete\"\n          ],\n          correct: \"NP-complete cap P = Phi\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"5\",\n          question:\n            \"Let X be a problem that belongs to the class NP. Then which one of the following is TRUE?\",\n          options: [\n            \"There is no polynomial time algorithm for X.\",\n            \"If X can be solved deterministically in polynomial time, then P = NP\",\n            \"If X is NP-hard, then it is NP-complete.\",\n            \"X may be undecidable.\"\n          ],\n          correct: \"If X is NP-hard, then it is NP-complete.\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"6\",\n          question:\n            \"Which module gives control of the CPU to the process selected by the short-term scheduler?\",\n          options: [\n            \"dispatcher\",\n            \"interrupt\",\n            \"scheduler\",\n            \"none of the mentioned\"\n          ],\n          correct: \"dispatcher\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"7\",\n          question:\n            \"The processes that are residing in main memory and are ready and waiting to execute are kept on a list called ?\",\n          options: [\n            \"job queue\",\n            \"ready queue\",\n            \"execution queue\",\n            \"process queue\"\n          ],\n          correct: \"job queue\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"8\",\n          question: \"The request and release of resources are ___________ ?\",\n          options: [\n            \"command line statements\",\n            \"interrupts\",\n            \" system calls\",\n            \"special programs\"\n          ],\n          correct: \"interrupts\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"9\",\n          question: \" An un-interruptible unit is known as \",\n          options: [\"single\", \"atomic\", \"static\", \"none of the mentioned\"],\n          correct: \"atomic\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"10\",\n          question:\n            \" The packet of information at the application layer is called __________?\",\n          options: [\" Packet\", \"Message\", \"segment\", \"frame\"],\n          correct: \"Message\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"11\",\n          question: \" Application layer offers _______ service. ?\",\n          options: [\n            \"End to end\",\n            \"Process to process\",\n            \"Both End to end and Process to process\",\n            \"None of the mentioned\"\n          ],\n          correct: \"End to end\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"12\",\n          question:\n            \"For each attribute of a relation, there is a set of permitted values, called the ________ of that attribute.?\",\n          options: [\"Domain\", \"Relation\", \"Set\", \"Schema\"],\n          correct: \"Domain\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"13\",\n          question:\n            \"Database __________ which is the logical design of the database, and the database _______ which is a snapshot of the data in the database at a given instant in time.?\",\n          options: [\n            \"Instance, Schema\",\n            \"Relation, Schema\",\n            \" Relation, Domain\",\n            \"Schema, Instance\"\n          ],\n          correct: \"Schema, Instance\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"14\",\n          question:\n            \"A domain is atomic if elements of the domain are considered to be ____________ units.?\",\n          options: [\"Different\", \"Indivisbile\", \"Constant\", \"Divisible\"],\n          correct: \"Indivisbile\",\n          isCorrect: \"NA\"\n        }\n      ]\n    };\n  }\n\n  handleChange = (e, id) => {\n    // console.log(e.target.value);\n    // console.log(id);\n    let [...questions] = this.state.questions;\n    //console.log(questions);\n    questions = questions.map(ques => {\n      if (ques.id == id) {\n        // update isCorrect\n        ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n      }\n      return ques;\n    });\n\n    this.setState(questions);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Core Subjects\">\n        <div className={classes.root}>\n          {this.state.questions.map(ques => {\n            let idx = ques.id;\n            return (\n              <Grid container spacing={4}>\n                <Grid item xs={6}>\n                  <div>\n                    <Typography>{ques.question}</Typography>\n\n                    <RadioGroup onChange={e => this.handleChange(e, ques.id)}>\n                      {ques.options.map(option => {\n                        return (\n                          <FormControlLabel\n                            value={option}\n                            control={<Radio />}\n                            label={option}\n                          />\n                        );\n                      })}\n                    </RadioGroup>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  {ques.isCorrect == \"Right\" ? (\n                    <div>\n                      <CheckIcon color=\"secondary\" fontSize=\"large\" />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                  {ques.isCorrect == \"Wrong\" ? (\n                    <div>\n                      <ClearIcon color=\"error\" />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                </Grid>\n              </Grid>\n            );\n          })}\n          <Button variant=\"contained\" color=\"secondary\">\n            Evaluate My Result\n          </Button>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    ur: state.dashboard.ur,\n    cgpa: state.dashboard.cgpa\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CoreSubjects));\n"]},"metadata":{},"sourceType":"module"}