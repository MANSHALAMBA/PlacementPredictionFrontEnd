{"ast":null,"code":"import _toArray from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _objectSpread from \"/home/lambamansha/Desktop/minorproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\"; // styles\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport swal from \"sweetalert\";\nimport { evaluateresult } from \"api/result\";\nimport Dialog from \"./components/dialog\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          open: false,\n          isLoading: true\n        });\n      });\n    };\n\n    this.handleChange = (e, id) => {\n      // console.log(e.target.value);\n      // console.log(id);\n      let _this$state$questions = _toArray(this.state.questions),\n          questions = _this$state$questions.slice(0);\n\n      let score = this.state.score; //console.log(questions);\n\n      questions = questions.map(ques => {\n        if (ques.id == id) {\n          // update isCorrect\n          ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n          score = e.target.value == ques.correct ? score + 1 : score;\n        }\n\n        return ques;\n      });\n      this.setState({\n        questions: questions,\n        score: score\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          open: true\n        });\n      });\n      const data = {\n        aptitude: this.props.aptitudescore,\n        softskills: this.props.aptitudescore / 340 * (2 / 5) * 120,\n        ur: this.props.ur,\n        cgpa: this.props.cgpa,\n        domainknowledge: this.state.score / 14\n      };\n      evaluateresult(this.props.token, data).then(response => {\n        this.setState(prevState => {\n          return _objectSpread({}, prevState, {\n            answer: response.answer,\n            isLoading: false\n          });\n        }); // swal({\n        //   title: \"Success\",\n        //   text:\n        //     response.answer[0] +\n        //     \" \" +\n        //     response.answer[1] +\n        //     \" \" +\n        //     response.answer[2],\n        //   button: \"Ok\"\n        // });\n      }).catch(error => {\n        swal({\n          title: \"Error\",\n          text: \"Please check your input and try again\",\n          button: \"Ok\"\n        });\n      });\n    };\n\n    this.state = {\n      questions: [{\n        id: \"1\",\n        question: \"Time taken for addition of element in queue is ?\",\n        options: [\"O(1)\", \"O(n)\", \"O(log n)\", \"None of these\"],\n        correct: \"O(1)\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"2\",\n        question: \"The data structure required for Breadth First Traversal on a graph is ?\",\n        options: [\"queue\", \"stack\", \"array\", \"tree\"],\n        correct: \"queue\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"3\",\n        question: \"Which oe of the following statements about the function Process Array is CORRECT?\",\n        options: [\"It will run into an infinite loop when x is not in listA\", \"It is an implementation of binary search.\", \"It will always find the maximum element in listA.\", \"It will return -1 even when x is present in listA.\"],\n        correct: \"It will run into an infinite loop when x is not in listA\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"4\",\n        question: \"Assuming P != NP, which of the following is true ?\",\n        options: [\"NP-complete = NP\", \"NP-complete cap P = Phi\", \"NP-hard = NP\", \"P = NP-complete\"],\n        correct: \"NP-complete cap P = Phi\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"5\",\n        question: \"Let X be a problem that belongs to the class NP. Then which one of the following is TRUE?\",\n        options: [\"There is no polynomial time algorithm for X.\", \"If X can be solved deterministically in polynomial time, then P = NP\", \"If X is NP-hard, then it is NP-complete.\", \"X may be undecidable.\"],\n        correct: \"If X is NP-hard, then it is NP-complete.\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"6\",\n        question: \"Which module gives control of the CPU to the process selected by the short-term scheduler?\",\n        options: [\"dispatcher\", \"interrupt\", \"scheduler\", \"none of the mentioned\"],\n        correct: \"dispatcher\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"7\",\n        question: \"The processes that are residing in main memory and are ready and waiting to execute are kept on a list called ?\",\n        options: [\"job queue\", \"ready queue\", \"execution queue\", \"process queue\"],\n        correct: \"job queue\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"8\",\n        question: \"The request and release of resources are ___________ ?\",\n        options: [\"command line statements\", \"interrupts\", \" system calls\", \"special programs\"],\n        correct: \"interrupts\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"9\",\n        question: \" An un-interruptible unit is known as \",\n        options: [\"single\", \"atomic\", \"static\", \"none of the mentioned\"],\n        correct: \"atomic\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"10\",\n        question: \" The packet of information at the application layer is called __________?\",\n        options: [\" Packet\", \"Message\", \"segment\", \"frame\"],\n        correct: \"Message\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"11\",\n        question: \" Application layer offers _______ service. ?\",\n        options: [\"End to end\", \"Process to process\", \"Both End to end and Process to process\", \"None of the mentioned\"],\n        correct: \"End to end\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"12\",\n        question: \"For each attribute of a relation, there is a set of permitted values, called the ________ of that attribute.?\",\n        options: [\"Domain\", \"Relation\", \"Set\", \"Schema\"],\n        correct: \"Domain\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"13\",\n        question: \"Database __________ which is the logical design of the database, and the database _______ which is a snapshot of the data in the database at a given instant in time.?\",\n        options: [\"Instance, Schema\", \"Relation, Schema\", \" Relation, Domain\", \"Schema, Instance\"],\n        correct: \"Schema, Instance\",\n        isCorrect: \"NA\"\n      }, {\n        id: \"14\",\n        question: \"A domain is atomic if elements of the domain are considered to be ____________ units.?\",\n        options: [\"Different\", \"Indivisbile\", \"Constant\", \"Divisible\"],\n        correct: \"Indivisbile\",\n        isCorrect: \"NA\"\n      }],\n      score: 0,\n      open: false,\n      isLoading: true,\n      answer: []\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      mode: APTITUDE,\n      title: \"Core Subjects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, this.state.questions.map(ques => {\n      let idx = ques.id;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, ques.question), React.createElement(RadioGroup, {\n        onChange: e => this.handleChange(e, ques.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, ques.options.map(option => {\n        return React.createElement(FormControlLabel, {\n          value: option,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }),\n          label: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        });\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, ques.isCorrect == \"Right\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(CheckIcon, {\n        color: \"secondary\",\n        className: classes.svg_icons //style={{ transform: scale(1.8) }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), ques.isCorrect == \"Wrong\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        color: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })));\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Evaluate My Result\")), React.createElement(Dialog, {\n      handleClose: this.handleClose,\n      open: this.state.open,\n      isLoading: this.state.isLoading,\n      data: this.state.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    ur: state.dashboard.ur,\n    cgpa: state.dashboard.cgpa,\n    aptitudescore: state.dashboard.aptitudescore\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CoreSubjects));","map":{"version":3,"sources":["/home/lambamansha/Desktop/minorproject/src/views/Coresubjects/index.jsx"],"names":["React","Component","Dashboard","DashboardLayout","APTITUDE","style","styles","withStyles","Typography","Radio","RadioGroup","FormControlLabel","Grid","CheckIcon","ClearIcon","connect","Button","swal","evaluateresult","Dialog","CoreSubjects","constructor","props","handleClose","setState","prevState","open","isLoading","handleChange","e","id","state","questions","score","map","ques","isCorrect","target","value","correct","onSubmit","data","aptitude","aptitudescore","softskills","ur","cgpa","domainknowledge","token","then","response","answer","catch","error","title","text","button","question","options","render","classes","root","idx","option","svg_icons","textAlign","mapStateToProps","auth","dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Dashboard as DashboardLayout } from \"layouts\";\nimport { APTITUDE } from \"../../constants\";\nimport style from \"./style.module.css\";\n// styles\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport swal from \"sweetalert\";\nimport { evaluateresult } from \"api/result\";\nimport Dialog from \"./components/dialog\";\n\nclass CoreSubjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: [\n        {\n          id: \"1\",\n          question: \"Time taken for addition of element in queue is ?\",\n          options: [\"O(1)\", \"O(n)\", \"O(log n)\", \"None of these\"],\n          correct: \"O(1)\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"2\",\n          question:\n            \"The data structure required for Breadth First Traversal on a graph is ?\",\n          options: [\"queue\", \"stack\", \"array\", \"tree\"],\n          correct: \"queue\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"3\",\n          question:\n            \"Which oe of the following statements about the function Process Array is CORRECT?\",\n          options: [\n            \"It will run into an infinite loop when x is not in listA\",\n            \"It is an implementation of binary search.\",\n            \"It will always find the maximum element in listA.\",\n            \"It will return -1 even when x is present in listA.\"\n          ],\n          correct: \"It will run into an infinite loop when x is not in listA\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"4\",\n          question: \"Assuming P != NP, which of the following is true ?\",\n          options: [\n            \"NP-complete = NP\",\n            \"NP-complete cap P = Phi\",\n            \"NP-hard = NP\",\n            \"P = NP-complete\"\n          ],\n          correct: \"NP-complete cap P = Phi\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"5\",\n          question:\n            \"Let X be a problem that belongs to the class NP. Then which one of the following is TRUE?\",\n          options: [\n            \"There is no polynomial time algorithm for X.\",\n            \"If X can be solved deterministically in polynomial time, then P = NP\",\n            \"If X is NP-hard, then it is NP-complete.\",\n            \"X may be undecidable.\"\n          ],\n          correct: \"If X is NP-hard, then it is NP-complete.\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"6\",\n          question:\n            \"Which module gives control of the CPU to the process selected by the short-term scheduler?\",\n          options: [\n            \"dispatcher\",\n            \"interrupt\",\n            \"scheduler\",\n            \"none of the mentioned\"\n          ],\n          correct: \"dispatcher\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"7\",\n          question:\n            \"The processes that are residing in main memory and are ready and waiting to execute are kept on a list called ?\",\n          options: [\n            \"job queue\",\n            \"ready queue\",\n            \"execution queue\",\n            \"process queue\"\n          ],\n          correct: \"job queue\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"8\",\n          question: \"The request and release of resources are ___________ ?\",\n          options: [\n            \"command line statements\",\n            \"interrupts\",\n            \" system calls\",\n            \"special programs\"\n          ],\n          correct: \"interrupts\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"9\",\n          question: \" An un-interruptible unit is known as \",\n          options: [\"single\", \"atomic\", \"static\", \"none of the mentioned\"],\n          correct: \"atomic\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"10\",\n          question:\n            \" The packet of information at the application layer is called __________?\",\n          options: [\" Packet\", \"Message\", \"segment\", \"frame\"],\n          correct: \"Message\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"11\",\n          question: \" Application layer offers _______ service. ?\",\n          options: [\n            \"End to end\",\n            \"Process to process\",\n            \"Both End to end and Process to process\",\n            \"None of the mentioned\"\n          ],\n          correct: \"End to end\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"12\",\n          question:\n            \"For each attribute of a relation, there is a set of permitted values, called the ________ of that attribute.?\",\n          options: [\"Domain\", \"Relation\", \"Set\", \"Schema\"],\n          correct: \"Domain\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"13\",\n          question:\n            \"Database __________ which is the logical design of the database, and the database _______ which is a snapshot of the data in the database at a given instant in time.?\",\n          options: [\n            \"Instance, Schema\",\n            \"Relation, Schema\",\n            \" Relation, Domain\",\n            \"Schema, Instance\"\n          ],\n          correct: \"Schema, Instance\",\n          isCorrect: \"NA\"\n        },\n        {\n          id: \"14\",\n          question:\n            \"A domain is atomic if elements of the domain are considered to be ____________ units.?\",\n          options: [\"Different\", \"Indivisbile\", \"Constant\", \"Divisible\"],\n          correct: \"Indivisbile\",\n          isCorrect: \"NA\"\n        }\n      ],\n      score: 0,\n      open: false,\n      isLoading: true,\n      answer: []\n    };\n  }\n  handleClose = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        open: false,\n        isLoading: true\n      };\n    });\n  };\n\n  handleChange = (e, id) => {\n    // console.log(e.target.value);\n    // console.log(id);\n    let [...questions] = this.state.questions;\n    let score = this.state.score;\n    //console.log(questions);\n    questions = questions.map(ques => {\n      if (ques.id == id) {\n        // update isCorrect\n        ques.isCorrect = e.target.value == ques.correct ? \"Right\" : \"Wrong\";\n        score = e.target.value == ques.correct ? score + 1 : score;\n      }\n      return ques;\n    });\n\n    this.setState({\n      questions: questions,\n      score: score\n    });\n  };\n  onSubmit = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        open: true\n      };\n    });\n\n    const data = {\n      aptitude: this.props.aptitudescore,\n      softskills: (this.props.aptitudescore / 340) * (2 / 5) * 120,\n      ur: this.props.ur,\n      cgpa: this.props.cgpa,\n      domainknowledge: this.state.score / 14\n    };\n    evaluateresult(this.props.token, data)\n      .then(response => {\n        this.setState(prevState => {\n          return {\n            ...prevState,\n\n            answer: response.answer,\n            isLoading: false\n          };\n        });\n\n        // swal({\n        //   title: \"Success\",\n        //   text:\n        //     response.answer[0] +\n        //     \" \" +\n        //     response.answer[1] +\n        //     \" \" +\n        //     response.answer[2],\n\n        //   button: \"Ok\"\n        // });\n      })\n      .catch(error => {\n        swal({\n          title: \"Error\",\n          text: \"Please check your input and try again\",\n\n          button: \"Ok\"\n        });\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <DashboardLayout mode={APTITUDE} title=\"Core Subjects\">\n        <div className={classes.root}>\n          {this.state.questions.map(ques => {\n            let idx = ques.id;\n            return (\n              <Grid container spacing={4}>\n                <Grid item xs={6}>\n                  <div>\n                    <Typography>{ques.question}</Typography>\n\n                    <RadioGroup onChange={e => this.handleChange(e, ques.id)}>\n                      {ques.options.map(option => {\n                        return (\n                          <FormControlLabel\n                            value={option}\n                            control={<Radio />}\n                            label={option}\n                          />\n                        );\n                      })}\n                    </RadioGroup>\n                  </div>\n                </Grid>\n                <Grid item xs={6}>\n                  {ques.isCorrect == \"Right\" ? (\n                    <div>\n                      <CheckIcon\n                        color=\"secondary\"\n                        className={classes.svg_icons}\n                        //style={{ transform: scale(1.8) }}\n                      />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                  {ques.isCorrect == \"Wrong\" ? (\n                    <div>\n                      <ClearIcon color=\"error\" />\n                    </div>\n                  ) : (\n                    <div></div>\n                  )}\n                </Grid>\n              </Grid>\n            );\n          })}\n          <div style={{ textAlign: \"center\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.onSubmit}\n            >\n              Evaluate My Result\n            </Button>\n          </div>\n          <Dialog\n            handleClose={this.handleClose}\n            open={this.state.open}\n            isLoading={this.state.isLoading}\n            data={this.state.answer}\n          />\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    ur: state.dashboard.ur,\n    cgpa: state.dashboard.cgpa,\n    aptitudescore: state.dashboard.aptitudescore\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CoreSubjects));\n"]},"metadata":{},"sourceType":"module"}