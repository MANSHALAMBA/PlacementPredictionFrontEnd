{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\nvalidate.extend(validate.validators.datetime, {\n  // The value is guaranteed not to be null or undefined but otherwise it\n  // could be anything.\n  parse: function (value, options) {\n    return +moment.utc(value);\n  },\n  // Input is a unix timestamp\n  format: function (value, options) {\n    var format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n    return moment.utc(value).format(format);\n  }\n});\n\nclass schedulequiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startdateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            startdate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            startdate: \"\"\n          })\n        };\n      });\n    };\n\n    this.enddateHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            enddate: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            startdate: \"\"\n          })\n        };\n      });\n    };\n\n    this.timelimitHandler = e => {\n      let value = e.target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            timelimit: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            startdate: \"\"\n          })\n        };\n      });\n    };\n\n    this.schedulequizHandler = () => {\n      // validation of user input\n      let errors = validate(this.state.data, {\n        startdate: {\n          datetime: {\n            dateOnly: true,\n            earliest: moment.utc(),\n            message: \"Start Date Cannot be before Today's date\"\n          }\n        },\n        enddate: {\n          datetime: {\n            dateOnly: true,\n            earliest: this.state.data.enddate,\n            message: \"End Date Cannot be before Start date\"\n          }\n        },\n        timelimit: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      });\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      }\n    };\n\n    this.state = {\n      data: {\n        quiztitle: \"Python\",\n        schedulingStatus: \"Scheduled\",\n        startdate: \"\",\n        enddate: \"\",\n        timelimit: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.data.quiztitle), React.createElement(Typography, {\n      style: {\n        textAlign: \"center\"\n      },\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Scheduling Status: \", this.state.data.schedulingStatus), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: this.props.classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(TextField, {\n      type: \"date\",\n      defaultValue: \"2017-05-24\",\n      onChange: this.startdateHandler,\n      value: this.state.data.startdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Day when quiz begins\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.errors.startdate && this.state.errors.startdate[0])), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(TextField, {\n      type: \"date\",\n      defaultValue: \"2017-05-24\",\n      onChange: this.enddateHandler,\n      value: this.state.data.enddate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Last day to give quiz\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.errors.enddate && this.state.errors.enddate[0])), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Time limit\"), React.createElement(TextField, {\n      label: \"Number\",\n      type: \"number\",\n      onChange: this.timelimitHandler,\n      value: this.state.data.timelimit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"(in seconds)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.errors.timelimit && this.state.errors.timelimit[0]))), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.schedulequizHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.data.schedulingStatus === \"Scheduled\" ? \"Reschedule Quiz\" : \"Schedule Quiz\"));\n  }\n\n}\n\nexport default withStyles(styles)(schedulequiz);","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/ScheduleQuiz/index.jsx"],"names":["React","Component","Grid","Typography","TextField","Button","moment","styles","withStyles","validate","extend","validators","datetime","parse","value","options","utc","format","dateOnly","schedulequiz","constructor","props","startdateHandler","e","target","setState","prevState","data","startdate","errors","enddateHandler","enddate","timelimitHandler","timelimit","schedulequizHandler","state","earliest","message","presence","allowEmpty","quiztitle","schedulingStatus","render","classes","root","textAlign","content"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEAA,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,CAACE,UAAT,CAAoBC,QAApC,EAA8C;AAC7C;AACA;AACAC,EAAAA,KAAK,EAAE,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAC/B,WAAO,CAACT,MAAM,CAACU,GAAP,CAAWF,KAAX,CAAR;AACA,GAL4C;AAM7C;AACAG,EAAAA,MAAM,EAAE,UAASH,KAAT,EAAgBC,OAAhB,EAAyB;AAChC,QAAIE,MAAM,GAAGF,OAAO,CAACG,QAAR,GAAmB,YAAnB,GAAkC,qBAA/C;AACA,WAAOZ,MAAM,CAACU,GAAP,CAAWF,KAAX,EAAkBG,MAAlB,CAAyBA,MAAzB,CAAP;AACA;AAV4C,CAA9C;;AAaA,MAAME,YAAN,SAA2BlB,SAA3B,CAAqC;AACpCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAcnBC,gBAdmB,GAcAC,CAAC,IAAI;AACvB,UAAIT,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASV,KAArB;AACA,WAAKW,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNC,UAAAA,IAAI,oBAAOD,SAAS,CAACC,IAAjB;AAAuBC,YAAAA,SAAS,EAAEd;AAAlC,YADE;AAENe,UAAAA,MAAM,oBAAOH,SAAS,CAACG,MAAjB;AAAyBD,YAAAA,SAAS,EAAE;AAApC;AAFA,SAAP;AAIA,OALD;AAMA,KAtBkB;;AAAA,SAwBnBE,cAxBmB,GAwBFP,CAAC,IAAI;AACrB,UAAIT,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASV,KAArB;AACA,WAAKW,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNC,UAAAA,IAAI,oBAAOD,SAAS,CAACC,IAAjB;AAAuBI,YAAAA,OAAO,EAAEjB;AAAhC,YADE;AAENe,UAAAA,MAAM,oBAAOH,SAAS,CAACG,MAAjB;AAAyBD,YAAAA,SAAS,EAAE;AAApC;AAFA,SAAP;AAIA,OALD;AAMA,KAhCkB;;AAAA,SAkCnBI,gBAlCmB,GAkCAT,CAAC,IAAI;AACvB,UAAIT,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASV,KAArB;AACA,WAAKW,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AACNC,UAAAA,IAAI,oBAAOD,SAAS,CAACC,IAAjB;AAAuBM,YAAAA,SAAS,EAAEnB;AAAlC,YADE;AAENe,UAAAA,MAAM,oBAAOH,SAAS,CAACG,MAAjB;AAAyBD,YAAAA,SAAS,EAAE;AAApC;AAFA,SAAP;AAIA,OALD;AAMA,KA1CkB;;AAAA,SA4CnBM,mBA5CmB,GA4CG,MAAM;AAC3B;AACA,UAAIL,MAAM,GAAGpB,QAAQ,CAAC,KAAK0B,KAAL,CAAWR,IAAZ,EAAkB;AACtCC,QAAAA,SAAS,EAAE;AACVhB,UAAAA,QAAQ,EAAE;AACTM,YAAAA,QAAQ,EAAE,IADD;AAETkB,YAAAA,QAAQ,EAAE9B,MAAM,CAACU,GAAP,EAFD;AAGTqB,YAAAA,OAAO,EAAE;AAHA;AADA,SAD2B;AAQtCN,QAAAA,OAAO,EAAE;AACRnB,UAAAA,QAAQ,EAAE;AACTM,YAAAA,QAAQ,EAAE,IADD;AAETkB,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWR,IAAX,CAAgBI,OAFjB;AAGTM,YAAAA,OAAO,EAAE;AAHA;AADF,SAR6B;AAetCJ,QAAAA,SAAS,EAAE;AACVK,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBF,YAAAA,OAAO,EAAE;AAA9B;AADA;AAf2B,OAAlB,CAArB;;AAoBA,UAAIR,MAAJ,EAAY;AACX,aAAKJ,QAAL,CAAc;AACbI,UAAAA;AADa,SAAd;AAGA;AACD,KAvEkB;;AAElB,SAAKM,KAAL,GAAa;AACZR,MAAAA,IAAI,EAAE;AACLa,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,gBAAgB,EAAE,WAFb;AAGLb,QAAAA,SAAS,EAAE,EAHN;AAILG,QAAAA,OAAO,EAAE,EAJJ;AAKLE,QAAAA,SAAS,EAAE;AALN,OADM;AAQZJ,MAAAA,MAAM,EAAE;AARI,KAAb;AAUA;;AA6DDa,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAA4C,MAAA,OAAO,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKV,KAAL,CAAWR,IAAX,CAAgBa,SADlB,CADD,EAIC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAA4C,MAAA,OAAO,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACqB,KAAKV,KAAL,CAAWR,IAAX,CAAgBc,gBADrC,CAJD,EAOC,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWsB,OAAX,CAAmBG,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,YAAY,EAAC,YAFd;AAGC,MAAA,QAAQ,EAAE,KAAKxB,gBAHhB;AAIC,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWR,IAAX,CAAgBC,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EASC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,EAWC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKO,KAAL,CAAWN,MAAX,CAAkBD,SAAlB,IAA+B,KAAKO,KAAL,CAAWN,MAAX,CAAkBD,SAAlB,CAA4B,CAA5B,CADjC,CAXD,CADD,EAgBC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,YAAY,EAAC,YAFd;AAGC,MAAA,QAAQ,EAAE,KAAKE,cAHhB;AAIC,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWR,IAAX,CAAgBI,OAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EASC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVD,EAWC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKI,KAAL,CAAWN,MAAX,CAAkBE,OAAlB,IAA6B,KAAKI,KAAL,CAAWN,MAAX,CAAkBE,OAAlB,CAA0B,CAA1B,CAD/B,CAXD,CAhBD,EA+BC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAGC,oBAAC,SAAD;AACC,MAAA,KAAK,EAAC,QADP;AAEC,MAAA,IAAI,EAAC,QAFN;AAGC,MAAA,QAAQ,EAAE,KAAKC,gBAHhB;AAIC,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWR,IAAX,CAAgBM,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,EAUC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVD,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,EAYC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKE,KAAL,CAAWN,MAAX,CAAkBI,SAAlB,IAA+B,KAAKE,KAAL,CAAWN,MAAX,CAAkBI,SAAlB,CAA4B,CAA5B,CADjC,CAZD,CA/BD,CAPD,EAwDC,oBAAC,MAAD;AACC,MAAA,OAAO,EAAC,WADT;AAEC,MAAA,KAAK,EAAC,SAFP;AAGC,MAAA,OAAO,EAAE,KAAKC,mBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,KAAKC,KAAL,CAAWR,IAAX,CAAgBc,gBAAhB,KAAqC,WAArC,GACE,iBADF,GAEE,eANJ,CAxDD,CADD;AAmEA;;AA9ImC;;AAiJrC,eAAejC,UAAU,CAACD,MAAD,CAAV,CAAmBY,YAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport moment from \"moment\";\n\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport validate from \"validate.js\";\n\nvalidate.extend(validate.validators.datetime, {\n\t// The value is guaranteed not to be null or undefined but otherwise it\n\t// could be anything.\n\tparse: function(value, options) {\n\t\treturn +moment.utc(value);\n\t},\n\t// Input is a unix timestamp\n\tformat: function(value, options) {\n\t\tvar format = options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD hh:mm:ss\";\n\t\treturn moment.utc(value).format(format);\n\t}\n});\n\nclass schedulequiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tquiztitle: \"Python\",\n\t\t\t\tschedulingStatus: \"Scheduled\",\n\t\t\t\tstartdate: \"\",\n\t\t\t\tenddate: \"\",\n\t\t\t\ttimelimit: \"\"\n\t\t\t},\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tstartdateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, startdate: value },\n\t\t\t\terrors: { ...prevState.errors, startdate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tenddateHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, enddate: value },\n\t\t\t\terrors: { ...prevState.errors, startdate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\ttimelimitHandler = e => {\n\t\tlet value = e.target.value;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tdata: { ...prevState.data, timelimit: value },\n\t\t\t\terrors: { ...prevState.errors, startdate: \"\" }\n\t\t\t};\n\t\t});\n\t};\n\n\tschedulequizHandler = () => {\n\t\t// validation of user input\n\t\tlet errors = validate(this.state.data, {\n\t\t\tstartdate: {\n\t\t\t\tdatetime: {\n\t\t\t\t\tdateOnly: true,\n\t\t\t\t\tearliest: moment.utc(),\n\t\t\t\t\tmessage: \"Start Date Cannot be before Today's date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tenddate: {\n\t\t\t\tdatetime: {\n\t\t\t\t\tdateOnly: true,\n\t\t\t\t\tearliest: this.state.data.enddate,\n\t\t\t\t\tmessage: \"End Date Cannot be before Start date\"\n\t\t\t\t}\n\t\t\t},\n\t\t\ttimelimit: {\n\t\t\t\tpresence: { allowEmpty: false, message: \"is required\" }\n\t\t\t}\n\t\t});\n\n\t\tif (errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.classes.root}>\n\t\t\t\t<Typography style={{ textAlign: \"center\" }} variant=\"h3\">\n\t\t\t\t\t{this.state.data.quiztitle}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography style={{ textAlign: \"center\" }} variant=\"subtitle1\">\n\t\t\t\t\tScheduling Status: {this.state.data.schedulingStatus}\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={2} className={this.props.classes.content}>\n\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t<Typography>Start Date</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24\"\n\t\t\t\t\t\t\tonChange={this.startdateHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.startdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">Day when quiz begins</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.startdate && this.state.errors.startdate[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t<Typography>End Date</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tdefaultValue=\"2017-05-24\"\n\t\t\t\t\t\t\tonChange={this.enddateHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.enddate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">Last day to give quiz</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.enddate && this.state.errors.enddate[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t\t<Typography>Time limit</Typography>\n\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Number\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tonChange={this.timelimitHandler}\n\t\t\t\t\t\t\tvalue={this.state.data.timelimit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\">(in seconds)</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t{this.state.errors.timelimit && this.state.errors.timelimit[0]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={this.schedulequizHandler}>\n\t\t\t\t\t{this.state.data.schedulingStatus === \"Scheduled\"\n\t\t\t\t\t\t? \"Reschedule Quiz\"\n\t\t\t\t\t\t: \"Schedule Quiz\"}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(schedulequiz);\n"]},"metadata":{},"sourceType":"module"}