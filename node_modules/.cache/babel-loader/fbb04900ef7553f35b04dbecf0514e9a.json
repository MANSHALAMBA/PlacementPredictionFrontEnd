{"ast":null,"code":"import _objectSpread from \"/home/lambamansha/Desktop/faculty_portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Projectgroup/index.jsx\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form/CreateGroup\";\nimport validate from \"validate.js\";\n\nclass CreateGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState(prevState => {\n        return {\n          data: _objectSpread({}, prevState.data, {\n            [name]: value\n          }),\n          errors: _objectSpread({}, prevState.errors, {\n            [name]: []\n          })\n        };\n      });\n    };\n\n    this.onSubmitHandler = () => {\n      console.log(\"submission handler\"); //validation\n\n      let errors = validate(this.state.data, {\n        groupname: {\n          presence: {\n            allowEmpty: false,\n            message: \"is required\"\n          }\n        }\n      }); // check for errors\n\n      if (errors) {\n        this.setState({\n          errors\n        });\n      }\n    };\n\n    this.state = {\n      data: {\n        groupname: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onChangeHandler: this.onChangeHandler,\n      onSubmit: this.onSubmitHandler,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CreateGroup;","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/ProjectList/components/Projectgroup/index.jsx"],"names":["React","Component","Form","validate","CreateGroup","constructor","props","onChangeHandler","e","target","name","value","setState","prevState","data","errors","onSubmitHandler","console","log","state","groupname","presence","allowEmpty","message","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,eAVmB,GAUDC,CAAC,IAAI;AAAA,wBACGA,CAAC,CAACC,MADL;AAAA,YACbC,IADa,aACbA,IADa;AAAA,YACPC,KADO,aACPA,KADO;AAGrB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLC,UAAAA,IAAI,oBACCD,SAAS,CAACC,IADX;AAEF,aAACJ,IAAD,GAAQC;AAFN,YADC;AAKLI,UAAAA,MAAM,oBACDF,SAAS,CAACE,MADT;AAEJ,aAACL,IAAD,GAAQ;AAFJ;AALD,SAAP;AAUD,OAXD;AAYD,KAzBkB;;AAAA,SA2BnBM,eA3BmB,GA2BD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADsB,CAEtB;;AACA,UAAIH,MAAM,GAAGZ,QAAQ,CAAC,KAAKgB,KAAL,CAAWL,IAAZ,EAAkB;AACrCM,QAAAA,SAAS,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,OAAO,EAAE;AAA9B;AAAZ;AAD0B,OAAlB,CAArB,CAHsB,CAMtB;;AACA,UAAIR,MAAJ,EAAY;AACV,aAAKH,QAAL,CAAc;AAAEG,UAAAA;AAAF,SAAd;AACD;AACF,KArCkB;;AAEjB,SAAKI,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE;AACJM,QAAAA,SAAS,EAAE;AADP,OADK;AAIXL,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AA+BDS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,eAAe,EAAE,KAAKjB,eADxB;AAEE,MAAA,QAAQ,EAAE,KAAKS,eAFjB;AAGE,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWJ,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAhDiC;;AAmDpC,eAAeX,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form/CreateGroup\";\nimport validate from \"validate.js\";\n\nclass CreateGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        groupname: \"\"\n      },\n      errors: {}\n    };\n  }\n\n  onChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState(prevState => {\n      return {\n        data: {\n          ...prevState.data,\n          [name]: value\n        },\n        errors: {\n          ...prevState.errors,\n          [name]: []\n        }\n      };\n    });\n  };\n\n  onSubmitHandler = () => {\n    console.log(\"submission handler\");\n    //validation\n    let errors = validate(this.state.data, {\n      groupname: { presence: { allowEmpty: false, message: \"is required\" } }\n    });\n    // check for errors\n    if (errors) {\n      this.setState({ errors });\n    }\n  };\n\n  render() {\n    return (\n      <Form\n        onChangeHandler={this.onChangeHandler}\n        onSubmit={this.onSubmitHandler}\n        errors={this.state.errors}\n      />\n    );\n  }\n}\n\nexport default CreateGroup;\n"]},"metadata":{},"sourceType":"module"}