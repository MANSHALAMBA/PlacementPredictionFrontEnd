{"ast":null,"code":"import { USER_LOGGED_IN, USER_LOGGED_OUT } from \"./types/auth\";\nimport { USER_TOKEN, LOGGEDIN_USER } from \"constants/storage/auth\";\nimport { Storage } from \"helpers\";\nexport const onLogIn = (user, token) => async dispatch => {\n  await Storage.save(USER_TOKEN, token);\n  await Storage.saveJSON(LOGGEDIN_USER, user);\n  dispatch(doLogInAction({\n    user,\n    token\n  }));\n};\nexport const onLogOut = () => async dispatch => {\n  await Storage.remove(USER_TOKEN);\n  await Storage.remove(LOGGEDIN_USER);\n  dispatch(doLogOutAction());\n};\nexport const doLogInAction = payload => ({\n  type: USER_LOGGED_IN,\n  payload\n});\nexport const doLogOutAction = () => ({\n  type: USER_LOGGED_OUT\n});","map":{"version":3,"sources":["/media/lambamansha/Seagate Expansion Drive/minorproject/src/store/actions/auth.js"],"names":["USER_LOGGED_IN","USER_LOGGED_OUT","USER_TOKEN","LOGGEDIN_USER","Storage","onLogIn","user","token","dispatch","save","saveJSON","doLogInAction","onLogOut","remove","doLogOutAction","payload","type"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,cAAhD;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AAEA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAMC,QAAN,IAAkB;AACxD,QAAMJ,OAAO,CAACK,IAAR,CAAaP,UAAb,EAAyBK,KAAzB,CAAN;AACA,QAAMH,OAAO,CAACM,QAAR,CAAiBP,aAAjB,EAAgCG,IAAhC,CAAN;AACAE,EAAAA,QAAQ,CAACG,aAAa,CAAC;AAAEL,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAAd,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,QAAQ,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAC9C,QAAMJ,OAAO,CAACS,MAAR,CAAeX,UAAf,CAAN;AACA,QAAME,OAAO,CAACS,MAAR,CAAeV,aAAf,CAAN;AACAK,EAAAA,QAAQ,CAACM,cAAc,EAAf,CAAR;AACD,CAJM;AAMP,OAAO,MAAMH,aAAa,GAAGI,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEhB,cAAR;AAAwBe,EAAAA;AAAxB,CAAL,CAA7B;AACP,OAAO,MAAMD,cAAc,GAAG,OAAO;AAAEE,EAAAA,IAAI,EAAEf;AAAR,CAAP,CAAvB","sourcesContent":["import { USER_LOGGED_IN, USER_LOGGED_OUT } from \"./types/auth\";\nimport { USER_TOKEN, LOGGEDIN_USER } from \"constants/storage/auth\";\n\nimport { Storage } from \"helpers\";\n\nexport const onLogIn = (user, token) => async dispatch => {\n  await Storage.save(USER_TOKEN, token);\n  await Storage.saveJSON(LOGGEDIN_USER, user);\n  dispatch(doLogInAction({ user, token }));\n};\n\nexport const onLogOut = () => async dispatch => {\n  await Storage.remove(USER_TOKEN);\n  await Storage.remove(LOGGEDIN_USER);\n  dispatch(doLogOutAction());\n};\n\nexport const doLogInAction = payload => ({ type: USER_LOGGED_IN, payload });\nexport const doLogOutAction = () => ({ type: USER_LOGGED_OUT });\n"]},"metadata":{},"sourceType":"module"}