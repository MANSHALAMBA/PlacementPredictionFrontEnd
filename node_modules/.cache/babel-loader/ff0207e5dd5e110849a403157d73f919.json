{"ast":null,"code":"var _jsxFileName = \"/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/index.jsx\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport EditToolbar from \"./components/EditToolbar\";\nimport Header from \"./components/header\";\nimport { Typography } from \"@material-ui/core\";\nimport Visualization from \"./components/Visualization\";\nimport MaterialTable from \"material-table\";\nimport QuestionForm from \"./components/QuestionsForm\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\n\nclass EditQuiz extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"Question\",\n      field: \"questiontitle\"\n    }, {\n      title: \"Options\",\n      field: \"options\",\n      render: rowData => rowData.options.map(option => {\n        if (option == rowData.correctOption) {\n          return React.createElement(\"li\", {\n            style: {\n              color: \"green\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, option);\n        } else return React.createElement(\"li\", {\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, option);\n      })\n    }, {\n      title: \"Difficulty Level\",\n      field: \"difficultyLevel\"\n    }, {\n      title: \"Skills\",\n      field: \"skills\",\n      render: rowData => rowData.skills.map(skill => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, skill);\n      })\n    }, {\n      title: \"Id\",\n      field: \"id\",\n      hidden: true\n    }, {\n      title: \"Correct Option\",\n      field: \"correctOption\",\n      hidden: true\n    }];\n    this.actions = [{\n      icon: \"edit\",\n      tooltip: \"Edit Question\",\n      onClick: (event, rowData) => {\n        console.log(rowData);\n        return this.handleOpenForm(\"EDIT\", rowData);\n      }\n    }, {\n      icon: \"delete_outline\",\n      tooltip: \"Delete Question\",\n      onClick: (event, rowData) => {\n        alert(\"Question deleted\");\n      }\n    }];\n\n    this.handleOpenForm = (mode = \"ADD\", data = null) => {\n      this.setState({\n        form: {\n          open: true,\n          mode,\n          data\n        }\n      });\n    };\n\n    this.handleCloseForm = () => {\n      this.setState({\n        form: {\n          open: false,\n          mode: \"ADD\",\n          data: null\n        }\n      });\n    };\n\n    this.state = {\n      data: {\n        title: \"Python\",\n        skills: [\"ds\", \"algo\"],\n        numberOfQuestions: 5,\n        Questions: [{\n          questiontitle: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: \"a\",\n          difficultyLevel: \"easy\",\n          skills: [\"ds\"],\n          id: \"1\"\n        }, {\n          questiontitle: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: \"b\",\n          difficultyLevel: \"hard\",\n          skills: [\"algo\"],\n          id: \"2\"\n        }, {\n          questiontitle: \"what is python\",\n          options: [\"a\", \"b\"],\n          correctOption: \"a\",\n          difficultyLevel: \"medium\",\n          skills: [\"ds\"],\n          id: \"3\"\n        }],\n        estimatedTime: 160\n      },\n      form: {\n        open: false,\n        mode: \"ADD\",\n        data: null\n      },\n      isLoading: true\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, !this.state.isLoading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.data.title)), React.createElement(EditToolbar, {\n      handleOpenForm: this.handleOpenForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.state.form.open && React.createElement(QuestionForm, {\n      open: this.state.form.open,\n      mode: this.state.form.mode,\n      data: this.state.form.data,\n      handleCloseForm: this.handleCloseForm,\n      skills: this.state.data.skills,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Header, {\n      numberOfQuestions: this.state.data.numberOfQuestions,\n      estimatedTime: this.state.data.estimatedTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Visualization, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      columns: this.columns,\n      data: this.state.data.Questions,\n      options: {\n        filtering: true,\n        actionsColumnIndex: -1\n      },\n      actions: this.actions,\n      title: \"Questions List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })))) : React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(EditQuiz));","map":{"version":3,"sources":["/home/lambamansha/Desktop/faculty_portal/src/views/Quiz/components/EditQuiz/index.jsx"],"names":["React","Component","styles","withStyles","EditToolbar","Header","Typography","Visualization","MaterialTable","QuestionForm","Loader","connect","EditQuiz","constructor","props","columns","title","field","render","rowData","options","map","option","correctOption","color","skills","skill","hidden","actions","icon","tooltip","onClick","event","console","log","handleOpenForm","alert","mode","data","setState","form","open","handleCloseForm","state","numberOfQuestions","Questions","questiontitle","difficultyLevel","id","estimatedTime","isLoading","classes","root","heading","content","filtering","actionsColumnIndex","mapStateToProps","token","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAChCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SA2CnBC,OA3CmB,GA2CT,CACT;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KADS,EAET;AACCD,MAAAA,KAAK,EAAE,SADR;AAECC,MAAAA,KAAK,EAAE,SAFR;AAGCC,MAAAA,MAAM,EAAEC,OAAO,IACdA,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAoBC,MAAM,IAAI;AAC7B,YAAIA,MAAM,IAAIH,OAAO,CAACI,aAAtB,EAAqC;AACpC,iBAAO;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCF,MAAhC,CAAP;AACA,SAFD,MAEO,OAAO;AAAI,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BF,MAA9B,CAAP;AACP,OAJD;AAJF,KAFS,EAYT;AACCN,MAAAA,KAAK,EAAE,kBADR;AAECC,MAAAA,KAAK,EAAE;AAFR,KAZS,EAgBT;AACCD,MAAAA,KAAK,EAAE,QADR;AAECC,MAAAA,KAAK,EAAE,QAFR;AAGCC,MAAAA,MAAM,EAAEC,OAAO,IACdA,OAAO,CAACM,MAAR,CAAeJ,GAAf,CAAmBK,KAAK,IAAI;AAC3B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAL,CAAP;AACA,OAFD;AAJF,KAhBS,EAwBT;AACCV,MAAAA,KAAK,EAAE,IADR;AAECC,MAAAA,KAAK,EAAE,IAFR;AAGCU,MAAAA,MAAM,EAAE;AAHT,KAxBS,EA6BT;AACCX,MAAAA,KAAK,EAAE,gBADR;AAECC,MAAAA,KAAK,EAAE,eAFR;AAGCU,MAAAA,MAAM,EAAE;AAHT,KA7BS,CA3CS;AAAA,SA+EnBC,OA/EmB,GA+ET,CACT;AACCC,MAAAA,IAAI,EAAE,MADP;AAECC,MAAAA,OAAO,EAAE,eAFV;AAGCC,MAAAA,OAAO,EAAE,CAACC,KAAD,EAAQb,OAAR,KAAoB;AAC5Bc,QAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,eAAO,KAAKgB,cAAL,CAAoB,MAApB,EAA4BhB,OAA5B,CAAP;AACA;AANF,KADS,EAUT;AACCU,MAAAA,IAAI,EAAE,gBADP;AAECC,MAAAA,OAAO,EAAE,iBAFV;AAGCC,MAAAA,OAAO,EAAE,CAACC,KAAD,EAAQb,OAAR,KAAoB;AAC5BiB,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AALF,KAVS,CA/ES;;AAAA,SAkGnBD,cAlGmB,GAkGF,CAACE,IAAI,GAAG,KAAR,EAAeC,IAAI,GAAG,IAAtB,KAA+B;AAC/C,WAAKC,QAAL,CAAc;AACbC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcJ,UAAAA,IAAd;AAAoBC,UAAAA;AAApB;AADO,OAAd;AAGA,KAtGkB;;AAAA,SAuGnBI,eAvGmB,GAuGD,MAAM;AACvB,WAAKH,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE,KAAR;AAAeJ,UAAAA,IAAI,EAAE,KAArB;AAA4BC,UAAAA,IAAI,EAAE;AAAlC;AAAR,OAAd;AACA,KAzGkB;;AAElB,SAAKK,KAAL,GAAa;AACZL,MAAAA,IAAI,EAAE;AACLtB,QAAAA,KAAK,EAAE,QADF;AAELS,QAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,MAAP,CAFH;AAGLmB,QAAAA,iBAAiB,EAAE,CAHd;AAILC,QAAAA,SAAS,EAAE,CACV;AACCC,UAAAA,aAAa,EAAE,gBADhB;AAEC1B,UAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,CAFV;AAGCG,UAAAA,aAAa,EAAE,GAHhB;AAICwB,UAAAA,eAAe,EAAE,MAJlB;AAKCtB,UAAAA,MAAM,EAAE,CAAC,IAAD,CALT;AAMCuB,UAAAA,EAAE,EAAE;AANL,SADU,EASV;AACCF,UAAAA,aAAa,EAAE,gBADhB;AAEC1B,UAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,CAFV;AAGCG,UAAAA,aAAa,EAAE,GAHhB;AAICwB,UAAAA,eAAe,EAAE,MAJlB;AAKCtB,UAAAA,MAAM,EAAE,CAAC,MAAD,CALT;AAMCuB,UAAAA,EAAE,EAAE;AANL,SATU,EAiBV;AACCF,UAAAA,aAAa,EAAE,gBADhB;AAEC1B,UAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,CAFV;AAGCG,UAAAA,aAAa,EAAE,GAHhB;AAICwB,UAAAA,eAAe,EAAE,QAJlB;AAKCtB,UAAAA,MAAM,EAAE,CAAC,IAAD,CALT;AAMCuB,UAAAA,EAAE,EAAE;AANL,SAjBU,CAJN;AA8BLC,QAAAA,aAAa,EAAE;AA9BV,OADM;AAiCZT,MAAAA,IAAI,EAAE;AACLC,QAAAA,IAAI,EAAE,KADD;AAELJ,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAjCM;AAsCZY,MAAAA,SAAS,EAAE;AAtCC,KAAb;AAwCA;;AAiEDhC,EAAAA,MAAM,GAAG;AAAA,UACAiC,OADA,GACY,KAAKrC,KADjB,CACAqC,OADA;AAER,WACC;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,CAAC,KAAKT,KAAL,CAAWO,SAAZ,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKV,KAAL,CAAWL,IAAX,CAAgBtB,KADlB,CADD,CADD,EAMC,oBAAC,WAAD;AAAa,MAAA,cAAc,EAAE,KAAKmB,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,EAOE,KAAKQ,KAAL,CAAWH,IAAX,CAAgBC,IAAhB,IACA,oBAAC,YAAD;AACC,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWH,IAAX,CAAgBC,IADvB;AAEC,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWH,IAAX,CAAgBH,IAFvB;AAGC,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWH,IAAX,CAAgBF,IAHvB;AAIC,MAAA,eAAe,EAAE,KAAKI,eAJvB;AAKC,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWL,IAAX,CAAgBb,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAgBC;AAAK,MAAA,SAAS,EAAE0B,OAAO,CAACG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACC,MAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWL,IAAX,CAAgBM,iBADpC;AAEC,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWL,IAAX,CAAgBW,aAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AACC,MAAA,OAAO,EAAE,KAAKlC,OADf;AAEC,MAAA,IAAI,EAAE,KAAK4B,KAAL,CAAWL,IAAX,CAAgBO,SAFvB;AAGC,MAAA,OAAO,EAAE;AACRU,QAAAA,SAAS,EAAE,IADH;AAERC,QAAAA,kBAAkB,EAAE,CAAC;AAFb,OAHV;AAOC,MAAA,OAAO,EAAE,KAAK5B,OAPf;AAQC,MAAA,KAAK,EAAC,gBARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CARD,CAhBD,CADA,GAwCA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CADD;AA8CA;;AA5J+B;;AA+JjC,MAAM6B,eAAe,GAAGd,KAAK,IAAI;AAChC,SAAO;AACNe,IAAAA,KAAK,EAAEf,KAAK,CAACgB,IAAN,CAAWD;AADZ,GAAP;AAGA,CAJD;;AAMA,eAAe/C,OAAO,CAAC8C,eAAD,CAAP,CAAyBtD,UAAU,CAACD,MAAD,CAAV,CAAmBU,QAAnB,CAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/styles\";\nimport EditToolbar from \"./components/EditToolbar\";\nimport Header from \"./components/header\";\nimport { Typography } from \"@material-ui/core\";\nimport Visualization from \"./components/Visualization\";\nimport MaterialTable from \"material-table\";\nimport QuestionForm from \"./components/QuestionsForm\";\nimport { Loader } from \"components\";\nimport { connect } from \"react-redux\";\n\nclass EditQuiz extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\ttitle: \"Python\",\n\t\t\t\tskills: [\"ds\", \"algo\"],\n\t\t\t\tnumberOfQuestions: 5,\n\t\t\t\tQuestions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tquestiontitle: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: \"a\",\n\t\t\t\t\t\tdifficultyLevel: \"easy\",\n\t\t\t\t\t\tskills: [\"ds\"],\n\t\t\t\t\t\tid: \"1\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tquestiontitle: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: \"b\",\n\t\t\t\t\t\tdifficultyLevel: \"hard\",\n\t\t\t\t\t\tskills: [\"algo\"],\n\t\t\t\t\t\tid: \"2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tquestiontitle: \"what is python\",\n\t\t\t\t\t\toptions: [\"a\", \"b\"],\n\t\t\t\t\t\tcorrectOption: \"a\",\n\t\t\t\t\t\tdifficultyLevel: \"medium\",\n\t\t\t\t\t\tskills: [\"ds\"],\n\t\t\t\t\t\tid: \"3\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\testimatedTime: 160\n\t\t\t},\n\t\t\tform: {\n\t\t\t\topen: false,\n\t\t\t\tmode: \"ADD\",\n\t\t\t\tdata: null\n\t\t\t},\n\t\t\tisLoading: true\n\t\t};\n\t}\n\tcolumns = [\n\t\t{ title: \"Question\", field: \"questiontitle\" },\n\t\t{\n\t\t\ttitle: \"Options\",\n\t\t\tfield: \"options\",\n\t\t\trender: rowData =>\n\t\t\t\trowData.options.map(option => {\n\t\t\t\t\tif (option == rowData.correctOption) {\n\t\t\t\t\t\treturn <li style={{ color: \"green\" }}>{option}</li>;\n\t\t\t\t\t} else return <li style={{ color: \"red\" }}>{option}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\ttitle: \"Difficulty Level\",\n\t\t\tfield: \"difficultyLevel\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"Skills\",\n\t\t\tfield: \"skills\",\n\t\t\trender: rowData =>\n\t\t\t\trowData.skills.map(skill => {\n\t\t\t\t\treturn <li>{skill}</li>;\n\t\t\t\t})\n\t\t},\n\t\t{\n\t\t\ttitle: \"Id\",\n\t\t\tfield: \"id\",\n\t\t\thidden: true\n\t\t},\n\t\t{\n\t\t\ttitle: \"Correct Option\",\n\t\t\tfield: \"correctOption\",\n\t\t\thidden: true\n\t\t}\n\t];\n\n\tactions = [\n\t\t{\n\t\t\ticon: \"edit\",\n\t\t\ttooltip: \"Edit Question\",\n\t\t\tonClick: (event, rowData) => {\n\t\t\t\tconsole.log(rowData);\n\t\t\t\treturn this.handleOpenForm(\"EDIT\", rowData);\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\ticon: \"delete_outline\",\n\t\t\ttooltip: \"Delete Question\",\n\t\t\tonClick: (event, rowData) => {\n\t\t\t\talert(\"Question deleted\");\n\t\t\t}\n\t\t}\n\t];\n\n\thandleOpenForm = (mode = \"ADD\", data = null) => {\n\t\tthis.setState({\n\t\t\tform: { open: true, mode, data }\n\t\t});\n\t};\n\thandleCloseForm = () => {\n\t\tthis.setState({ form: { open: false, mode: \"ADD\", data: null } });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t{!this.state.isLoading ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className={classes.heading}>\n\t\t\t\t\t\t\t<Typography align=\"center\" variant=\"h3\">\n\t\t\t\t\t\t\t\t{this.state.data.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<EditToolbar handleOpenForm={this.handleOpenForm} />\n\t\t\t\t\t\t{this.state.form.open && (\n\t\t\t\t\t\t\t<QuestionForm\n\t\t\t\t\t\t\t\topen={this.state.form.open}\n\t\t\t\t\t\t\t\tmode={this.state.form.mode}\n\t\t\t\t\t\t\t\tdata={this.state.form.data}\n\t\t\t\t\t\t\t\thandleCloseForm={this.handleCloseForm}\n\t\t\t\t\t\t\t\tskills={this.state.data.skills}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\tnumberOfQuestions={this.state.data.numberOfQuestions}\n\t\t\t\t\t\t\t\testimatedTime={this.state.data.estimatedTime}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Visualization />\n\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\t\tdata={this.state.data.Questions}\n\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\t\t\t\tactionsColumnIndex: -1\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tactions={this.actions}\n\t\t\t\t\t\t\t\t\ttitle=\"Questions List\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<Loader />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttoken: state.auth.token\n\t};\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(EditQuiz));\n"]},"metadata":{},"sourceType":"module"}